              ~%~%~%~%~%~%~%~  j e f o r t h . 3 w e  ~%~%~%~%~%~%~%~
                      The jeforth with a three words engine
                 Same kernel - jeforth.js, jeforth.f, voc.f - for
                 all applications - HTA, HTM, Node.js - and more?
                    http://github.com/hcchengithub/jeforth.3we

---------- developping log --------------------------------------------------------------

[x] first line of jeforth.f is strange. I skip it now. Need to find out the reason someday.  hcchen5600 2014/01/28 11:39:49
    ==> fso does not support utf-8, ado does.
[x] why UTF-8 chinese characters are not shown correctly? ==> big5 is ok!
    ==> fso does not support utf-8, ado does.
[X] jquery.terminal-0.7.7.js  ==> I give up jQuery-terminal when it comes to HTA.

    > 552           var data = $.Storage.get(name + 'commands');
    >       alert(name+"==>"+data);
    > 553           data = data ? new Function('return ' + data + ';')() : [];
    > 554           var pos = data.length-1;

    How to make a Terminal (comamnd line, shell like) U/I on Web page?
    See this answer ==> evernote:///view/2472143/s22/bf00c410-9727-401f-98a7-221c8fc00558/bf00c410-9727-401f-98a7-221c8fc00558/

[x] the screen output is a little strange, messy. Find a SRP.
    ==> print() probably is the root cause, it wrap around long lines. Looks like the jQuery-terminal
        thinks of the right-edge with a wrong number.
    ==> When use 'body' instead of a DIV component, the jQuery-terminal can not scroll up and the
        bottom line can not see!
    ==> So, give up using jQuery-terminal? Sure, ok this is it!
        ==> [/] simplify the SRP and report to the jQuery-terminal author.
    ==> [/] also consider to use termlib.js @ evernote:///view/2472143/s22/6df50a24-f3b8-4ae4-afc5-45d7e180b3dc/6df50a24-f3b8-4ae4-afc5-45d7e180b3dc/
    ==> [x] Try normal HTML terminal first
        ------ http://jsfiddle.net/hcchen/9Kr5E/ hcchen/jsfiddle ------------------
        << HTML section >>
            <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
            <div id="screenoutput">恭喜發財！</div>
            <div id="keyboardinput">
                <span>root@host</span>&nbsp;
                <keyboardinput type="text" id="command" />
            </div>

        << JavaScript section >>

            $("#command").keyup(function (e) {
                if (e.keyCode == 13) {
                    submit();
                }
            });

            var submit = function () {
                var command = document.getElementById("command").value;
                var outputel = document.getElementById("screenoutput");
                var div = document.createElement("div");
                div.innerHTML = "root@host " + command;
                outputel.appendChild(div);
                document.getElementById("command").value = "";
            };
    ==> I give up jQuery-terminal when it comes to HTA.

[x] In .3nw jsEvalRaw's return value spec was quirky, it was ( data errormsg ), make it simpler
    ( data, errormsg, flag) ?
    jsEvalRaw is a very useful word. By using jsEvalRaw, we don't need to try{}catch{} every
    system call. E.g. readTextFile() and writeTextFile() become much easier.

[x] Now start to port wsh.f (wmi.f excel.f ... )

[x] Make <vbs> .... </vbs> <=== 研究 WSC 就是為了要 support 這組有趣的命令
    Study how to combine VBscipt and JScript
    HTC http://msdn.microsoft.com/en-us/library/ms532146(v=vs.85).aspx
    WSC or WSH gui interface with IE or HTA http://computer-programming-forum.com/61-wsh/9dad42d8c1e3a878.htm

    hcchen5600 2014/07/01 08:44:41 It's very easy. See below hcchen5600 2014/06/30 17:22:40

[/] WSC can be used in VBScript even wthout registered.
    Ask Michael Harris, if same thing can be done in JScript? ==> Now I realized, even if it
    would turn out that only VBscript can GetObject(..wsc..) is good enough. jeforth.hta uses
    that VBScript to launch jeforth.js would be fine.
    [x] Put the jeforth.js into jeforth.wsc, Open jeforth.WSC in jeforth.hta
        ==> use <script src='jeforth.js'></script> to include jeforth.js in WSC is ok.
    [/] we can publicate properties and methods but how to publicate objects?
        <public>
        <property name="propertyname"/>
        <property name="kvm"/>
        <method name="methodname"/>
        </public>
        ==> If you are thinking of a <object> tag, see this http://msdn.microsoft.com/en-us/library/thwwf7y9(v=vs.84).aspx
            But it's wrong anyway. An object is simply a property I guess.
    [*] Note! Only define things in WSC, don't try to run anything in WSC.
    [/] By the experiments of Dropbox\learnings\JavaScript\WSC , if run 2.vbs then
        JS section in 2.wsc doesn't know about WScript.echo but MsgBox of VBS works fine.
        why? WSC do not have any I/O? unless that are VBS built-in, right? This is great!
        VBScript has many built-in U/I functions.

[x] Recent jeforth.3hta on Github is v1.00, it prints to a <div> immediately but they
    do not appear on the web page immediately! <=== Note, because jeforth for-next loop is a blocking
    process. Thus, "print" and "accept" need to refer to plateform.f in jeforth.3nw which is my best
    practice dealing with none-blocking programming.

    \ By using 'sleep' command introduced since jeforth.3nw, I can make KVM none-blocking. See below
    \ example, it works fine on jeforth.3hta v1.00 too.
    : test for r@ . space 1 sleep next ;
    cls 1000 last execute

    \ But I find another way without using 'sleep' and it's much mush faster,
    : test for r@ . space js> scrollToElement($('#endofpage')) next ;
    cls 1000 last execute

[/] 承上, I should designe a word to scroll to end of the display area.
    Calling the scrolling system call gives the browser some time to breathe.
    ==> scrollToElement() is good enough. If you are thinking about jeforth's example, it's,
        <js>
            var o = document.getElementById('outputbox');
            o.scrollTop = o.scrollHeight;
        </js>

[x] Now by utilizing WSC, I think that I can combine jeforth.3wsh and jeforth.3hta or even jeforth.3wsf
    Because they all based on the same jeforth.wsc.
    HTA is really a sinking boat http://social.technet.microsoft.com/Forums/scriptcenter/en-US/c21b847c-35b4-46ab-a609-17e7fd47638e/how-to-open-the-f12-key-debugger-in-hta-like-ie?forum=ITCG#c21b847c-35b4-46ab-a609-17e7fd47638e
    ==> No need to complicate wsc this way, see 2014/02/07 13:48:05

[x] hcchen5600 2014/02/07 13:48:05
    WSC's purpose is letting jeforth to support <vb> </vb> commands then we don't need to
    bring entire jeforth.js into the wsc file!!
    ==> Yeah! True. My .wsc has only a vbscript section that exports properties and methods.
        then they can be accessed from jeforth by wsc.propertyname and wsc.methodname().

    <text>
        ' Disk.vbs
        ' Sample VBS WMI
        ' Author Guy Thomas http://computerperformance.co.uk/
        ' http://www.computerperformance.co.uk/vbscript/wmi_basics.htm
        ' Version 1.5 - November 2010
        ' -----------------------------------------------'
        Option Explicit
        Dim objWMIService, objItem, colItems, strComputer, intDrive

        ' On Error Resume Next
        strComputer = "."
        intDrive = 0

        ' WMI connection to Root CIM
        Set objWMIService = GetObject("winmgmts:\\" _
        & strComputer & "\root\cimv2")
        Set colItems = objWMIService.ExecQuery(_
        "Select * from Win32_DiskDrive")

        ' Classic For Next Loop
        For Each objItem in colItems
        intDrive = intDrive + 1
        print "DiskDrive " & intDrive & vbCrLf & _
        "Caption: " & objItem.Caption & vbCrLf & _
        "Description: " & objItem.Description & vbCrLf & _
        "Manufacturer: " & objItem.Manufacturer & vbCrLf & _
        "Model: " & objItem.Model & vbCrLf & _
        "Name: " & objItem.Name & vbCrLf & _
        "Partitions: " & objItem.Partitions & vbCrLf & _
        "Size: " & objItem.Size & vbCrLf & _
        "Status: " & objItem.Status & vbCrLf & _
        "SystemName: " & objItem.SystemName & vbCrLf & _
        "TotalCylinders: " & objItem.TotalCylinders & vbCrLf & _
        "TotalHeads: " & objItem.TotalHeads & vbCrLf & _
        "TotalSectors: " & objItem.TotalSectors & vbCrLf & _
        "TotalTracks: " & objItem.TotalTracks & vbCrLf & _
        "TracksPerCylinder: " & objItem.TracksPerCylinder
        Next

        ' End of Sample Disk VBScript
    </text> js> vbs.displayBuffer="";vbs.exec(pop());vbs.displayBuffer cls .

    -------------------------------------------------------------------------------
    W/O using WSC works fine too
    -------------------------------------------------------------------------------
    <text>
        ' Disk.vbs
        ' Sample VBS WMI
        ' Author Guy Thomas http://computerperformance.co.uk/
        ' http://www.computerperformance.co.uk/vbscript/wmi_basics.htm
        ' Version 1.5 - November 2010
        ' -----------------------------------------------'
        Option Explicit
        Dim objWMIService, objItem, colItems, strComputer, intDrive

        ' On Error Resume Next
        strComputer = "."
        intDrive = 0

        ' WMI connection to Root CIM
        Set objWMIService = GetObject("winmgmts:\\" _
        & strComputer & "\root\cimv2")
        Set colItems = objWMIService.ExecQuery(_
        "Select * from Win32_DiskDrive")

        ' Classic For Next Loop
        For Each objItem in colItems
        intDrive = intDrive + 1
        print "DiskDrive " & intDrive & vbCrLf & _
        "Caption: " & objItem.Caption & vbCrLf & _
        "Description: " & objItem.Description & vbCrLf & _
        "Manufacturer: " & objItem.Manufacturer & vbCrLf & _
        "Model: " & objItem.Model & vbCrLf & _
        "Name: " & objItem.Name & vbCrLf & _
        "Partitions: " & objItem.Partitions & vbCrLf & _
        "Size: " & objItem.Size & vbCrLf & _
        "Status: " & objItem.Status & vbCrLf & _
        "SystemName: " & objItem.SystemName & vbCrLf & _
        "TotalCylinders: " & objItem.TotalCylinders & vbCrLf & _
        "TotalHeads: " & objItem.TotalHeads & vbCrLf & _
        "TotalSectors: " & objItem.TotalSectors & vbCrLf & _
        "TotalTracks: " & objItem.TotalTracks & vbCrLf & _
        "TracksPerCylinder: " & objItem.TracksPerCylinder
        Next

        ' End of Sample Disk VBScript
    </text> js> vbExecute(pop())

[x] We totally don't need WSC if the purpose is letting jeforth to support <vb> </vb> commands.
    HTA allows different language sections to reference each other! Shit, I didn't know.

[x] wsh.f Try to support the 'include' command to auto-search the given file.
    done! hcchen5600 2014/07/13 15:38:04

[x] http://www.104case.com.tw/memberp/member_seek_qa.cfm?seekno=815367042306027563&mode=2
    黃嘉祥
    服務的金額這確實是令人頭痛的問題,有時候只是”江湖一點訣”根本沒什麼,要收費我也收的很不好意思,像
    您104貼的那個問題,只要加上浮動設定就可以解決了
    ＜div id=”keyboardinput” style=”position:absolute; bottom:0;”＞
    除非您有更進一步的需求再做調整。 我目前的配合方式：1.單件報價 - 次月或累積到一定的金額($5000)時
    再付款。 2.月聘維護 - 依公司維護需求/等級定價(這部分可能要詳談)。 我通常都建議初期採用單件，除非
    很確定需求和內容，不然採用月聘容易產生誤會(ex:錢付了,結果整個月只處理兩件小事，或一個月內超過20
    件複雜案，超過維護門檻)如果是像104那個小問題，沒有時間壓力要馬上解決的話...我看我們就交個朋友，透
    過mail處理掉就ok了
    2014/02/12 04:49

[x] Wrtie a debug console, 'jsc' command.
    See jeforth.js function panic(msg,severity) when severity!=false.
    Consider to use VBScript's MsgBox and InpubBox.
    No need to use VB, JavaScript has similar built-in functions:
        js: alert('msg')  js> confirm('msg')  js> prompt('msg')
    [x] hcchen5600 2014/07/16 10:09:47 利用 eval() 會認得 local variable 的特性。
    ==> Bingo!!
        kvm.jsc.prompt = "111";eval(kvm.jsc.xt);

[x] 目前 gitHub 上有一版基本版 voc.f ready -- hcchen5600 2014/02/28 15:25:14

[x] hcchen5600 2014/06/30 14:08:56 還在搞 <vb> ... </vb> 的準備。在 Github 上弄了個 Develop branch 方便 backup 用。
    jeforth.3hta\playground\vb.f 有些進展。
    先把本來 jeforth.hta 裡的 vbs section 整個弄走，放進 vbs/basic.vbs ---->
    vb.f 裡實驗用 vbExecute(pop()) 來定義 vbs function or subroutine 有成功！但只能在同一個 block 裡存在。如何把
    它 assign 給一個 name ?
    If not doable, then being able to include ~.vbs is good enough.
    hcchen5600 2014/06/30 17:22:40 <vb> ... </vb> is ok now at playground/vb.f.

[x] hcchen5600 2014/06/30 17:23:43
    kvm.something can be accessed in <vb> section.
    js> kvm obj>keys .
    I got ===> init,reset,panic,*fortheval*,see,suspendForthVM,resumeForthVM,stack,words OK <vb>
    many of kvm export functions are not used at all, and we need push() and pop(). ===> done!
    All kvm memvers can be used in <vb> section happily.
    Example:
    <vb> kvm.push(kvm.tos()) </vb> <------- this works like 'DUP' command.
    vb: vb> are done too. Commit it.

[x] Many useful VBS examples are here
    http://msdn.microsoft.com/en-us/library/aa394599(v=vs.85).aspx
    http://technet.microsoft.com/en-us/library/ee692768.aspx

[x] tos(),pop(),push() can be used in forth code directly but not VBS code.
    Unless jeforth.hta introduces them to global. Let's do it ..... done!
    Now we can use them directly in <vb> sections.

[x] 玩 self 或 window object 時，發現新大陸！ window.prompt() 本來就有，可以用來
    收 input line !! 所以 prompt = 'OK ' 要改名成 kvmPrompt. ==> 3hta, 3nw both done. hcchen5600 2014/07/03 10:41:56

    在 jeforth console 下，用 JavaScript 的 self 就可以看到這些東西。我覺得這時
    的 self 應該是 kvm 但其實是 window。搞不懂！

    OK js> self obj>keys .           \  ----- 3HTA -----
    Refer to MSDN @ http://msdn.microsoft.com/en-us/library/ie/ms535873(v=vs.85).aspx

     $, jQuery, kvm, WshShell, document, styleMedia, clientInformation,
    clipboardData, closed, defaultStatus, event, external,
    maxConnectionsPerServer, offscreenBuffering, onfocusin, onfocusout,
    onhelp, onmouseenter, onmouseleave, screenLeft, screenTop, status,
    innerHeight, innerWidth, outerHeight, outerWidth, pageXOf fset,
    pageYOffset, screen, screenX, screenY, frameElement, frames, history,
    leng th, location, name, navigator, onabort, onafterprint,
    onbeforeprint, onbeforeun load, onblur, oncanplay, oncanplaythrough,
    onchange, onclick, oncontextmenu, on dblclick, ondrag, ondragend,
    ondragenter, ondragleave, ondragover, ondragstart , ondrop,
    ondurationchange, onemptied, onended, onerror, onfocus, onhashchange,
    oninput, onkeydown, onkeypress, onkeyup, onload, onloadeddata,
    onloadedmetadat a, onloadstart, onmessage, onmousedown, onmousemove,
    onmouseout, onmouseover, o nmouseup, onmousewheel, onoffline, ononline,
    onpause, onplay, onplaying, onprog ress, onratechange,
    onreadystatechange, onreset, onresize, onscroll, onseeked, onseeking,
    onselect, onstalled, onstorage, onsubmit, onsuspend, ontimeupdate, o
    nunload, onvolumechange, onwaiting, opener, parent, self, top, window,
    localStor age, performance, sessionStorage, addEventListener,
    dispatchEvent, removeEven tListener, attachEvent, detachEvent,
    createPopup, execScript, item, moveBy, mov eTo, msWriteProfilerMark,
    navigate, resizeBy, resizeTo, showHelp, showModeless Dialog,
    toStaticHTML, scroll, scrollBy, scrollTo, getComputedStyle, alert, blur
    , close, confirm, focus, getSelection, open, postMessage, print, prompt,
    showModa lDialog, toString, clearInterval, clearTimeout, setInterval,
    setTimeout OK

    OK js> self .s
      0: [object Window] (object)  <------------ 果然是 window object !

    用 ~.3nw 也看看 . . .

    OK js> self .
    [object Window]   <------------ 確定是 window object !
    OK js> self js> window = .
    true   <------------ 再次確定是 window object !  ~.3hta 結果也一樣。

    OK  js> self obj>keys .           \  ----- 3nw -----
    top, window, location, nwDispatcher, Intl, v8Intl, document, global,
    process, Buffer, root, require, $, jQuery, kvm, gui, revision, debug,
    ... snip ...

    js> document obj>keys .      \ -------- 3HTA ----------------
    doctype, documentElement, implementation, inputEncoding, xmlEncoding,
    xmlStandalone, xmlVersion, styleSheets, defaultView, URL, activeElement,
    ... snip ...

    js: document.onmouseout=function(){alert(222)}  \ 靠！真的會在 mouse 移開時打 alert()
    js: document.onmouseout=null
    js: document.onmouseout=function(){fortheval('hi')} \ It works!!
    : test begin 80 for char * . 100 sleep next cr again ; \ 弄一個印 * 的 long run 程式。

    用 forth colon word 當 event handler, interrupt service routine 的要領：
    o  jeforth.hta inputbox 本身就是個最兇的 event 他會改 stack. 別的 event handler 都得
       balance data stack and return stack.
    o  所有的 event handler 都要【接地】也就是直接回到 JavaScript host 也就是 idle state 去。
       不能在 dictate() 或 execute() 之後放別的 JavaScript code 還以為是前面做好了才下來的，
       錯! dictate() 或 execute() 裡面很可能有 nap 或 sleep 那時候它就衝下來了！ sleep 才可
       以 stopSleeping 所以應該是它。

[/] Found a bug!! This bug is still in ~.3wsh and ~.3nw
    wsh.f run command reads the whole line as a command line. The old definition

        10 ASCII>char ( \n ) word (run)

    was a mistake. It should be

        char \n|\r word (run) ; interpret-only

    The first match of either \r or \n terminates the command line. This is important
    otherwise the extra \n may pollute the command line.

[x] To test 'run' command and siblings, I need to run command line therefore the parser is needed.
    Copy from ~.3nw, it's easy but not so easy. Recent approach is not good. I need to impove it.
    argv should neat at beginning.
    ===> done! but there's a unexpected thing in stack [x] UI, tib.insert 吃到 empty stack 時會留下
          undefined at TOS. This is a mistake. 解法是在原來 pop() 處改成 (pop()||"") 就不會在 stack
          empty 時 pop() 成 'undefined'.
    ==> Ok now, include wsh.f then "run jeforth.hta 123 bye" you get 123 at TOS, bingo!!!

[x] textarea cmd input has a problem. Press <enter> at middle of a string cuts the string <=== should not!
    then pass the string to fortheval. I guess keydown/keyup needs fine tune <=== Yes! done.
    Keycode 13 (Enter) handled in Keydown has fixed the problem.

[x] Now I am working on wsh.f and html5.f, the <input.file> element can be drop on jeforth.display
    so how about other HTML elements?
    ==> Now I have <element> or <e> <input type=file /></e> , Bingo!!

[x] wsh.f (dir) selftest's print outs should be redirected to selftest.log if printing is necessary.

[x] docode() 裡面的 local variables 可以被 js> 看見！因為 JavaScript eval() 時，看得見。故 eval() 的
    時機不能再 docode() 裡面。有機會嗎？==> done!! hcchen5600 2014/07/12 20:51:19

[x] 用 sendkey 時，不能是中文輸入法，如何禁用？ 似乎有解 http://bbs.csdn.net/topics/80079918
    js> $('#cmd').hide() 1000 sleep js> $('#cmd').show() 果然是他
    document.myform.text1.style.imeMode="disabled";  禁用輸入法的方法
    js> $('#cmd')[0].style.imeMode="disabled";
    js> $('#cmd')[0].style.imeMode="auto";
    js> $('#cmd')[0].style.imeMode="active";
    js> $('#cmd')[0].style.imeMode="inactive";
    <input type=text style="ime-mode: auto; ">
    $('#cmd')[0].style.imeMode="disabled";  成功！！！
    能不能連 keyboard 都禁掉？
    ==> 改用 clipboard 已經成功，不怕中文輸入模式。 hcchen5600 2014/07/12 20:27:46

[x] jeforth.3hta 因為 input textarea 本身就是 multiple line 的，word 就是跨行的了！故我把 3nw 具有的
    text command 拿掉了。然而，還是有些 word 具有原始 forth 的跨行特性，例如 : ... ; 定義就是。但
    code ... end-code 不跨行。相較之下， jeforth.3nw 的 code ... end-code 是可跨行的。
    ==> 就這樣吧！不管他了。

[x] 又抓到一個 bug, jeforth.3nw still has the problem
    // keyboard.waiting = false; // jeforth.3nw 的 jeforth.js 裡有這種 platform dependent 的東西！不應該啊 []
    // term.set_prompt(prompt); // restore default jQuery-terminal prompt constant
    ==> jeforth.3we common kernel should have resolved these problems. But in jeforth.3nw stand
    alone version, well ... forget it. hcchen5600 2014/10/29 08:35:43

[/] Bug found:
    keycode 13 時，keyup 清除 textarea 不對，當 EditMode=true 時就糗了。hcchen5600 2014/07/13 17:48:07
    正在幫 vb.f 寫 selftest, 構想每個 word command 該怎麼測試。。。

[x] Shift-keys seem to be locked at start up. Back-space doesn't work. Check it out ...
    js> ShiftKeyDown . cr false
    js> CtrlKeyDown  . cr false
    js> AltKeyDown   . cr true <---------- I felt that too! Now why?
    ==> 這是測 wsh.f selftest 用到 alt-F4 關 calc.exe 時留下來的。多 sendkeys 按一下 Alt key 即解。

[x] 玩一玩 HTA 下的 elements. 確定 name attribute 的用法，真的可以用點的，但很長。要攔腰命名以縮短之。

    js> document.body obj>keys .
    bgColor, background, noWrap, onafterprint, onbeforeprint, onbeforeunload, onblur,onerror, ... snip ...

    js> document.body.children.jeforth obj>keys .
    windowState,borderStyle,version,maximizeButton, ... snip ...

    js> $('outputbox') obj>keys .
    length, prevObject, context, selector, jquery, ... snip ...

    js> $('#outputbox').parent() .  \ 查看我寫的東西掛哪裡？
    [object Object] OK
    js> $('#outputbox').parent()[0] .  \ 這個 element 是 jeforth
    [object HTMLUnknownElement] OK

    js> $('#outputbox').parent()[0].id . \ 整個頁面都屬 jeforth element
    jeforth OK

    char Hello!!! .
    js> document.body.children.jeforth.children.outputbox.textContent .  \ outputbox 是 name attribute

    : jeforth js> document.body.children.jeforth.children ;     \ 攔腰給個名字，縮短 object chain.
    jeforth js: pop().outputbox.textContent="1111"           \ 真的可以！

    OK
    js> $('#outputbox')[0]
    js> document.body.children.jeforth.children.outputbox \ name attribute 可以這樣用，直接點。
    = .
    true OK

    OK
    js> $('outputbox')[0] \ 誤會了！此處的 name 不是 name='foo' 之類的 attribute 而是 tag name, like 'p' of <p>.
    js> document.body.children.jeforth.children.outputbox
    = .
    false OK


    js: $('textarea')[0].textContent=123  \ 真的在輸入區中置入了 '123'

    true OK js> $("#outputbox")[0].id .  \ 這個參考法對 id 有效， id 要小寫。如下，對 name 無效。
    outputbox OK
    js> $("#outputbox")[0].getAttribute("ID") . \ 這樣也可以。
    outputbox OK

    jeforth OK js> $('#outputbox').parent()[0].getAttribute("id")
    js> $('#outputbox').parent()[0].id = .
    true OK

    OK js> $("#outputbox")[0].name .    \ name 不能用點的，只有 id 可以。
    undefined
    OK js> $("#outputbox")[0].getAttribute("name") .  \ 要用 getAttribute()
    outputbox
    OK js> $("#outputbox")[0].getAttribute("name") .
    outputbox OK
    js> $("#outputbox")[0].name .
    undefined OK

    js> $("#outputbox")[0].name . cr                        \ undefined
    js> $("#outputbox")[0].getAttribute("name") . cr     \ outputbox
    js> $("#outputbox")[0].class . cr                    \ undefined     看來只有 id 可以直接點
    js> $("#outputbox")[0].getAttribute("class") . cr    \ outputbox

    用 jeforth.3nw 的 F12 debugger 輕易就把這玩意兒搞懂了
    OK <e> sdfsdfsd </e>
    OK js> document.body.children.outputbox.lastChild . ===> [object Text]
    OK js> document.body.children.outputbox.lastChild.data . ===> sdfsdfsd
    OK js> document.body.children.outputbox.lastChild.baseURI . ===> file:///D:/hcchen/Dropbox/learnings/github/jeforth.3nw/index.html
    OK js> document.body.children.outputbox.lastChild.nodeName . ===> #text
    OK js> document.body.children.outputbox.lastChild.nodeType . ===> 3
    OK js> document.body.children.outputbox.lastChild.nodeValue . ===> sdfsdfsd

    js: document.body.children.outputbox.lastChild.data="11223344"
    js> document.body.children.outputbox.lastChild.data . ===> 11223344

    看來是 jeforth.3hta 的問題，～.3nw 下 lastChild 跟 lastElementChild 是一樣的
    OK <e> <input type=file></e>
    OK js> document.body.children.outputbox.lastChild.nodeName . ===> INPUT
    OK js> document.body.children.outputbox.lastElementChild.nodeName . ===> INPUT

    js> document.body.children.jeforth.children.outputbox.lastChild.nodeName .
    js> document.body.children.jeforth.children.outputbox.lastChild.nodeValue .
    js> document.body.children.jeforth.children.outputbox.childNodes .s
    js> document.body.children.jeforth.children.outputbox.childNodes[1].nodeName .
    js> document.body.children.jeforth.children.outputbox.childNodes[1].nodeValue .

    來看看 jeforth.3hta 的 outputbox element 有哪些 members ?
    js> document.body.children.jeforth.children.outputbox obj>keys .
        align, noWrap, dataFld, dataFormatAs, dataSrc, currentStyle, runtimeStyle,
        ... snip ...
        replaceNode,
        http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_node_replacechild
        swapNode, clientHeight, clientLeft, clientTop, clientWidth, scrollHeight,
        ... snip ...
        ENTITY_REFERENCE_NODE, NOTATION_NODE, PROCESSING_INSTRUCTION_NODE, TEXT_NODE OK

[x] 亂定一堆 global variable 很令人不安，例如 kernelfso 等。 乾脆全部掛給 kvm 好過掛給 window ?
    jeforth.hta 裡就要做 closure 才對。 <=== 目前已經是 jeforth.3we 裡所有 application 的慣例。
    ( ^ hcchen5600 2014/10/22 11:23:57 )
    ==> 本來在 jeforth.hta 裡的東西都是 global, 加上 closure 之後都不是了！這樣對，但如何修改？
        在 index.htm (即 jeforth.hta) 中變個 global object 出來，把所有屬 global 的東西都往裡倒。
        kvm.init() 時把 global 傳進去即可。 ====> Done!!! commit 一版。

    [17:18:26] h.c.chen: 請教問題。jeforth 最上層是 index.html , 裡頭 script include 進 jeforth.js .
                        我想把 index.html 裡的程式都 closure，以避免 global。這麼一來，要讓 jeforth.js
                        看得到 index.html 定義的東西有何建議？
                        我現在想的是在 index.html 裡弄一個 global object 把要用到的東西全放裡面。
                        kvm.init(global) 傳過去給 jeforth.js ，這樣 ok？
    [17:23:24] yap @ Forth: 建議用 browersify.js 或component.js
    [17:24:02] h.c.chen: 有幾分鐘可以接電話嗎？
    [17:25:39] h.c.chen: 我先看看 browserify.js 或component.js 謝謝！
[x] js> window obj>keys . ==> kvm,tos,pop,push,base,stackwas,htaProcess,WshShell,f,document, ...
    應該只有 kvm 其他都不要！
    [x] base ==> kvm.base 才對
    [x] stackwas 要仔細檢討
    [x] tos, pop, push 改 call kvm.tos(), 等.
    [x] htaProcess 改放 kvm.process, WshShell 保留在 window 裡。
    [x] f 根本是個錯誤，哪來的？ ==> 用到時忘了用 var f; 先定義成 local 所造成。
    最終，只有 kvm 與 WshShell 兩個 window global.
    ==> *** hcchen5600 2014/10/22 11:11:45 Now, after jeforth.3we released with HTA, HTML, Node.js
        support. The kvm object is now the only root. Different application's index.html or the likes
        are to define kvm.properties and kvm.methods for the specific environment of the special
        application. kvm.things are always accessable which is good when you were in F12 debugger or
        in the jsc traps.

[x] something wrong on voc.f .... yeah, it's kernel. Well I will clarify it out.
    ==> 抓 \uedit-backup\ 舊版回來就好了。我想錯了， voc.f 不可能比照 vocabulary 慣例。

[x] 要不要改良 selftest.f 裡的 ****  ==>judge 讓 'pass', 'failed' 自動找到對的位置顯示？

[x] ." 是 compile-only 有必要嗎？ wmi.f 裡用了一堆 ==> 變成 dual mode 了

[x] <e> 拿到的 <input type=file /> element 是 [object Text] 好像不對。
    <e> 拿到的 <form> element 也是 [object Text]，不能用。
    ==> 原因找到了！哈哈題。</e> 之前如果有空格就會傳回這個空格的 element 也就是 [object Text]
        這沒錯，錯在 <input ...></e> 或 </form></e> 之間不該留空格。 或者該自動把 </e> 之前的空
        格消除！ ===> <e> 123   </e> <e> 456    </e> --> 123456 Bingo!!!

[x] char excel.exe kill-them 殺不掉，大小寫？ ==> input must be a leagal where clause.

[x] 發現 Node-webkit 果然有用到 global 所以我的 global 要恢復成 kvm, 如此只用到 kvm 更好。

[x] selftest.log 也不全面，只有 jeforth.f 有在 save log 應該全面都 save log.

[x] Selftest 很長很長，怎麼樣知道已經做完了？應該自動 jump 到 inputbox.
    js: kvm.scrollToElement($('#header')); 3000 sleep   \ this doesn't work
    js: kvm.scrollToElement($('#header')); 3000 freeze  \ this works

[x] 輸出叫做 outputbox 吧！(was outputscreen)
    輸入叫做 inputbox 吧！ (was cmd)

[x] <selftest> ... </selftest> are interpret-only

[x] forth macro 可以用 tib.insert 來做 <==== Yes! source-code-header is an example.
[x] include 可以自動幫 ~.f 檔加上 \ --EOF-- 結尾。 So ~.f file's header can be further simplified.
    看到 \s 或 \ --EOF-- 就自動把該處當成 EOF 切掉之後的部份。
    定義 source-code-header 為
    <text>
        ?skip2 --EOF-- \ skip it if already included
        dup .( Including ) . cr char -- over over + +
        js: tick('<selftest>').masterMarker=tos()+"selftest--";
        also forth definitions (marker) (vocabulary)
        last execute definitions
        <selftest>
            js> tick('<selftest>').masterMarker (marker)
            include kernel/selftest.f
        </selftest>
    </text> constant source-code-header
    tib.insert
    ==> 一次成功！
    尾巴要自動完成。由 header 去找第一個 \\\s+--EOF-- , 後面切除，加上以下
    <selftest>
    js> tick('<selftest>').masterMarker tib.insert
    js> kvm.screenbuffer char selftest.log writeTextFile \ save selftest log file
    </selftest>
    js> tick('<selftest>').enabled [if] js> tick('<selftest>').buffer tib.insert [then]
    js: tick('<selftest>').buffer="" \ recycle the memory
    \ --EOF--

    試驗：
        tib.slice(ntib); ntib = 0;
        start-here <js> kvm.screenbuffer.indexOf("thernet",pop())!=-1 </jsV> \ true  Ethernet
        <js> ("aabbcc\tddeeff\n\\--EOF--   gg\\shhii").search(/\\\s*--EOF--|\\s/) </jsV> .
        <js>
            var ss = "aabbcc\tddee\nff\\--EOF--   gg\\shhii";
            ss = (ss+" ").slice(0,ss.search(/\\\s*--EOF--|\\s/)); // 一開始多加一個 space 讓 search 結果 -1 時吃掉。
        </jsV> .
    試驗成功，以下動作要在 include 裡做。 ss 是讀進來的整個 ~.f source code.
        <js>
            ss = (ss+'x').slice(0,ss.search(/\\\s*--EOF--|\s\\s\s/)); // 一開始多加一個 'x' 讓 search 結果 -1 時吃掉。
            ss += "\\ --EOF--\n";
        </js>
    debug 的技巧
        <js> kvm.jsc.prompt="111";eval(kvm.jsc.xt); </js>   \ jsc breakpoint
        js: clipboardData.setData("text",tib.slice(ntib))         \ 利用 clipboard+notepad 來查看常內容

        <js> if(tos().indexOf("wmi.f")!=-1) window.xx=true;</js>
        js> window.xx [if] *debug* jjj>>> [then]

[x] writeTextFile 用來 save selftest.log 有時候會有問題，改用 writeBinaryFile 看看。。。
    ==> modify ok, [x] test my desktop at home.

[x] jsc has been used in panic(). I need jsc for experiments. So, make it a command word.

[X] excle.f selftest not completed yet
    Including excel.f
    *** excel... pass
    *** excel.visible excel.invisible ... pass
    *** new... pass
    *** excel... pass
    *** excel... pass
    reDef WORKBOOK
    *** get-sheet gets worksheet object ... pass
    *** get-sheet gets worksheet object ... pass
    *** get-cell gets cell object ... pass
    *** cell@ cell! ... pass
[X] Bug found! selftest ***** treats any . as the end of the description! should be \.$

[x] jeforth.3hta starting greeting 看久了有一點煩，太干擾。簡化之。。。
[x] Don't allow long lines. use CSS3 "word-wrap:break-word"
[X] remove blank line and repeated line from cmdhistory
[x] beeps when moves cmdhistory over the top or under the bottom.

[x] voc.f help is very poor. Improve it. Better not to show empty
    vocabularies, pattern should accept white spaces.
[x] help shows word.comment but very poor. Use RegEx to indent comments.
    js> ("aaa\nbbb\nccc").replace(/^\s*/gm,"\t") .

[ ] 已經開著的 excel 如何控制？
    Try open some excel, try to see them then control them....
    ==> int hwnd = (int)Process.GetProcessById(excelId).MainWindowHandle    http://stackoverflow.com/questions/770173/how-to-get-excel-instance-or-excel-instance-clsid-using-the-process-id
        This is for .NET not JavaScript.

[x] Tab auto-complete
[ ] Tab auto-complete don't be case sensitive

[X] F2  toggle EditMode
    F9  shrink input box
    F10 enlarge input box
    F4 copy marked text into inputbox.

    study IE9 window.getSelection()
        : test
            ." Get 3 selections " cr
            1000 sleep 1 . 1000 sleep 2 . 1000 sleep 3 . 1000 sleep 4 . 1000 sleep 5 . js> getSelection().anchorNode cr
            1000 sleep 1 . 1000 sleep 2 . 1000 sleep 3 . 1000 sleep 4 . 1000 sleep 5 . js> getSelection().anchorNode cr
            1000 sleep 1 . 1000 sleep 2 . 1000 sleep 3 . 1000 sleep 4 . 1000 sleep 5 . js> getSelection().anchorNode cr
            ." done !!" cr
        ; last execute
    發現 getSelection() 取得的 object 只存在於 selection 還在時。

    Property        Description
    anchorNode      Returns the element or node that contains the start of the selection.
    anchorOffset    Retrieves the starting position of a selection that is relative to the anchorNode.
    focusNode       Retrieves the element or node that contains the end of a selection.
    focusOffset     Retrieves the end position of a selection that is relative to the focusNode.
    isCollapsed     Retrieves whether a selection is collapsed or empty.
                    It's null when "true".
    rangeCount      Returns the number of ranges in a selection
                    It's always 1. I don't understand.

        variable selection
        1000 sleep 1 . beep
        1000 sleep 2 . beep
        1000 sleep 3 . beep
        1000 sleep 4 . beep
        1000 sleep 5 . beep cr
        js> getSelection() selection !
        selection @ js> pop().anchorNode      constant anchorNode
        selection @ js> pop().anchorOffset    constant anchorOffset
        selection @ js> pop().focusNode       constant focusNode
        selection @ js> pop().focusOffset     constant focusOffset
        selection @ js> pop().isCollapsed     constant isCollapsed
        selection @ js> pop().rangeCount      constant rangeCount
        <e> <H3>Done!!</H3></e> drop beep

    Mark 區域是
    code {F4}   ( -- ) \ Copy marked string into inputbox
        var selection = getSelection();
        var start, end;
        if (selection.isCollapsed) return; // Nothing selected
        if (selection.anchorNode==selection.focusNode) {
            start = Math.min(selection.anchorOffset,selection.focusOffset);
            end   = Math.max(selection.anchorOffset,selection.focusOffset);
        } else {
            start = selection.anchorOffset;
            end   = selection.anchorNode.data.length;
        }
        var ss = selection.anchorNode.data.slice(start,end);
        document.getElementById("inputbox").value += ss;
        $('#inputbox').focus();
        end-code
[x] dot . prints things, some objects are not printable that triggers an error:
    Error msg: JavaScript error on word "." : Object doesn't support this property or method
    從 dot . 下手有成功，但是不完整。應該要從 print() and see() 下手才會完整。
    ===> much better now!
    try :   s" where name like 'chrome%'" get-them .s

[x] "save" command to save definitions to jeforth.JSON to speed up the starting up time.
    ==> They may be objects in dictionary, so no way!!

[x] remove ^\s* from cmdhistory.

[x] include , sinclude redefined in wsh.f so as to auto-search the source code file.
    if forth gets the higher priority over wsh.f in vocabulary order then older definitions
    will be taking the effects. The correct solution is not bringing wsh.f into kernel but
    simply to use the 'definition' vocabulary command to redefine special words into the 'forth'
    vocabulary. Thus even the forth word-list has higher priority than wsh.f the older
    include/sinclude commands won't be unexpectedly used.
    ==> Test, what happen after forget to --wsh.f-- marker? .... new words will be forgotten.

[x] Hotkey F10 needs two press to make one effect. Try to print 'F10' at beginning of the handler
    sees the same thing <==== check again.
    ==> Now I am sure, root cause is the focus has gone to HTA's menu bar due to F10.
        Under a condition, F10 can disable by this way ==> (https://www.evernote.com/shard/s22/sh/205fe9d0-4c7f-41db-a33a-98aacbc91a01/39cc5075538a71b51d150c24af8b9663)
        , must be document.onkeydown not .onkeypress. So as to take over the control.

[x] Hotkey handler should not be in input box. Because input box will be hide when rows <= 0 therefore
    no way to get focus and then no way to get it back.

[x] Source code file should not use "UTF-8 file with BOM" format,
    jsc>stack[0].charCodeAt(0) ==> 22172  (number)
    jsc>stack[0].charCodeAt(1) ==> 29854  (number)
    As shown above, leading bytes become problem.

[x] jsc support Esc as the 'q' command equivlant.

[x] see kvm.fso ==> JavaScript error on word "(see)" : Object doesn't support this property or method
    ==> RI: print(tab + dictionary[i] + ...) 時，某些 object 沒有 .toString() 無法做 + operation.
    ==> 應該幫所有不具 toString() method 的 object 都加上 toString()。 <=== Not allowed!
    e.g. kvm.fso.FolderExists() is a method in fso. 但用 jsc 去檢查 kvm.fso.FolderExists 結果是 undefined!
    所有未知的 object 真不知道該怎麼 see ??? [x] <=== Node.js 的 console.log() 很好！
[x] Constant() 能不能也屬於 Word()? 一致，且 see() 較簡單。 ==> 不 merge, 但一併考慮。
[x] dump, see, dot, print 功能重複，疊床架屋 ==> 慢慢適應吧！

[x] subFolders helps redefine sinclude and include ... failed!
    ha ha bug.

[x] help without pattern prints hotkey helps.

[x] jsc improve the prompt(), use last command line to be the default.

[x] {backSpace} erace last outputbox, {F2} improved.

[x] define 'value' command and is,to,..etc corresponding commands.

[ ] Output box 2 and input box 2, dual pannel like Norton commander.

[x] List elements of outputbox.
    []nodes ( ele n -- array ) Beginning n nodes of the element
    nodes[] ( ele n -- array ) Ending n nodes of the element

[x] mimic processing.js, setup an environment. Say canvas.f, setup{} and draw{}
    So that we'll be familiar with canvas programming and go on completing the clock.
    Study clock.f first... Done! see p5.f, clock3.f

[x] 用了那麼多 kvm.var 能不能利用 eval() & arguments.callee 來隨時增加 vm 內部的 global variable?
    ==> No way.

[ ] {backSpace} 的 bottom up 跟 top down 程式都類似，可以再簡化。
    [x] 用來清理 outputbox 畫面，在 Node-webkit jsc 裡無效。
        記得在以前也碰過同樣問題，原因是判斷 inputbox 是否 empty 時它並非 empty 而是有個 0x0A 留在
        裡面。<==== 不該多個 LF，處理 inputbox 的程式有問題。不要妥協！
        --> 可能是 Node-webkit 的問題 $('#inputbox').focus(); 有嫌疑 <=== 捅不出來，可能不是。
        進 jsc 一律把 inputbox.value="" 也是簡單的辦法。 <==== 就這麼用補的治好了。

[x] Now jeforth.3hta default is float instead of integer. Try input 123.456 .s and 0x7fffff .s
    This is for HTML5 canvas.

[x] words and help need options,
    -n for matching only name pattern, case insensitive.
    -N for exactly name only, case sensitive.
    -v for matching vocabulary, case insensitive.
    ===> jeforth.f (words) [x] debug version, Add one more input 'option' to (words)
    ===> modify voc.f to distinguish options.

[x] Other than <element> we need a <h> command to generate header element.
    ==> <o></o> for ouputbox, <h></h> for head, element <e></e> append to the element
    ==> done! now go back to complete the clock.f improvement.
[x] Stop F2 hotkey to change the textarea size
[x] canvas.f better to put the canvas below the inputbox textarea, easier to see it all the time.
[x] Re-write clock2.f with an strong arm of canvas.f
[x] Different textarea background color for different EditModes. Modify the style in jeforth.hta
    ==> review how do I modify canvas style in canvas.f --> simply modify ele.innerHTML
    ==> try to view jeforth.hta style --> id=style ok --> js> style obj>keys . ok
    ==> style element is just like other elements having all those object members.
        The problem is all 3 sections (body, textarea:focus, and textarea) are in the same style element.
        If I only want to modify one, how to do that?
        [x] Create a new style in <h></h> may work. ==> No.
        [x] Try modify 'style' itself. --> Bingo!!
            <text>
                body {
                    font-family: courier new;
                    font-size: 20px;
                    padding:20px;
                    word-wrap:break-word;
                    border: 1px ridge;
                    background:#F0F0F0;
                }
                textarea {
                    font-family: courier new;
                    color:black;
                    font-size: 20px;
                    width:100%;
                    border: 0px solid;
                    background:#BBBBBB;
                }
                textarea:focus {
                    border: 0px solid;
                    background:#FFE0E0; Pink or #F0E0E0; Gray
                }
            </text> js> style.innerHTML=pop()
        [x] Try to make a new style to modify only textarea:focus --> Failed
            <h> <style id=newStyle type="text/css"></style></h> drop
            <text>
                textarea:focus {
                    border: 0px solid;
                    background:#E0F0E0;
                }
            </text> js> newStyle.innerHTML=pop()
        [x] A separate style in jeforth.hta for textarea:focus --> ok!
[x] 應該把 jeforth.3wsh jeforth.3hta jeforth.3nd jeforth.3nw jeforth.3htm 五套融合成一套，共享所有的 .f 檔。
    ==> jeforth.3we
[x] canvas.f works on kvm.cv is good, so we can work on many CV's.
    But it needs an assignment process, instead of being the default only one.
    ==> 3htm/canvas/canvas.f done
[ ] Reviewed Processing.js, try to go through "~\Dropbox\learnings\processing\Pomax's guide to Processing.js.pdf"
    practice on jeforth.hta --> working on playground\p5.f
[ ] html5.f does not have self-test yet. </e> was wrong when in compiling mode, now fixed.
[x] To support multiple canvas, clock2.f timeout() needs fine tune.
[x] see 把 canvas object 都鑽進去印出來，太多了當掉。
    ==> js> window (see) 即可複製該問題。
    ==> Simplify function see() in jeforth.js
[x] clock3.f seems ok, but only the last clock can run.
    By my debugging logic, make a simplified case to try.
    : hi me ." Hello " js> setTimeout(pop().xt,1000) . space ; last execute
    Hello 141  OK Hello 142  Hello 143  Hello 144  Hello 145  \ 這個OK
    : wo me ." world!" js> setTimeout(pop().xt,1000) . space ; \ 才剛定義好新的 word 不論 colon word 或 code word
    world!376 world!377 world!378 world!379 world!380 . . . \ 都會變成下一個 timeout 被執行的對象！
    ' wo ' hi  js> pop().xt=pop().xt \ 如果以為是 xt 的問題，錯！ colon word 的 xt 即使是同一個一切依然
    連新定義出來的 code word 也會被 timeout 到，這就是線索了!
    不要懷疑 timeout 收到的 function. 成功過就對了。 奇怪的是，為何總是執行最後一個 word 的 xt ?
    直接定義一個 ' hi timeout(pop().xt,1000) 來試呀! 果然複製出問題了。

    結論是 colon word 的 xt 如果這樣執行 ' hi js> pop().xt() 就沒問題，因為參考到的正是 colon word object 本身無誤。
    如果 ' hi js> pop().xt execute 這樣執行就令人困惑了。困惑不如實測證實，
    code tt11 print("he he he 112233") end-code \ 故意弄一個 code word 當成 last
    js> inner(this.cfa) \ 直接執行 colon word 之 xt 裡的這行
    he he he 112233 OK  \ 果然就是這樣！

    結論是 colon word 的 xt 不能用來當 call back function 用。這下問題來了，colon word 有 recentcolonword
    可以取得本身的 object 那麼 code word 呢？抄 recentcolonword 的定義即可，這表示 code word 的自身 object
    就是 this. 實驗看看：
        code ttestt push(this) end-code ttestt . ==> 果然無誤 Bingo!
    進一步弄成利用 timeout 重複執行的 code word,
    code rr print(Date()); setTimeout(this.xt,1000) end-code 執行後，第一個 timeout 有印出 Date() 但是
    隨後的 setTimeout() 造成 run time error 'invalid argument'. 我怕是其中的 this 到時候變成別的東西，沒
    有 xt 造成 error 凸顯問題反而是好事。嘗試從 JavaScript 的 recursive 裡找答案 ==> arguments.callee
    code rr print(Date()); setTimeout(arguments.callee,1000) end-code ==> 徹底成功了！！！

    [x] ==> 這下子，clock3.f 的 '時鐘' 產生的 colon word 要如何包裝成 function() 來當 call back function?
    ==> colon words can be executed by inner(cfa), thus
        code t inner(2730);setTimeout(arguments.callee,1000) end-code last execute
        can launch the clock correctly. Where 2730 is Taipei's cfa.
        ==> 取得 colon word 本身的 cfa 有兩法
            1）colon word 裡一見面 me/recentcolonword js> pop().cfa 即是
            2）colon word 裡一見面 js> ip 2- 也是
            前者若是由 call-back-function 透過 inner() 發動的，就會出錯！！！
                [x] 實驗看看。可能 recentcolonword 要另想更好的辦法。
    ==> -1 時鐘 tokyo
        ' tokyo js> pop().cfa dump
        02739: 2693 (number)
        02740: -3600000 (number)
        ... snip ...
        code t2 inner(2739);setTimeout(arguments.callee,1000) end-code last execute
        成功地 run 出第二個時鐘了！
[ ] The jeforth.js global variable 'context' is useless. When no vocabulary, context is 'forth'.
    When with vocabulary, forth get-context command replaces the old context command. So why do we
    have the 'context' command? ===> ask FigTaiwan
[ ] current_word_list() defined in jeforth.js 應該是為了嫌 words[current] 有點 proprietary 而設。
    實際上 words[current] 還是有在用，那何必有 current_word_list()? 乾脆取消。
[x] new Word() 馬上會把 new word 加進 wordhash{}，這無可厚非沒什麼不對。萬一 colon definition 失敗
    words[current].pop() 把 last 丟掉之後，只能 rescan-word-hash 才能恢復 reDef 被蓋掉的 original.
[x] 取得 colon word 本身的 cfa 有兩法
    1）colon word 裡一見面 me/recentcolonword js> pop().cfa 即是
    2）colon word 裡一見面 js> ip 2- 也是
    前者若是由 call-back-function 透過 inner() 發動的，就會出錯！！！
    [x] 實驗看看。可能 recentcolonword 要另想更好的辦法。==> the two statements
            push(newname); execute("(create)");
        in ';' definition should be moved to ':' , so we have last() in colon definition.
        To drop the last use words[current].pop() when something wrong. words[current].pop()
        把 last 丟掉之後，只能 rescan-word-hash 才能恢復 reDef 被蓋掉的 original.
    --> try :: and ;;
    ==> 要用 last 取得 colon word 自身時，要注意 last 必須 immediate!
        正確寫法是 :: myself [ last ] literal ;;
    ==> [x] 基本上 ok 但是過不了 selftest, selftest 好耶！
            問題出在 sinclude 的定義裡會用到原來的 sinclude, 此時新定義的 sinclude 已經在 wordhash
            裡取代了，故造成無窮迴路。
    ==> 所以，一直以來 new Word() 直接把 newword 加進 wordhash 的作法有問題。要讓 ; 來做此事。
        See ebook <<Moving Forth>> @ https://www.evernote.com/shard/s22/nl/2472143/e572d6b8-8e2c-44bf-8d9b-e916ac0f9a2c
        有提到此事，果然就是用舊版 word 定義新版時、或者 recurse 時會碰到的問題。傳統 forth 用 hide
        reveal 這一對開關來解決。我的 jeforth 不直接從 words[] 裡找 word 而是用 wordhash hash table,
        故控制 new word 加進 wordhash 的時機也是一樣的效果。
    ==> 改掉 Word() 不要自動加 newname 進 wordhash, 增加新 command 'reveal' 用來把 newname 加進
        wordhash. ==> done!
    ==> 原來用到 recentcolonword 的地方都找出來改掉

[x] jeforth.f has a problem "如果不 writeBinaryFile [x] 好像 wmi.f 會有 error ????"
    that made me to use writeBinaryFile command which is not defined yet in jeforth.f
    ==> jeforth.hta used to use fso, but fso doesn't support utf-8, ANSI only. My souce code and
        actual printed strings were having utf-8. bla bla bla, that's the problem.
        Fixed by using ADO that supports utf-8.

[x] 大目標！改寫 jsEval jsEvalNo ([x] jsEvalRaw is useless) 讓他們在 compiling mode 時直接 compile 成
    function("jsEvalNo") 或 function(jsEval;push(lastStatement))。靈感來自 p5.f 裡的 call back function.
        : processing ( -- ) \ Processing main loop
            [ s" push(function(){inner(" js> last().cfa + s" )})" + jsEvalNo ] literal ( -- callBackFunction )
            frameInterval [ s" push(function(){setTimeout(pop(1),pop())})" jsEvalNo , ]
            frameCount 1+ to frameCount draw
        ; last execute
    其中有取得 call back function 放在 TOS 的範例，以及直接 compile 一個 function 的範例。
    ==> This regEx works fine : s" aaaaa;bbbb;ccc" js> pop().match(/^(.*;)(.*)$/) .
        Returns [entire string,fore part,last statement]
        Note 1. when there's no ';' the result is NULL.
             2. Nothing or only \s after the last ';' the result is [entire string,entire
                string w/o ending \s,NULL] 此時用
             3. normal "aaa;bbb;ccc"
        這樣狀況有種嫌太多了。
    ==> 先把尾部的 ";\s*$" 消除。統一狀況。
        s" aaaaa;bbbb;ccc;;;      " js> "\n\t\r" + js> pop().replace(/;*(\s+)$/,'') .  \ the end
    ==> 整合起來，最後只剩兩種狀況
        s"  aaa;bbb;ccc" js> "\n\t\r" + js> pop().replace(/;*(\s+)$/,'') js> pop().match(/^(.*;)(.*)$/) .
        Note 1. when there's no previous ';' the result is NULL. ==> 整行抓去用
             2. otherwise the result is [entire string,fore part,last statement]
        這樣簡單多了。

        : jsFunc ( "statements" -- function ) \ Compile JavaScript to a function() that returns last statement
            js> pop().replace(/^\s*/,'')
            js> pop().replace(/;*\s*$/,'') dup
            js> pop().match(/^(.*;)(.*)$/) ?dup \ statement [entire string,fore part,last statement]|NULL
            if \ statement [entire string,fore part,last statement]
                nip
                s" push(function(){" js> tos(1)[1] +
                s" push(" + js> pop(1)[2] + s" )" +
                s" })" +
                jsEvalNo
            else \ statement
                s" push(function(){push(" swap + s" )})" +
                jsEvalNo
            then ;

        : jsFuncNo ( "statements" -- function ) \ Compile JavaScript to a function()
                s" push(function(){" swap + s" })" + jsEvalNo ;

    [x] jsEval jsEvalNo 保留不改，新增命令 jsFunc jsFuncNo。 先完成 jsFuncNo
        ( "js statements" -- function )

[x] objRet in jeforth.f 還有用嗎？ ==> 有用。
[ ] 當 marker 是個 vocabulary 時，順便 previous 把多出來的 forth drop 掉。
    ==> 改 voc.f (marker) 應該很簡單。Selftest 的測法可能造成問題。
    ==> 改 --filename.f-- 的定義才對。只有 --filename.f-- 這類 marker 才可以做 previous。

[x] merge.f 的「對話表」可以一次全部印出來。HTML 可以回頭補任意位置的內容，只要在
    資料不全時把 [Go!] 灰掉即可。
[x] Working on playground/merge2.f ==> Done!!
[x] Merge.f 很好用。其他 excel 的程式也該 port 到 jeforth.3hta 來！
    ==> 拆分混合個部門的總表成多個 Excel 檔。===> split.f done!!

[ ] Very very strange thing:
    jsc>kvm.dictionary
    Oooops! Object doesn't support this property or method
    jsc>kvm.stack
    Oooops! Object doesn't support this property or method
    ===> 又是 see 的問題，嘗試顯示出來時失敗的現象。


-------------- jeforth for node.js console mode ----------------------

[x] jeforth.3we 就是這樣來的！
    我計畫讓 Windows 下所有的 jeforth.3xxx 都共享同樣的 source code , 如 jeforth.js, jeforth.f 等。
    node.js 版的 jeforth.js 有這行,
        exports.constructor = KsanaVm;
    到時候是用 require() 讀進去的，希望 require 接受 string。我就可以用加的把這行加進去。
    ==> 爽哥的 ~\multitaskjavascripteforth-master\jeForthVM.js 似乎有解，

            if (typeof exports==='undefined') window .jeForthVM=jeForthVM   // export for web cliend APP
            else exports.jeForthVM=jeForthVM    // export for node.js APP

        As shown above, node.js 'exports' is a system object not a 宣告指令。

[x] readTextFile is from jeforth.hta, needs to be defined in index.js

[x] bye is platform dependent. Needs kvm.bye()
    code bye ( ERRORLEVEL -- ) \ Exit to shell with TOS as the ERRORLEVEL.
        var errorlevel = pop();
        errorlevel = typeof(errorlevel)=='number' ? errorlevel : 0;
        kvm.bye(errorlevel);
    end-code
    jeforth.hta can return ERRORLEVEL to its caller batch program, but not DOS box.
    I repeat, TOS as errorlevel only works in batch program.
    This is the experiment:
    ~\jeforth.3we>echo %errorlevel%
    55 /* recent errorlevel is 55 */
    ~\jeforth.3we>jeforth.hta 77 bye  /* leave 77 */
    ~\jeforth.3we>echo %errorlevel%
    55 /* the errorlevel is still 55 not 77, so the above line doesn't work */
    ~\jeforth.3we>echo jeforth.hta 77 bye > 77.bat
    ~\jeforth.3we>77.bat /* but it works through batch */
    ~\jeforth.3we>echo %errorlevel%
    77

[x] 這個要想一想。定樣在 jeforth.hta 中的 kvm 是個 global 可以反過來在 jeforth.js 裡看得見。
    但是定義在 node.js 的 index.js 裡的 kvm, fs 等則不然。既然 kvm 跟 KsanaVm() 裡面參考自己的
    vm 是同一個，何不在 jeforth.js 裡直接就稱為 kvm？如果還是照以前稱為 vm 就得像下面這般繁複地
    補救。
        function KsanaVm() {
            var vm = this; // "this" is very confusing to me. Now I am sure 'vm' is 'kvm'.
            if(typeof(kvm)=="undefined"){var kvm=vm} // kvm defined in jeforth.hta is visible but not node.js index.js
        ...snip....
    稱為 vm 目的可能是想跑 multiple VM. 這點我看是不會發生了。但讓 global 的 kvm 跟 closure 裡的 kvm
    同名，也有點令人不安。繁複就繁複吧！
[x] Word.help 尾巴都有個 \r\n 要拿掉。
    OK ' + js> pop().help
    OK .s
         0: + ( a b -- a+b) Add two numbers or concatenate two strings.
    (string)  <=== This is the clue of that there's something like \r\n at the end
    > dup binary-string>array <=== defined in 80286asm.f, useful here.
     OK .s
          0: + ( a b -- a+b) Add two numbers or concatenate two strings.
     (string)
          1: 43,32,40,32,97,32,98,32,45,45,32,97,43,98,41,32,65,100,100,32,116,119,111,32,110,117,109,98,101,114,115,32,111,
    114,32,99,111,110,99,97,116,101,110,97,116,101,32,116,119,111,32,115,116,114,105,110,103,115,46,13 (array)
     OK
    ==> The ending is a \r (13) , remove it ! jeforth.js I guess.

[x] nexttoken('RegEx string') escape string and RegEd work together can be a little strange.
    Sometimes simply JS escape string works fine like :  nexttoken('\r|\n')
    Sometimes we need to double the back slash like : nexttoken('\\)\\)')
    Because what we want from the front one is '#13','|','#10' and it works fine.
    Yet we want from the rear one is literally '\)\)' which can not be
    nexttoken('))') nor nexttoken('\)\)').

[ ] vb.f 有了現在的 html5.f 可以改寫得更好。

[x] 讓 include 自動找目錄，不用等到 wsh.f ==> readTextFileAuto ( "pathname" -- file ) \ Search and read
    ==> Use kvm.path=[...] to specify path space and the order.

[ ] Ask FigTaiwan 請教先進。 jeforth 有這個問題。
    發現一個 jeforth 的大大大問題。 exit 用來結束一個 colon word, 但是 exit 用在 for..next 裡面時
    就不一樣了！要先 r> drop 才行吧？！ ==> Yes!!!

[x] execute ( cmd -- ... ) command 針對 cmd==string 時，要順便把前後的 \s 去掉。

[x] ~\jeforth.3hta\playground\86ef202.f compile 出來，跑不起來。要重視原因！
    ==> 懷疑是用 writeTextFile 有問題，checksum 其實一樣。
        d:\hcchen\Dropbox\learnings\github\jeforth.3hta>d:\Download\BATCH\SUM.EXE eforth.com
         This program was written by Eddy Chuang 1991.
         -- The checksum of file:eforth.com is '20633D' on base 16 --
        d:\hcchen\Dropbox\LEARNI~1\github\JEFORT~1.3HT>

        target-space 0x100 DICSIZE array-slice
        <js> var sum=0; for( var i=0; i<12032; i++) {sum+=tos()[i]}; sum</jsV>
        1:     2122557      20633dh (number)
    ==> 接下來用 symdeb.exe 檢查了。。。 --> COLD1: entry should be 1097h ( "see COLD1:" command )
        but symdeb traced it's 1200h
    ==> 看到原因了！本來 (create) 現在要改成 (create) reveal !!!

[x] include 80286asm.f 很奇怪，新舊版會夾雜的感覺。Source code 怎麼改都無效。總是 include 到舊版的！
    ==> Run jeforth.hta new session then OK.

[x] The method 86ef202.f writes file to eforth.com needs think twice.
    Node.js and nw can use writeTextFile, but I guess not on HTA.
    ==> The reason why 3nd can use it is Node.js' global class Buffer(). It handles binary data.
        So this project is 3nd and 3nw dependent!

[x] Many other .f files should be moved to hta/ They are all HTA dependent.
    ==> Every platform has its own kvm.path space now.
[x] readTextFileAuto 自帶 platform dependent 的 path array, 不好。
    應該有個 kvm.path 在 jeforth.3nd.js jeforth.html jeforth.hta 中定義好來，這樣才對。
    ==> 3hta, 3nw, 3nd, 3wsh, 3htm 意外的好處是這些 platform folder 都是 3 開頭，自然會聚在一起。

[x] include 吃掉一整行，這樣並不好。 check the reason.
    ==> RI, 因為 include test.f dsdf sfds 的 test.f 當中最後一行是 \ comment , 在 tib.insert
        之後，這個 comment 延續到之後去，造成這個結果。
    ==> 只要在 sinclude 裡，去掉 --EOF-- 之後，加一個 \n 到 file 最後即可。

[ ] The leading two lines in jeforth.3nd.js, FigTaiwan acadamic topic.
        var z = require('./kernel/jeforth.js')
        var kvm = z.kvm;
    this means: the 'kvm' virtual machine object is and will be the only one. Older code was,
        var z = require('./kernel/jeforth.js')
        var kvm = new z.KsanaVm()  // get the jeForth VM
    which means KsanaVm() constructor can be used multiple times, I don't think so.

[x] With selftest, 3nd can't show things after jeforth.f in the main .js
    ==> Not "selftest-invisible" ---> try 1/2 sort.... Wow! strange. Post jeforth.f
        instructions are executed when at the first *** command in selftest !
    ==> RI, because selftest '***' command uses 'sleep' command, that's why. Wow, jeforth
        is amazing. The 'sleep' command really suspend the VM.
        當初 1 sleep 是為了要讓 selftest message 一行行地印出來，不要突然一下全倒出來。
    ==> 既然有 sleep, 表示我的 jeforth 裡 fortheval(jeforth.f) 這一行必須是最後一行。
        很重要的大發現！否則，它後面的東西會被意外執行到。
    ==> So, the first OK prompt must be printed by jeforth.f not jeforth.3nd.js

[x] jsc for 3node. ( demo to FigTaiwan )
    How to switch Node.js readline.on() ?
    ==> 應該可以，但非置入式地（也必定是 blocking 的）方式，光切換 forth / jsc 也沒啥用了。
        jeforth.hta has alert(), prompt(), confirm() that are blocking functions.
        ==> 利用 kvm.stdio.question() 做成 macro kvm.jsc.xt 置入式地應用可以了。但 readline
            is none-blocking, 結果還是沒有用。
    ==> 找到辦法了！ http://stackoverflow.com/questions/3430939/node-js-readsync-from-stdin
        So now I have kvm.gets() which is a blocking function.

[/] jeforth.3nd can use kvm.gets() to support multiple line input!

[x] These two files,
        2014/10/15  17:01               448 jsc.hlp
        2014/10/15  17:00               733 jsc.js
    are not defined in jeforth.3nd.js directly because it's not convenient to define multiple
    line string, as far as I know. jsc.js will go to kvm.jsc.xt in text form so it will be a
    string too.

    If use <text> ... </text> to define kvm.jsc.help and kvm.jsc.xt then sure it's easy but
    then platform.f is supposed to do that. Then kvm.jsc life cycle will be delaied. I want
    jsc to be available earlier before jeforth.f.

[x] Node.js 本身的 REPL 可以 'see' object 效果超好，怎麼應用？
    ==> 那是 console.log() 的效果。 考慮 3nd 的 print() 裡面應該就用 console.log()
    ==> 找到了！用 util.inspect() or sys.inspect() for older Node.js systems.

[ ] FigTaiwan academic topic:
    o   jeforth can compile all function() into dictionary, instead of Word()'s. Hard to read the dictionary
        tho'.
    o   jeforth can drop the inner() interpreter. Use functions unnest() next() like eforth.com
        instead.

[x] jeforth.3nd how to clear screen?
    kvm.clearScreen = function(){console.log('\033c')}
    '\033c' or '\033[2J'
    http://stackoverflow.com/questions/9006988/node-js-on-windows-how-to-clear-console

[x] jeforth.hta (jeforth.commandLine + " ").split(/\s+/).slice(0,-1); // An array, 這麼麻煩是為了要自動把行尾的 white spaces 去掉。
    should use .replace() <=== No! the result is expected to be an array. The above method is smart.

-------------- jeforth for HTML ----------------------  hcchen5600 2014/10/16 10:45:41
[x] 一開始寫 jeforth.3htm 馬上發現當初 jeforth.3hta 的網頁結構可以更合理。
    [x] kvm.platform = "3hta"; 直接改成 ==> kvm.appname = "jeforth.3hta" 因為本來就有用到。
    [x] HTA:APPLICATION 設定裡的 ID 稱為 jeforth 並不好用。應該成為 hta 更好懂。

[ ] jeforth.hta 執行時的 working directory 當成 root folder. 這限制了它的用法。
        c:\>node64 c:\Users\8304018.WKSCN\Dropbox\learnings\github\jeforth.3hta\jeforth.3nd.js
        fs.js:427
          return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);
                         ^
        Error: ENOENT, no such file or directory 'c:\3nd\jsc.hlp' <========== Problem!
            at Object.fs.openSync (fs.js:427:18)
        .... snip .....

    我的舊 jeforth.3nw 有解決過這個問題。

[ ] 有兩種 run jeforth.htm 的方法，透過 web server、從 local 直接 run. 看能不能兩種都 support?
    從 local 直接 run
    要解決 read data file 的問題，已經有解了。缺點是必須人工操作。
    https://www.evernote.com/shard/s22/nl/2472143/62b103ca-c162-48eb-99b3-eeecef88e2db

    透過 web server 可能最合理。可用 Python one liner 當 server 很簡單。
        set path=c:\Program Files (x86)\OpenOffice 4\program; <== python.exe v2.7.5 is there
        python -m SimpleHTTPServer 8888
    "Anonymous Person" provided the iframe solution, as URL below. I tried, it works fine.
    http://stackoverflow.com/questions/12760852/how-to-access-plain-text-content-retrieved-via-script-type-text-plain-src
    https://www.evernote.com/shard/s22/nl/2472143/f8a48817-933d-4681-a6bb-90eb10649fcd


[x] 用 iframe 的方式 include text file, extended filename can not be .f or it will be saved to
    local disk directly. 暫時改名 jeforth.f==>jeforth.txt, voc.f==>voc.txt
    Study ...

    The problem is similar to this page,
    "Bug 235363 - When opening a .php file inside of an <iframe> promts for download."
    https://bugzilla.mozilla.org/show_bug.cgi?id=235363.

    Set / Change MIME type of iFrame? ==> No way!
    http://stackoverflow.com/questions/12144554/set-change-mime-type-of-iframe.

    好像必須從 Web server 端解決這個問題，
    //设置输出文件类型为excel文件。
            Response.ContentType = "application/ms-excel"; <============== Solution??
            Response.WriteFile(fileName);
            Response.Flush();
            Response.Close();
            Response.End();
    http://blog.163.com/zyc951018@126/blog/static/1397628992011111543924384/

    B i n g o !! This is my solution,
    http://stackoverflow.com/questions/12144554/set-change-mime-type-of-iframe/26420811#26420811

[x] Don't use iframe, use $.get() instead
    jeforth.3htm,
    iframe 抓進來的時間是個問題。 jQuery('iframe').load() 只解決第一個 iframe而已。可能寫法要改精確
    一點。我用最後一個來代替，有成功，如下。但這不可靠吧？
    jQuery('#html5f').load()

[ ] bug! found in jeforth.f run by jeforth.3htm, when forth comment \ at end of a line then the
    next line will be eaten. ==> jeforth.hta 是因為 source code 用 ANSI Big5 可能對 JScript host 有問
    題。改用 ADO 讀 utf-8 source code 之後應該好了。

[x] Start design readTextFile for 3htm. ==> 3htm/f/readtextfile.f
    : readTextFile  ( "pathname" -- string ) \ "" if file not found
        js> pop().replace(/^\s*|\s*$/g,'') \ remove white spaces
        s" <iframe src='" swap + char ' + s"  hidden></iframe>" + </h> ( -- iframe )
        js: $(tos()).load(function(){execute('stopSleeping')}) 10000 sleep
        js> tos().contentDocument.body.lastChild.innerText
        swap removeElement ( -- string )
        js> tos().indexOf('404')!=-1 ( -- string 404? )
        <js> tos(1).toLowerCase().indexOf('not found')!=-1</jsV> ( -- string 404? notFound? )
        js> tos(2).length<100 ( -- string 404? notFound? length<100 )
        and and if drop "" then
        ;
[x] char f/mytools.f readTextFile <=== failed, still run to the old one!!
    cfa, creater, don't foget to replace xt too!!
[x] improve the jeforth.htm iframe ready sequence. This is the recent working version,
        // System initialization
        jQuery(document).ready(
            // jQuery convention, learned from W3School, make sure web page is ready.
            function() {
                jQuery('#readtextfilef').load(
                    // for iframes, use load() instead of ready(). http://stackoverflow.com/questions/205087/jquery-ready-in-a-dynamically-inserted-iframe
                    function() {
                        $('#rev').html(kvm.version); // also .commandLine, .applicationName, ...
                        $('#location').html(window.location.toString()); // it's built-in in DOM
                        $('.appname').html(kvm.appname);
                        document.onkeydown = hotKeyHandler; // Must be using onkeydown so as to grab the control.
                        kvm.init();  // setup platform related I/O
                        var kernel = jeforthf.contentDocument.body.lastChild.innerText;
                        jeforthf.parentElement.removeChild(jeforthf); // suicide
                        // jeforthf.contentDocument.body.lastChild.innerText=""; // 否則會不斷累積！不知是前後端哪一端的問題。
                        kvm.fortheval(kernel);  // Run jeforth.f once.
                        // fortheval() 之後不能再有任何東西，否則因為有 sleep/suspend/resume 之故，會被意外執行到。
                    }
                )
            }
        );
    下面這個方法 Chrome 下有時候會等不到！
        // System initialization
        jQuery(document).ready(
            // jQuery convention, learned from W3School, make sure web page is ready.
            function() {
                $('#rev').html(kvm.version); // also .commandLine, .applicationName, ...
                $('#location').html(window.location.toString()); // it's built-in in DOM
                $('.appname').html(kvm.appname);
                document.onkeydown = hotKeyHandler; // Must be using onkeydown so as to grab the control.
                kvm.init();
                jQuery('#jeforthf').load( // for iframes, use load() instead of ready(). http://stackoverflow.com/questions/205087/jquery-ready-in-a-dynamically-inserted-iframe
                    function(){jQuery('#vocf').load(function(){jQuery('#selftestf').load(
                    function(){jQuery('#html5f').load(function(){jQuery('#readtextfilef').load(
                        function() {
                            var jef = jeforthf.contentDocument.body.lastChild.innerText;
                            var voc = vocf.contentDocument.body.lastChild.innerText;
                            var rea = readtextfilef.contentDocument.body.lastChild.innerText;
                            var htm = html5f.contentDocument.body.lastChild.innerText;
                            jeforthf.parentElement.removeChild(jeforthf); // suicide 否則會不斷累積！
                            vocf.parentElement.removeChild(vocf); // suicide
                            readtextfilef.parentElement.removeChild(readtextfilef); // suicide
                            html5f.parentElement.removeChild(html5f); // suicide
                            kvm.fortheval(jef+voc+rea+htm);  // Run jeforth.f once.
                            // 之後不能再有任何東西，否則因為有 sleep/suspend/resume 之故，會被意外執行到。
                        }
                    )})})})}
                )
            }
        );
    改成這樣，還是會漏接：
        // System initialization
        var jef,voc,rea,htm,sel; jef=voc=rea=htm=sel="";
        jQuery('#jeforthf').load(
            function() {
                jef = jeforthf.contentDocument.body.lastChild.innerText;
                jeforthf.parentElement.removeChild(jeforthf); // suicide 否則會不斷累積！
            }
        );
        jQuery('#vocf').load(
            function() {
                voc = vocf.contentDocument.body.lastChild.innerText;
                vocf.parentElement.removeChild(vocf); // suicide 否則會不斷累積！
            }
        );
        jQuery('#selftestf').load(
            function() {
                sel = selftestf.contentDocument.body.lastChild.innerText;
                selftestf.parentElement.removeChild(selftestf); // suicide 否則會不斷累積！
            }
        );
        jQuery('#html5f').load(
            function() {
                htm = html5f.contentDocument.body.lastChild.innerText;
                html5f.parentElement.removeChild(html5f); // suicide 否則會不斷累積！
            }
        );
        jQuery('#readtextfilef').load(
            function() {
                rea = readtextfilef.contentDocument.body.lastChild.innerText;
                readtextfilef.parentElement.removeChild(readtextfilef); // suicide 否則會不斷累積！
            }
        );
        jQuery(document).ready(
            // jQuery convention, learned from W3School, make sure web page is ready.
            function() {
                $('#rev').html(kvm.version); // also .commandLine, .applicationName, ...
                $('#location').html(window.location.toString()); // it's built-in in DOM
                $('.appname').html(kvm.appname);
                document.onkeydown = hotKeyHandler; // Must be using onkeydown so as to grab the control.
                kvm.init();
                (function run(){
                    if(sel&&jef&&voc&&htm&&rea){
                        kvm.fortheval(jef+voc+htm+rea);
                        // 之後放東西要很小心，因為有 sleep 之故，會被意外執行到。
                    } else setTimeout(run,100);
                })();
            }
        );

[x] 想到一個技巧。JavaScript 常常撞上 Cannot read property 'x' of undefined ( or null )
    造成程式中斷。這可以用 && || 的特性來避免。
        : test js> kvm.a.b . space js> kvm.a.b . space ;
    執行 test ==> P A N I C ! JavaScript error on word "test" : Cannot read property 'b' of undefined
    改成以下寫法，run TSR 不會出錯終止程式,
        : TSR 100 for js> kvm.a&&kvm.a.b . space 1000 sleep next ;
    隨後再根據失敗的線索，回頭去定義 kvm.a 而非一失敗就終止程式。
    jeforth.hta 裡，讀取 iframe 很容易失敗，造成程式中止，
        jef = jeforthf.contentDocument.body.lastChild.innerText;
    改成
        jef = (jef=jeforthf.contentDocument.body.lastChild||"")&&jef.innerText;
    即可。

[x] iframe is a 旁門左道。好好的去讀 server 端的資料就好了呀！怎麼做？
    $.get('1.htm',"text") ==> The result is an object {readyState,getResponseHeader,getAllResponseHeaders,
    setRequestHeader,overrideMimeType,statusCode,abort,state,always,then,promise,pipe,done,fail,progress,
    complete,success,error,responseText,status,statusText}
    ==> tos().responseText is the data
    ==> tos().status ==> 200(c8h) or 404(194h) number, HTML status code
    Shit! so easy.
    ==> It returns the object immediately. But the obj.status will be 'undefined' at first and become
        200 or 404 later.
    ==> use $.get('1.htm',callback,"text") to get called back
    ==> Shit! tos().status is not always there!
        Try f js> pop().state() . "resolved" or "pending"
        See this experiment,
            <js>
                var f = $.get("1.htm",'text');
                f
            </jsV> constant ff
            ff js> pop().state() . space 1 sleep
            ff js> pop().state() . space 1 sleep
            ff js> pop().state() . space 1 sleep
            ff js> pop().state() . space 1 sleep
            ff js> pop().state() . space 1 sleep
            ff js> pop().state() . space 1 sleep
            ==> pending OK pending resolved resolved resolved resolved
    [x] $.get() 有 cache 的問題，在 IE 特別嚴重，根本不去讀新版！
        http://stackoverflow.com/questions/367786/prevent-caching-of-ajax-call
        http://stackoverflow.com/questions/10610034/jquery-get-caching-working-too-well
        I choose the global setting as my solution : $.ajaxSetup({cache:false})
        This issue is jeforth.3htm 特有的問題。改 3htm/readTextFile.f。

[ ] The whole project's name jeforth.3WE three words engine

[x] ==> Root cause 出在用 fso 讀text不support utf-8, 所以 kernel jeforth.f 是用 ANSI Big5, IE 又出問題。
        改用 utf-8, jeforth.hta 不用 fso 改用 ADO 即可讀 utf-8, 皆大歡喜。
    jeforth.3htm has bug on IE 10.0.9. I should also try FF and Linux.
    ==> IE's debugger easily finds the growing words.forth stop at 'create'. Strange thing is
        tick('create') => 0 ! The last 3 words have the same problem.
            roll . space compile create
        the . is dispeared, and tick later three gets 0. <=== problem.
    ==> first colon word : space ... ; would replace the previous word . dot.
        The bug is in ; colon or ; semi-colon or reveal.
    ==> IE debugger F12 is as good as Chrome's.
            if(kvm.debug&&(kvm.debug=333)) debugger;
        But you need to enable by click the [Start Debugging]
        button. Instruction 'debugger' is also supported. --> something wrong in (create) , after
        (create) words.forth is still same <--- new word 'test' created by : test [ is expected.
        so everything supposed to go to last() goes to '.' !! <=== Cause !!
    ==> Why current_word_list().push(new Word([newname,function(){}])) does not work?
        --> current_word_list().push(123) --> OK
        --> current_word_list().push(new Word(['tteesstt'])) --> OK
        --> single step trace : test 112233 ; ---> OK! strange???
        --> bp in ';' --> Proved the wrong last() happened before ';' <-- shoooo! good progress.
            should have created words.forth[109] for the new word : tst 112233 ; but didn't <--- problem!
        --> move bp earlier to where the new word is supposed to be created.
            yeah, it has happened after (create) --> move bp earlier into (create) --> very very strange
            finding! see below, the entire line before bp.11 is missing!!!!! because the previous comment
            is ended with chinese characters and thus it *eat* the next line, as shown below,

                newxt=function(){ /* (create) */
                                if(!(newname=pop())) panic("Create what?\n", tib.length-ntib>100);
                                if(isReDef(newname)) print("reDef "+newname+"\n"); // ?Y??tick(newname) ?N??                current_word_list().push(new Word([newname,function(){}]));
                if(kvm.debug&&(kvm.debug=11)) debugger;
                                last().vid = current; // vocabulary ID
                                last().wid = current_word_list().length-1; // word ID
                                last().creater = ["code"];
                                last().creater.push(this.name); // this.name is "(create)"
                                last().help = newname + " " + packhelp(); // help messages packed

            Add space after the ending chinese character '了' can fix the problem. But I don't like it.

            My jeforth.f is ANSI Big5. I use Big5 because jeforth.hta has problem with UTF-8.
            Now I guess that was "utf-8 with BOM" (3 bytes: EF BB BF) leading marks that caused
            the jeforth.hta problem. <== YES!!
            If use 'utf-8 without BOM' then jeforth.hta become ok with utf-8, *AND* if IE were ok <== YES!!
            with utf-8 even comment with chinese character at the end of line, <=== YES!!
            then let's switch to use utf-8 without BOM encoding for source code. <==== YES!

            By the way, jeforth.f encoded in utf-8 with BOM works fine on 3htm+IE and 3nd. So, only
            3hta has problem. So, Microsoft's HTA does not work with utf-8 with BOM and IE does not work
            with Big5, so Microsoft engineers only work on utf-8 without BOM.

        [x] 3HTA has big problem with utf-8! clock3.f does not work because it contains Chinese
            named words! Those words become garbage and are not working correctly. <==== problem!!
            ==> Root cause 出在用 fso 讀text不support utf-8, 改用 ADO 即可。

    [x] I have this line, ==> Root cause 出在用 fso 讀text不support utf-8, 改用 ADO 即可。
            <meta charset="utf-8" />
        in jeforth.hta. But it shows utf-8 chineses as garbage while Big5 good. Why? <=== HTA is wrong!
        The funny thing is, in jeforth.htm the situation is reversed: Big5 garbage and utf-8 OK. <== Correct.
        ==> Change <meta charset="utf-8" /> to something else to reverse 3htm behavior. Make sure this line
            is the key. --> Failed!! modify jeforth.htm to <meta charset="ansi" />
        ==> How to use codes instead of string? So as to control characters.

        [x] I found, under DOS box running jeforth.3nd. js> "\377" . prints HTML code &#255, a y with
            strange looking <==== Surprise, ASCII 255h is blank !!!!!!
            往下看！我後來發現在 Window 8 DOS box 下 jeforth.3nd 可以同時顯示正、簡體的中文！取決於
            print() 所用的 function。
        [x] Similar situaion in jeforth.hta, after OK prompt, type char &#255
            it shows char y <== strange y. But it's "&#255" at TOS.

    [x] jsc is now in trouble under jeforth.htm !!!
        OK jsc

        J a v a S c r i p t   C o n s o l e
        Usage: js: kvm.jsc.prompt='messsage';eval(kvm.jsc.xt)

        ------------------- P A N I C ! -------------------------
        JavaScript error on word "jsc" : Cannot set property 'prompt' of undefined
        abortexec: false
        compiling: false .... snip ......
        ===> 靠！忘了 jsc in jeforth.f is for 3hta only 啦！ 有替 3nd 寫好了 jsc, 3htm 還沒有啦！
        [x] 嘗試把 jeforth.f 裡的 jsc 定義拉出來，各個 application 放在前面一點的地方。

    [x] jeforth.htm selftest failed so far on IE. (Chrome ok)
        ==> 因為 voc.f 又是 Big5 coded !!
        ==> 改成 utf-8 .... still failed. tick ' undefined! <====
            ==> cache 搞鬼 voc.f 怎麼改都無效。
            --> char kernel/voc.f readTextFile . <==== 改過了，還是讀到舊資料。
            竟然又真的是 cache 的問題，voc.f 讀到 cache 版了。
            --> Ctrl-F5 無效，必須把 IE 整個關掉重開才行。
        ==> 確定 voc.f 本來是 Big5 改成 utf-8 encoding 就好了。
[x] HTA 其實可以顯示中文。手動輸入
    : test ; /// 中文注视
    /// 繁體也型
    ，即可見得。js> tick('test').comment binary-string>array 得
    0: 9,20013,25991,27880,35270,10,9,32321,39636,20063,22411,10 (array)
    --- chinese.f -----
    : chinese ; /// 中文注视
    /// 繁體也型
    -------------------
    include chinese.f 來看，help -n chinese 顯示亂碼！
    js> tick('chinese').comment binary-string>array 得
    1: 9,37533,21084,63,30236,21051,63,10,9,34652,61247,63,37515,60929,63,10 (array)
    ==> 試 char chinese.f readTextFile . 印出來就是亂碼
    ==> 查 readTextFile 的寫法。。。var data = kvm.readTextFile(pop());
        var txtFile = kvm.fso.OpenTextFile(
            pathname,
            1,                 // ForReading
            false,
            0                // TristateFalse <==== 問題出在這裡, 只能放 0, -1 並不是 utf-8 !
        );
        TristateUseDefault  –2  使用系统缺省打开文件。
        TristateTrue    –1  以 Unicode 格式打开文件。 UCS-2 Big Endian 或 UCS-2 Little Endian 都不是 utf-8!!
        TristateFalse      0  以 ASCII 格式打开文件。
    ==> This is the answer http://stackoverflow.com/questions/13851473/read-utf-8-text-file-in-vbscript
        Dim objStream, strData
        Set objStream = CreateObject("ADODB.Stream")
        objStream.CharSet = "utf-8"
        objStream.Open
        objStream.LoadFromFile("C:\Users\admin\Desktop\ArtistCG\folder.txt")
        strData = objStream.ReadText()
        objStream.Close

        kvm.readTextFile = function(pathname) {
            var strData, objStream = CreateObject("ADODB.Stream");
            objStream.CharSet = "utf-8";
            objStream.Open();
            objStream.LoadFromFile(pathname);
            strData = objStream.ReadText();
            objStream.Close();
            return(strData);
        }
        Bingo!!!
    ==> Try how to saveToFile
        The below experiment works fine, Bingo!!
            <js> new ActiveXObject("ADODB.Stream") </jsV> value objStream
            objStream js: pop().CharSet="utf-8"
            objStream js: pop().Open();
            objStream js: pop().LoadFromFile("readme.txt")
            objStream js: pop().SaveToFile("3.txt",2) \ adSaveCreateOverWrite=2, adSaveCreateNotExist=1(can't overwite)
            objStream js: pop().Close()
        Try to write my string, it works fine, Bingo!!
            <js> new ActiveXObject("ADODB.Stream") </jsV> value objStream
            objStream js: pop().CharSet="utf-8"
            objStream js: pop().Open();
            objStream js: pop().WriteText("11"); \ option: adWriteChar =0(default), adWriteLine =1(\r\n)
            objStream js: pop().WriteText("22"); \ option: adWriteChar =0(default), adWriteLine =1(\r\n)
            objStream js: pop().SaveToFile("3.txt",2) \ adSaveCreateOverWrite=2, adSaveCreateNotExist=1(can't overwite)
            objStream js: pop().Close()
    [x] 改寫 kvm.writeTextFile

[ ] binary.f does not need VB module, use new ActiveXObject("ADODB.Stream");
[x] Make utf-8 with BOM leading EF BB BF a nop word : EFBBBF ;
    ==> No need I guess. 3HTA was a bug of using the incorrect fso module which does not support utf-8.

[x] Node.js DOS box 顯示 utf-8 可能有妙用 <=== 確認可以！
    正體中文顯示在 DOS box 之下本來是得注意 chcp 950 Code Page 的設定。而且簡中系統也不好切 chcp 950.
    跑 jeforth.3nd source code 都是 utf-8 顯示中文倒是都正常。試試簡中系統。。。。
        这几个自是简体中文，在正体 DOS 下显示正常否？
    Ha! 兩種字體同時在 Window 8 DOS box 下正常顯示！

[ ] 所以，將來弄 jeforth.3dos 時，print() 的寫法要講究，有機會也能顯示 utf-8 中文正、簡通用！

------------------- jeforth.3we 誕生 hcchen5600 2014/10/21 15:28:15 -------------------------------

[x] improve canvas.f self-test, was too annoying.
[ ] improve html5.f self-test, was too rough for such an important module.

[x] 在 include source.f 裡面 skip 到 --EOF-- 的方法：
    js> confirm("要執行 canvas.f self-test 嗎?") [if] [else] <js>
        push("--E"+"OF--");execute("word"); // 如果不用 JavaScript code, 到這裡檔尾的 "--EOF--" 將成為下一個指令！
        pop();execute("BL");execute("word");pop();
        execute("--canvas.f--selftest--")
    </js> [then]

[x] jeforth.3we has released to FigTaiwan google groups last night. hcchen5600 2014/10/22 11:06:14
    ==> start to port jeforth.3nw to under jeforth.3we

[x] hcchen5600 2014/10/22 11:01:47 porting to jeforth.3we, modify jeforth.3we/3nw/index.html to
    obey jeforth.3we conventions.
    o first of all, jeforth.3we/3nw/index.html <script> was not in a closure (function()....)(),
      fix this problem first. (reasons is at above hcchen5600 2014/10/22 11:23:57 )

[x] Node-webkit default root folder is jeforth.3we/3nw/ , but it's better be jeforth.3we/
    for the jeforth.3we folder convention. So how to change?
    ==> set process.chdir() , check process.cwd()
    ==> The way jeforth.3nw.bat deal with this problem : start nw ../jeforth.3we %1 %2 %3 %4 %5 %6 %7 %8 %9
        It works if only package.json is there.
[ ] Review how to save selftest.log for each module. Like this in voc.f
        <selftest> --voc.f-self-test--
            js> kvm.appname s" jeforth.3htm" != [if]
                js> kvm.screenbuffer char selftest.log writeTextFile \ save selftest log file
            [then]
        </selftest>
        js> tick('<selftest>').enabled [if] js> tick('<selftest>').buffer tib.insert [then]
        js: tick('<selftest>').buffer="" \ recycle the memory

[x] If kvm.init() can accept instructions in an array like my Word() constructor then
    to work with eval() we can add variables into an clousure. Not a very good idea, the
    instruction string must be ready before <script> loads jeforth.js in <head>, that's
    not beautiful. While after jeforth.js will be loaded and kvm created, adding variables
    is not possible. So, use kvm.members is still the best way.

[x] <comment> needs the ability of nesting. Recursion will be very easy.
    Recursive word example,
        : test ( n -- ) \ Prints n n-1 n-2 ... 1
          [ last ] literal over if js> tos(1,tos(1)-1) . space else 2drop exit then execute ;
    ==> done!
    In case of code words, code test (function recursion(){...;recursion()})() end-code
    Use arguments.callee() instead of giving a name is ok too.
    http://stackoverflow.com/questions/7065120/calling-a-javascript-function-recursively
    [x] comment can be nested, how about ( .( ?
        : (     ( <str> -- ) \ Ignore the comment down to ')', can be nested but must be balanced
                js> nextstring(/\(|\)/).str \ word 固定會吃掉第一個 character 故不適用。
                drop js> tib[ntib++] \ 撞到停下來的字母非 '(' 即 ')' 要不就是行尾，都可以 skip 過去
                char ( = if \ 剛才那個字母是啥？
                    [ last ] literal dup \ 取得本身
                    execute \ recurse nested level
                    execute \ recurse 剩下來的部分
                then ; immediate

[ ] New words :: and :> are better than obj js> pop().foo.bar. Wait and see, if it's really
    good then go back to replace all existing source code to use them.

[x] Why 'compiling' command is immediate?
    All are "[compile] compiling" so should not be immediate. to is wrong.

[x] selftest.f 中 *** **** ***** 版本眾多， hard to understand. Improve them!!

[x] After selftest.f improvement, review nw.f, html5.f, wsh.f, .. etc. 善用 <selftest>
    來當做示範程式。不必定義那麼多用不著的 words。

[x] (forget) only forgets the last word of the *current* vocabulary. The limit of only the last word
    is not necessary while only the *current* vocabulary is important. Move to voc.f
    [x] Take care of when there's no words left.

[x] 3nw can't use 3hta's platform.f, need its own.

[x] user mistake : name . . . . end-code will double the new word with a strange rear one.
    ==> 這個不好解。end-code 本來也沒有防呆。
    ==> 靠 compiling 的數值來分辨也許可以。code 本來設 compiling=true, 改成 compiling=11 (隨便取11)
        隨後 end-code 時，檢查 compiling 必須是 11 否則就是 Error. ==> 成功！

[x] Print all utf-8 charaters
    : print-utf-8 for r@ ASCII>char . next ;
    10000 last execute ( this takes a real long time but it works )

[X] 3nw jsc removes leading space unexpectedly
    not jsc, print() has the problem, try ... <js> print(" 1234")</js>
    ==> plain() 的問題。所有 ' ' 都該改成 &nbsp; ==> 修正 jeforth.3nw.html
    ==> 3htm 也一樣 ==> 修正 jeforth.3htm.html

[x] 3nw 用到的 Node.js module 都可以沿用 3nd 現成的 ~.f 檔，妥善安排 kvm.path 即可共用 path.f, process.f,
    fs.f 等檔案。都放到 3nd/f 裡去。

[x] canvas.f <selftest> always run twice when ignored. Because when ignored, <selftest>.buffer need to
    be cleared but didn't.

[ ] 可向 FigTaiwan 報告
    New idea. Single step execute through the dicionary. Or set break point at
    dictionary. I guess this is done by inner(), so inner() has different version for debug mode
    and working mode. ==> Add this line into inner(), it really works!!
        if(ip==vm.bp){vm.jsc.prompt='ip='+ip;eval(vm.jsc.xt)};
    Very useful actually. We can change kvm.breakpoint to stop at next break point, or
    kvm.breakpoint="" to free run.

[x] Re-write p5.f processing loop call back function. How about :
    [ last ] literal ...something....  Forget it.

[x] readTextFileAuto terminated unexpectedly after include p5.f to run the bouncing ball.
    After p5.f, readTextFileAuto terminates at the half run this happened during p5.f actually.
    [x] ==> I doube it's caused by skipping the selftest, nope.
    [x] ==> It's because p5.f has a lot of timeout() on the run. ... YES! But why?
        processing loop is running a lot of timeout(). So I can simulate

    : tsr ( -- ) \ a tsr that triggers timeout()
        [ s" var f=function(){inner(" js> last().cfa + s" )};f" + </jsV> ] literal ( -- callBackFunction )
        [ <js> var f=function(){setTimeout(pop(),5)};f</jsV> , ]
    ; last execute
    js: kvm.debug=true;kvm.bp=629 dropall char clock3.f readTextFileAuto .s
    \ js: if(1){kvm.jsc.prompt='111222>>>';eval(kvm.jsc.xt)}
    \ forget tsr : tsr ;

    bp=629 didn't happen. --> How about normal case? --> yes! Normal case (w/o the TSR) bp=629 happens
    for several times due to path priority.
    ==> IP must be changed during readTextFile, check IP before and after execute('stopSleeping')
        ==> Yes! Become 'undefined'. Who did it?
    ==> TSR Rule#1  TSR gets control from waiting state
        TSR Rule#2  and return to waiting state. That's the assumption.
        TSR never consider that it can break into another process.
        While readTextFile is really give up the control to waiting state when sleeping, leaving
        TSR a big window to break into it.
    ==> An ideal TSR should not use any rstack. The above tsr pops rstack everytime when on the run!
        So, how to fix that? TSR should run only once. If a Call back function is running
        a colon word be carefull about that it will 'ret' <=== What if feed a 0 to the ret? <==== Bingo!!!

            \ Solution, this TSR works just fine!
            : tsr ( -- ) \ a tsr that triggers timeout()
                [ s" var f=function(){inner(" js> last().cfa + s" )};f" + </jsV> ] literal ( -- callBackFunction )
                [ <js> var f=function(){setTimeout(pop(),5)};f</jsV> , ]
                js> rstack.length if 0 >r then ;
                last execute
            dropall char clock3.f readTextFileAuto .s
            js: kvm.debug=true;kvm.bp=1147 dropall char clock3.f readTextFileAuto .s
    [ ] hcchen5600 2015/02/25 15:32:17
        其實 callback=function(){execute('tsr')} 也是個 call back function 的辦法。
        上例 tsr command on-timeout 時是 call back 直接進來的。這般直接

    [ ] 可向 FigTaiwan 報告
        TSR important rule!! Modify processing loop
        ==> p5.f add one line like this : js> rstack.length if 0 >r then ; interpret-only
            Has fixed the problem.
    [x] Experiment : test 111 3000 sleep 222 ; run test when the new p5.f TSR is running ... OK.
        But clock3.f is wrong. Only [111] , 222 will be missing. ==> Because clock3.f TSR loop
        needs the solutions too. ==> Yeap. Done!


[x] JUMP is easy in colon word.
    1.  One way is to compile the destination ip number to replace the ret/exit return ip in rstack
        will be used by the destination word's ret/exit.
    2.  Another way is thus to replace the rTOS to the destination. Headache!
    3.  Or push destination to rstack and then make a ret. Very simple.

[ ] js> require('sys') constant sys // ( -- obj ) sys.print, sys.log, sys.isArray, ... etc
    sys obj>keys .
    format,deprecate,print,puts,debug,error,inspect,isArray,isRegExp,isDate,isError,p,log,
    exec,pump,inherits,_extend
    Many of them does not work in Node-webkit at first. But I think that's resolvable.

[ ] call back function study
    1. Use code word itself to be a call back function.
        code tt print(Date());this.timer=setTimeout(arguments.callee,1000) end-code
        js: clearTimeout(tick('rr').timer)
    This example works fine. But it can't stop. The this.timer was refer to tick('tt') at first
    time only! For all the rest triggers, 'this' is the DOM window object. So we change it to,
        code rr print(Date());tick('rr').timer=setTimeout(arguments.callee,1000) end-code
    and it's perfect. It passed the : test 1111 3000 sleep 22222 ; test too.

    2. Use colon word to be a call back function
    In this example, the colon word is called by inner(cfa) from another function or code word.
        : handler char . . ;
        code tt inner(tick('handler').cfa);setTimeout(arguments.callee,1000) end-code last execute
    But this example can not pass the : check 111 3000 sleep 222 ; test, 222 will not appear because
    during the 3 sec sleep, timeout happened and the handler will *eat* the rstack for its ret.
    Because timeout happens a lot therefore all rstack will be cleared after a while <== problem.
    The correct implementation of the handler is,
        : handler char . . js> rstack.length if 0 >r then ;
    Push 0 to rstack due to the assumption of that all handlers are started from the waiting state,
    0 brings the handler back to waiting sate.

        ~%~%~%~%~%~ 參考自己,抓自己,取得自己,自身,參考自身,參考本身,取得本身 ~%~%~%~%~%~
        \ 設定、取得 colon word 本身的方法，
        \   : test [ last literal ] ; \ 基本型 TOS is _me
        \   : test [ last :: vv=1111 last literal ] :> vv ; \ init static variable
        \ 取得 colon word 本身的 cfa 有下列方法
        \   a）[ js> last().cfa ] literal 即是
        \   b）[ last literal ] :> cfa 同上，這個不 optimize。
        \   c）colon word 裡一見面 js> ip 2- 也是，但有 proprietary 之嫌。
        \ 取得 code word 自身可以考慮用 tick('name'). 另一可能 arguments.callee 參考到 xt 而不是
        \ code word object 本身。如何在 code word 裡安置 static variable 參考到自己?
        \   經由 "newxt=function(_me){..." in docode() of kernel jeforth.js, and
        \   simply call w.xt(w) in the inner() loop, we have _me in any code word
        \   that indicates the code word itself. -- 08:42PM 2015/9/2


    3. Use an existing code word to setup a call back function
    This example shows that the xt of a code word can be used as a call back function.
        code cbServer ( request, response ) \ Web server call back function
            var response = arguments[1];
            response.writeHead(200,{"Content-Type":"text/plain"});
            response.write("Hello-World");
            response.end();
        end-code
        http :: createServer(tick('cbServer').xt).listen(8888);

[/] jeforth.3nd can use kvm.gets() to support multiple line input!
[/] 3nd's gets.f is very good. Try to support inputbox edit mode.

[x] comment \ in selftest mode should print the line <--- bad idea

[ ] local.f try to find a way for forth to be able to associate a family structure to share local
    variables from parents and also down to children.

[x] kvm.bp works fine, go on to develop s command for single step. ==> it's bp now. hcchen5600 2015/03/10 18:09:26

[ ] why execute(Word) does not *eat* rtos() at Word ret?
    因為 colon word 的 xt 自己有 push IP。TSR trigger 時的 IP 鐵定是 0 吧！？在工作中 event 被 queue
    起來不會發生。
    但是，在下例 TSR 的情形下，execute() 當時的 ip 沒有意義，到底 ip 是何值？雖然無所謂，還是看一下。kvm.breakpoint
    設在 show entry 處，查 rstack 即知 ...
        : tsr ( "msg" xx yy -- ) \ a tsr
        (-- bp+3 bp+2 bp+1 --) <js> setInterval(function(){execute('show')},1000) </js>
        ( 保護 TSR 的 local data 留在 rstack 裡存活 ) 0 >r ;
    ==> ip=953 jsc> rstack ==> [ 0, 0, 22, 11, 'Hi!', 969, 0 ]
                                 ^  ^                   ^  ^
                                 |  |                   |  |     這就是好奇想知道的 IP 值，果然是 0。
                                 |  |                   |  '---- 從 waiting state 進來時，'show'.xt push 進來的 IP 值。
                                 |  |                   '------- TSR 回 test 的 return address, 被棄置。
                                 |  '--------------------------- bp0
                                 '------------------------------ test 的 return address
    ==> 如上，保護 TSR 所做的 0 >r ; 與正常 event 發生時 execute('show'), 'show'.xt 所 push 的 IP 都是
        0 ，這個一致性很令人滿意。

[ ] 3nd's jsc can not <backspace> <==== improve the console input method.
[ ] 3nw's jsc can not <Enter> or <Esc>, must click <==== nw's Problem? Try Google.
[ ] Improve overall jsc's <up> <down> to support command history.
[x] Node.js has a 'querystring' module, also 'util' module
    querystring obj>keys .
    unescapeBuffer,unescape,escape,encode,stringify,decode,parse
    ==> I think 'querystring' is a HTML POST parser.
    ==> 'util' was 'sys' that provides console I/O and object viewer.


[x] Use full path for nw to require existing external module in Node.js folder
    char c:\Users\8304018\Dropbox\learnings\JavaScript\node.js\node_modules\formidable >path/ js> require(pop())
    constant formidable // ( -- module ) Node.js external module
    ==> It works. So 3nw can get Node.js' external modules without knowing how to setup nw correctly with all the
        path or root settings.

[ ] webserver.f can be run on jeforth.3nd and jeforth.3nw.
    It is actually a copy from the original JavaScript source.
    The beauty of jeforth is that I can bring out its internal variables to forth global variables for
    debug or for fun. [ ] Report to FigTaiwan.

[x] 3wsh can not use setTimeout() !! JScript does not have it. Try alternative solution.
    3wsh self-test 不過就算了。用 3HTA 取代即可。

[ ] study ~\Dropbox\learnings\JavaScript\JScript\深入挖掘Windows腳本技術.rtf
    Try set http=wscript.createobject("Microsoft.XMLHTTP")
    <js> new ActiveXObject("Microsoft.XMLHTTP") </jsV> constant XMLHTTP // ( -- xmlhttp ) DOM object, old method
    http://www.w3school.com.cn/xml/xml_http.asp
    <js> new window.XMLHttpRequest()</jsV> constant XMLHTTP // ( -- xmlhttp ) DOM object, new method
    XMLHTTP :: onreadystatechange=function(){execute("statusChanged")}
    : statusChanged ( -- ) \ XMLHTTP status
        ." XMLHTTP readyState changed : " XMLHTTP :> readyState . cr
        XMLHTTP :> readyState 4 = if
            XMLHTTP :> status dup ." XMLHTTP :> status : " . cr
            200 = if
                XMLHTTP :> responseText .
            else
                ." Problem retrieving XMLHTTP data:" XMLHTTP :> statusText . cr
            then
        then ;
    XMLHTTP :: open("GET","http://www.ibm.com",true);
    XMLHTTP :: send(null);
    \ XMLHTTP :> status .
    \ XMLHTTP :> responseText .
    XMLHTTP.readyState   http://www.cnblogs.com/fsjohnhuang/articles/2345653.html
    0：请求未初始化（还没有调用 open()）。
    1：请求已经建立，但是还没有发送（还没有调用 send()）。
    2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。
    3：请求在处理中；通常响应中已有部分数据可用了，但是服务器还没有完成响应的生成。
    4：响应已完成；您可以获取并使用服务器的响应了。
    [ ] 用 3HTA,3NW 都可以讀到 ibm.com 以及 apple 行情。但用 3WSH 只能讀到自己的 localhost:8888.
        與 Webserver 是 Node.js or Python 無關。3htm, 3ND 沒有 window object 但有更好的 http module。
        3WSH readyState 不會變，不知道怎麼回事。
    [ ] 讀到的 responseText 是 raw data, 裡面有很多地方是要程式跑起來了才會有東西的地方。怎麼辦？

    [ ] 先看一個支持斷點續傳下載web資源的例子 (for jeforth.3wsh)
    js> WScript.fullname.slice(-11)=="cscript.exe" [if] [else]
        ." Script host must be cscript.exe." cr bye
    [then]
    args :> named("url") ?dup [if] [else]
        ." Command line argument /url:<url> is missing." cr bye
        ." Usage: cscript jeforth.3wsh.bat /url:<url> /filename:<filename> include webdl.f" cr
        bye
    [then]
    js> kvm.fso constant fso // ( -- obj ) WSH Scripting.FileSystemObject
    js> kvm.ado constant ado // ( -- obj ) WSH ADODB.Stream
    <js> new ActiveXObject("Microsoft.XMLHTTP")</jsV> constant http // ( -- obj ) Microsoft.XMLHTTP object
    args :> named("filename") ?dup [if] [else]
        js> url.match(/.*\/(.*)/)[1]
    [then] constant filename // ( -- string ) Target filename

    0 value start // ( -- int ) 文件寫入開始位置
    filename fso :> fileexists(pop()) [if]              \ 判斷要下載的文件是否已經存在
        filename fso :> getfile(pop()).size to start    \ 存在，以當前文件大小作為開始位置'
    [else]
        filename fso :> createtextfile(pop()).close     \ 新建該文件
    [then]

[ ] webdl.f 斷點續傳 is not ok. Try 3hta first becaus 3wsh does not work well, don't know why.
    I better try to improve kvm.breakpoint debugging
    n : next ip
    g : free run
    [x] 把 kvm.debug=1111 定為單步執行的設定 ==> 很成功！ on 3hta first.

[ ] kvm.dictionary 可能不是真正的 dictionary! 因為 suspend-resume 中 dictionary 有經過
    copy by value 的過程。

[x] 把 jeforth.js kernel code 裡頭原來用 hash table 取代 switch(){...} 的寫法改回去用 switch().
    經 吳政昌 指點，這個場合用 switch 比較好。 ==> Done, committed.

[x] canvas.f self-test is annoying. Remove the confirming dialogs.
    [x] 引用 kvm.cv 當 default canvas 可簡化 canvas commands. 但是要記住自己的 canvas ID, processing.js
        alike event driven animation 上手時要把 kvm.cv 改成自己的，離開前要還原。 clock3.f 有做，很好。
    [x] p5.f 沒有做，有問題。做好了，但有點醜，進一步用 processing 本身來存放 cv & cvwas . . . done

[x] create-does> words need an ending 'ret' for a better 'see' result.
    [x] 由 does> 負責多 compile 一個 dmmy ret

[x] Writing demo program 小算盤.f
    [x] improve help message.

[x] for jsc debug, I need a jsc command to clear the debug message
    [x] jeforth.3hta jsc has a 'clean' command already that erase the output box from the bottom.
    [x] Same code but not work in jeforth.3htm yet,  why? ==> 檢查 inputbox 是否有東西的
        Boolean(inputbox.value) 在 HTA 是 false; 在 Chrome browser 是 true <=== Root cause
        ==> 查 inputbox.value.length -> 1, ==> inputbox.value.charCodeAt(0)->10
        ==> 改用這個方法判斷 inputbox 是否為 empty --> inputbox.value!=""&&inputbox.value!="\n"

[x] need a way to see or to save screen info when in jsc. 不行，整個 browser 都 block 住了！

[x] Study how to use command-line in jeforth.3htm.
    see d:\hcchen\Dropbox\learnings\github\jeforth.3we\3htm\url.f
        \ URL Parameter Passing in Javascript, WWW web page URL argument 如何應用 HTML
        \ https://www.evernote.com/shard/s22/nl/2472143/7f13ae42-668a-4af3-80df-18dc49b07f8a
        js> location.href constant url // ( -- 'url' ) jeforth.3htm url entire command line
        url :> split("?")[1] value args // ( -- 'args' ) jeforth.3htm args
        rnurlterms=urlquery[1].split(",")
        %20 is space
        %22 is "
        what else?
        只要看到 % 就把後兩 charactor 拿來變成 0xCC 轉換成 String.fromCharCode(0xCC);
        cls%20.%22%20hello%20world%20!!%20%22%20cr
        args :> split('%') --> cls,20.,22,20hello,20world,20!!,20,22,20cr OK
        第一個怎麼辦？ ==> 前面故意塞一個 %20 才好。 重來 ...
        char %20 args + :> split('%') --> ,20cls,20.,22,20hello,20world,20!!,20,22,20cr --> 對了！
        20aa OK js> "20aa".slice(2) .
        aa OK js> "20aa".slice(0,2) .
        20 OK
        中文出來變亂碼，英文可以了
        js> location.href constant url // ( -- 'url' ) jeforth.3htm url entire command line
        url :> split("?")[1] value args // ( -- 'args' ) jeforth.3htm args
        char %20 args + :> split('%') <js>
            for (var ss="",i=1; i<tos().length; i++){
                ss += String.fromCharCode("0x"+tos()[i].slice(0,2)) + tos()[i].slice(2);
            };ss
        </jsV> to args
    3htm\f\quit.f ... ok

[x] 恢復 jeforth.3htm self-test which is now disabled to avoid annoying.
[x] Improve help message for calc.f and html5_audio_demo.f

[x] for the alarm demo, trying embeded audio. see jeforth.3we/playground
    [x] I already know how to play 228.mp3, see html5_audio_demo.f
    [ ] Beep.f introduced how to play wave file too, it works on 3HTA so how about 3nw?

[/] Node-webkit 的 <audio> element 不 work！Licence 的問題。雖然可以解決，要改掉 .dll file，還是不
    要好了。jeforth.3we 的 user 還得去安裝 Node-webkit 都已經夠累了，再讓他們去改 .dll 沒價值，乾脆
    不 support 算了。
    https://www.evernote.com/shard/s22/nl/2472143/29e7f8b3-b9e9-408c-87b0-ad4b63016d3e

[x] alarm.f almost ok, [x] embed music mp3 [x] Title Text-Area.

[ ] 研究如何 communicate serial port?

[x] appname 不統一，HTML tag class 與 id 的使用原則想清楚。
    id    最好是唯一的變數名。
    class 是同質的一堆東西用在 CSS 調整。
    name  是一堆同質東西的共同名，例如 merge2.f 裡的 input targetsheet.
    當初不明白，亂填了一堆：
    [x] 應該只留 id , name & class 都拿掉。
        [x] index.html & jeforth.3htm.html
        [x] jeforth.3nw.html
        [x] jeforth.hta

    [x] 查 jeforth.3we 現有用到 class= 的 tag 只有三處，兩個 class=appname 一個 class=outputbox，都
        有待探討！
        [x] Web page tab title 上顯示的稱作 title 以 <title> tag 給值設定成 appname。
            查所有 application 都只有一個 <title> tag 無誤。
            用途： ce@ :> textContent="小鬧鐘"
            js> $('title').html() . ==> jeforth.3hta
            js> $('title').html('hehehe') <=== modify
            ==> appname appears at two place (1)Web page title, (2)Greeting message.
                $('.appname').html(kvm.appname); // 一次填好所有 appname
                So it's ok.
                [x] index.html & jeforth.3htm.html
                [x] jeforth.3nw.html
                [x] jeforth.hta

[ ] 透過 CSS 可以讓所有的 node 對 hover 作反應，因此可以任意 delete 或 drag-drop!!

[x] CSS selector 'element element' 可以 localize 設定，但碰到 input 好像就不行
    了（行，只是後來被改了）。input 好像都是 global 的？非也，'element element' selector 對 input 有效。
    但是 input 出現在 table class=alarm 裡面不等於 input 就會繼承 .alarm 的 style。<table class=alarm>
    只是讓這個 table 套用 .alarm 的 style, table 裡面只有 table 自己的東西 (th, tr, td 等) 套用到，現在
    回頭看，的確是這個意思。若要讓本 table 裡的 input 套用 .alarm 的 style, 明確表達為 .alarm input {}
    才對，也就是說，光 .alarm {} 且 <table class=alarm> 與 table 裡的 input 無關。

[x] A command set to manipulate HTML elements. ==> element.f
    ce 列出 id class name 以及部分內容
    [x] ce@ removeElement 之後可能斷鏈, ce 要有 default 值或保留 last ce.
        讓 current-element 變成一個 stack, 所有造訪過的 ce 都 push 進去。
        當發現 TOS 有異常就 drop 掉，改 pop 前一個讓來用。
    [x] node/element 殺掉以後還會留在 ce-history.tos 但是已經斷線，留著沒意義。應該自動 ce< 回上一層。

[x] 這個寫法是可以的，為何 element.f 裡還得傳 a[i] ?
    <js>
        var a=[], i=0;
        init();
        for(; i<10; i++){
            inc();
        }
        push(a);
        function init(){
            for (var i=0; i<10; i++) a[i]=0;
        }
        function inc(){
            a[i] += 1;
        }
    </js>
    ==> Don't remember what's the origianl question.

[x] Why <div id=endofinputbox style="position:absolute"></div> and scrollToElement($('#endofinputbox')); ?
    Why not clicking a <a> tag programmatically?
    [x] Yeah, scrollToElement() has now been removed,
        // http://stackoverflow.com/questions/9757625/jquery-how-to-scroll-to-certain-anchor-div-on-page-load
        // evernote:///view/2472143/s22/68f2501f-f702-4a9f-887e-d0d6d171e96f/68f2501f-f702-4a9f-887e-d0d6d171e96f/
        // 黃嘉祥/104case https://www.evernote.com/shard/s22/nl/2472143/1e57cafd-1133-4eca-bda7-ef10818527e9
        // var scrollToElement = kvm.scrollToElement = function (ele) {
        //  $(window).scrollTop(ele.offset().top).scrollLeft(ele.offset().left);
        // }
        ==> replaced by : jump2endofinputbox.click(); inputbox.focus();

[x] Is it a good idea to separate kvm.debug and kvm.breakpont?
    A jsc p command to pass through. Only n next step is not enough.
    ==> Now global variable bp instead of kvm.breakpoint.
        jsc command s, p, r see help for details.

[x] 3HTM, 3HTA, 3NW command history was 20 too small no reason. Changed to 10000.
    "max:   10000, // maximum length of the command history"
    [ ] A command to list the command history. As fancy as using a scrull bar to select one.
        Supports Up Down PgUp PgDn Home and End and even a Serach box.
    [ ] 自動過濾 cls .s . er <enter> 等等這些常用的命令也許是個簡便的構想 <--- 本來就有在過濾了。

[x] 示範 element.f command
    清掉幾個 element 整理畫面 clean outputbox by removing some elements
    ce 1 ce@ removeElement ce<
    ce 0 ce@ removeElement ce<
    er ce

[/] Working on playground/playCSS.f
    The two articles are essential --> see Evernote tag:CSS

[x] js> styleBase ce! ce@ dup se :> innerHTML . \ ==> 仔細看下列結果，這些設定合不合理。
    ==> Yea, textarea style inherits body's only border, background color, and width need specification.
        [x] 3hta [x] 3htm [x] 3nw

[x] After my study on playCSS.f, learned that we should avoid using global CSS style settings, local
    is better. jeforth.3we can be running many .f applications besides.
    [x] alarm.f
    [x] calc.f
    [/] merge2.f

[x] alarm.f 不能重複調用，應該可以。calc.f 禁止重複 inclcude 是合理的。
    [x] forget it, bad idea. When it alarms it's hard enough to find the source.
        Try to show the reminder message to the tab and title on browser. Change the tab color or something
        more observable is preferred.

[x] 很奇怪，alarm.f timeout 之後要改 table 的 border 竟然改不了，結果發現：Chrome 線寬要 12px 以上,
    而 IE11 則要 11px 以上才會生效！
    <o> <style> #alarm { border: 12px solid red; }</style></o>
    這樣看來是所有的 style 都生效了，而寬度不夠的被 (td 的是 10px) 遮住了！ canvas 畫圖似乎也有這種現象。
    ==> 讓設定 border 的 element 獨立，直接改它。
        <o> <style> .alarm { border: 12px solid #f0f0f0; }</style></o> constant alarm-border // ( -- element ) use this to change color.
        alarm-border <js> pop().innerHTML=".alarm { border: 12px solid pink; }"</js>
        alarm-border <js> pop().innerHTML=".alarm { border: 12px solid #f0f0f0; }"</js>

[x] try to change web page title color <--------- No way!
    <h> <title>test</title></h> constant title // ( -- element ) the document.title, must be in <head>
        /// but it doesn't work. I guess only the first title element takes effect.
    document.title='string'
    js> $('title')[0]
    js> $('title')[0] removeElement <---- 真的可以把用 document.title 改過的 title 變回 default 值。
    try again the above <title> tag . . . B i n g o !!!
    delete it again, try going fancy
    <h> <title style="background-color:red;">test</title></h> constant title // ( -- element ) the document.title, must be in <head>
    ==> Shit, http://stackoverflow.com/questions/13579477/can-i-give-a-title-tag-a-color-and-different-font
        只能用 JavaScript 做 blinking 不能 style。
        也行了！

[ ] jeforth.3htm 無法輸出東西到 file, 正規的方法是用 data URI
    http://stackoverflow.com/questions/8693289/how-to-write-localstorage-data-to-a-text-file-in-chrome
    <js> window.location = "data:text/plain, My Data"</js> \ 即可，但是會取代現有的 jeforth Window.
    <js> window.open("data:text/plain, My Data")</js> \ 開新 Window，這個比較好。
    <js> window.location = " 直接放 string "</js> 導致 404 Not Found。
    ==> 改 calc.f & alarm.f 讓 view source code 更友善一點。
        結果不理想 crlf 顯示不正確，
        char data:text/plain, char calc.f readTextFileAuto + js: window.open(pop())
    ==> 實驗證實，crlf 真的無效！
        <js> window.open("data:text/plain, My Data\r\n111\r\n222")</js> \ crlf 真的無效！都被吃掉
    ==> ha ha!
        <js> window.open("data:text/plain, My Data%0d%0a111%0d%0a222")</js> \ 這樣才對！
    ==> Final
        char calc.f readTextFileAuto \ 讀出 source code
        <js> pop().replace(/\r/gm,"%0d").replace(/\n/gm,"%0a").replace(/\t/gm,"    ")</jsV> \ 顯示在網頁上需要美容
        js: window.open("data:text/plain,"+pop()) \ 用 data URI 方式顯示在網頁上

[x] jeforth.3nw bye 不了 --> window.close() 要改成 process.exit()。
    ==> 昨天在家裡不行，但現在於 DOH7 上又可以了！ Strange.
    ==> 改用 process.exit() hcchen5600 2015/03/11 20:20:26

[x] jeforth.3nd 的 jsc 用到 kvm.gets() backSpace 不正常，早想改進。jsc 裡必須用 kvm.gets() 因為它是個
    blocking function, 難得阿！jsc 裡的 console 必須用 blcoking I/O。
    [x] jeforth.3nd can use kvm.gets() to support multiple line input!
        ==> ctrl-z is the way to end the inputbox.
        : e ( -- ) \ Multiple line input mode, not 'edit mode' yet though. Ctrl-z to end.
            js: kvm.gets.editMode=true
            js> kvm.gets()
            js: kvm.gets.editMode=false
            tib.insert ;

[x] jeforth.3nd jsc 下 back-space 不work --> 治好了。
    ==> js: push(kvm.gets()) 故意敲 aaa<backspace><backspace><backspace><cr> 結果如下，
        OK js> JSON.stringify(tos()) . ==> "aaa\b\b\b\r" OK
    ==> 用同樣的方法，發現 方向鍵無效。==> 本來就有處理 \r 了，加上 \b (backSpace) 即可 ==> ok now!
        雖然顯示方面還是不太好，但總算有 back-space 可用了。
[x] 沒事亂玩 jeforth.3nd, 翻看 node.js API document https://www.evernote.com/shard/s22/nl/2472143/1350d7a0-a2d9-4491-88d6-8e6c1de69ab8
    OK js> require('os')
    OK .s
          0: [object Object] (object)
    OK constant os // ( -- obj ) The os object
    os :> hostname() \ ==> WKS-38EN3477 (string)
    os :> endianness() \ ==> LE (string)
    os :> type() \ ==> Windows_NT (string)
    os :> platform() \ ==> win32 (string)
    os :> arch() \ ==> x64 (string)
    os :> release() \ ==> 6.2.9200 (string)
    os :> uptime() \ ==> 272946.0111274 (number)
    OK os :> networkInterfaces() (see)
    [object Object]
      Chenway :   [object Object]
      My Lenovo USB2.0 Ethernet Adapter :   [object Object],[object Object]
      VMware Network Adapter VMnet1 :   [object Object],[object Object]
      VMware Network Adapter VMnet8 :   [object Object],[object Object]
      Loopback Pseudo-Interface 1 :   [object Object],[object Object]
      Wi-Fi 2 :   [object Object],[object Object]
    os :> EOL \ ==>
     (string) <----------------- 看不出啥東西
    os :> EOL.length \ ==> 2 (number)
    os :> EOL.charCodeAt(0) \ ==> 13 (number)
    os :> EOL.charCodeAt(1) \ ==> 10 (number)
    要玩，玩 HTML5 繪圖吧！這 node.js 萬底深坑，我自覺不會去設計 server side 的東西了。
    雖然這樣想很不好。叫別人寫 Node.js 的文章來介紹它的用途，或者看 tutorial 當做樂趣，也比較好一點。

[x] 總覺得 alarm.f 不夠好，設定的時間應該要可以重複。把左邊的 [Reset] 大按鈕擴充成 [Reset/Clear]
    toggle。Clear 才是都清除，但不管 message，Reset 是恢復最後設定的時間。
    [Reset/Clear] toggle 所以不怕無法挽回。[Start/Pause] 也做成都顯示出來，比較好懂。
        OK js> start_button :: setAttribute('style','color:black')
        OK js> start_button :: setAttribute('style','color:gray')
        OK js> start_button :: setAttribute('style','color:black')
    CSS 連續的 <span> 如果都沒有設 color:green 則第一個 <span> 設了之後，以下全部變成, say, 綠色。
    一時覺得奇怪，想想這個設計也有道理，否則得全部都去寫 style attribute 不是很笨？

[x] html5.f 裡的東西，不常用的就覺得不該放裡面，但常用的，如 removeElement 與別人有何差別？
    總之，整理一下，看要不要把 element.f 併進去。
    ==> html5.f was in 3we/f/ now moved to 3we/3htm/f/
    ==> Added into quit.f instead of html5.f, they are different.

[x] node.js 有提供 precise timer, HTA 需要 precise timer 時怎麼辦？VBS 已經有 Timer 直接可以用，
    下面 demo 是個例子,
    : precise-timer-demo 100 for <vb> kvm.push(Timer)</vb> . cr next ;
    把它加進 mytools.f 裡去
    : precise-timer <vb> kvm.push(Timer)</vb> ;
    [x] 啊錯了！不該加在 mytools.f 裡面，HTA & WSH 專屬。

[x] p5.f 的 FrameRate 不準，問題出在 frameInterval 的算法可能要動態調節才行。
    \ FrameRate 60 時 delta 最小 12mS, 最大 140mS, 平均 26mS, frameInterval 1000/60=16.667mS 與實際平均值差太多，難怪不準。
    \ FrameRate 15 時 delta 最小 35mS, 最大 203mS, 平均 78mS, frameInterval 1000/15=66.667mS 與實際平均值還是差很多。
    \ 表示 FrameRate 到 frameInterval 的算法可能要改進才行，frameInterval 都打八折。。。
    \ FrameRate 15 時 delta 最小 23mS, 最大 238mS, 平均 63mS, frameInterval 1000/15=66.667mS 與實際平均值相比，frameInterval 打八折調整過頭了。
    \ frameInterval 取到 93% 結果還是岔不多。看來土土地打折效果有限，要乾脆動態調節才行。
    觀察上列數據，interval 16ms 時也有 precise-timer delta 小到 12ms 的時候，所以速度夠。實際跑
    setTimeout() 時不要直接用 frameInterval 而用 t-t0=delta 當 delta 大於 frameInterval 時就要調節實際
    設定值為 interval-1 , 而 interval 的初值為 frameInterval。
    ==> 這樣調整有效，但是誤差會累積。t0 記住，frameCount * frameInterval 與 t0 的距離用來調整 interval
        最直接，不會累積誤差。
    ==> 先研究 JavaScript 怎麼弄出個 static variable ==>
        <js>
            var a=0,b=0;
            var dumy = {seta:function(x){a=x},setb:function(x){b=x},average:function(){return((a+b)/2)}};
            dumy
        </jsV> constant avg
        avg js> tos().seta(11);tos().setb(22);pop().average() .
    ==> 調整太猛，變成 interval 一直震盪。舉個例子，開火車時每達 mile stone 就做一次加減速。這很好。我的情況是
        連續看到幾次落後，就連續加速幾次，這樣當然會在追上進度之後，馬上又發現快過頭了，接著又要減速，達到調節
        目標之後，又會發現太慢了。所以，調節的效果不要以當前位置與目標位置的差距正負值直接拿來當做加減速的依據
        ，改用差距的微分來看。當差距的幅度越來越小時，表示修正有效不必再修正，當差距的幅度越來越大時，表示要加
        強修正力道。
        把當前處境分成幾類 state 每個 state 有不同策略，a）穩定持航，b）太快要減速，c）太慢要加速。
        連續觀察得到兩個點與理想時間的差距，即可得知差距擴大或縮小。成功！
        See 構想筆記 https://www.evernote.com/shard/s22/nl/2472143/d59872ad-6153-450c-b237-e747ccc5d9df
        <js>
            // 直接用 frameInterval 誤差很大，要隨時修正才準。
            var t0,interval,deltaA,deltaB; // static variable。開始時間，隨時修正的 interval 時間。
            var dummy = {
                init: function(now){ // Usage: precise-timer interval.init(pop())
                    // kvm.temp=[]; // <--- 研究電腦速度能到多少，結論是 frameRate 約 60 就已經快滿檔了。
                    // kvm.r=[]; // <-- 研究每個 tick 的 now 與理想時間 fc*fi + t0 之間的差距。
                    t0=now;
                    fortheval('0 to frameCount frameInterval');
                    interval=pop();
                    deltaA = deltaB = 0; // 一開始假設時間都是準的。
                },
                value: function(){
                    execute('precise-timer'); var now = pop();
                    execute('frameInterval'); var frameInterval = pop(); // 可以動態被改所以要每次重抓。
                    execute('frameCount'); var frameCount = pop();
                    deltaA = deltaB;
                    deltaB = frameInterval*frameCount/1000 + t0 - now ;
                    if(Math.abs(deltaB)>1) {execute('precise-timer');this.init(pop())} // 自動校正，防 debug 時被搞亂。
                    if (deltaA*deltaB <= 0 || Math.abs(deltaB) >= Math.abs(deltaA))
                        // 異號，表示過頭了，或者差距擴大時，都要修正。只有同號且差距縮小時不必修正。
                        if(deltaB>0) interval += 1; // 正的表示實際時間落後，表示跑太快了，interval 要加一點。
                        else interval = Math.max(interval-1,1);
                    // kvm.temp.push(interval); // study
                    // kvm.r.push(deltaB); // study
                    return(interval);
                }
            }; dummy
        </jsV> constant interval // ( -- obj ) interval.init(now), interval.value(), precise floating interval time for setTimeout()

    ==> 這個方法很好，很準，但是用到 precise-timer 受限於 VBS 只 3hta 有。而且，從 log 下來的資料看，
        JavaScript 的時間本來就不準。要計較每個 tick 的精準本來就不切實際。
        ==> 改用普通時間 Date() 就已經很準了！ Shit ! 下面這行連續多做幾次看看，很準 <js> var date = new Date(); date.getTime() </js> . cr
            咦, 但這樣不行，時間不會變！ ==> <js> var date = new Date(); for (var i=0; i<1000; i++) print(date.getTime()+'\n') </js>
            這個倒可以: <js> for (var i=0; i<1000; i++){ execute('precise-timer');print(pop()+'\n')} </js>
        ==> 終於好了！ <js> for(var i=0; i<100; i++) print((new Date()).getTime()+'\n') </js>

[x] re-write ret and exit, they become compiling immediate words.
[x] find all ret and exit.

[x] phaseB() 裡 ip = w; // jump [x] 要改成 inner(w) 才對吧！ ==> No!  hcchen5600 2015/02/26 14:33:35

[x] In recent console design, 3hta and 3htm when there's a lot of 'printing' to outputbox then inputbox
    become strange, type 'jsc' become csj so we have to type 'csj' instead! I guess this is because my
    previous modification has made kvm.print() to also clear the inputbox <=== Root cause?
    ==> 改成印 OK 之後 jump2endofinputbox.click(); inputbox.focus(); ==> 觀察一陣子看效果怎樣。。。。。
    ==> 改成印 OK 之後 jump2endofinputbox.click(); // inputbox.focus(); ==> 好了！

[x] dump ( start length -- ) 碰到 null 就會停下來 <=== bug!!!
[x] inner() 大翻修前先 save 一版上 github. hcchen5600 2015/02/26 16:28:31
[x] why now 'see sleep' hangup?, ' sleep (see) hangup too. --> see see hangup too. ==> see wants to end up at 'ret' but
    there's no 'ret' now. ==> check all objRet
[x] 當 processing.f 裡要用到的 start-message, ending-message 不存在時，沒有警告直接結束！因為 execute('name')
    有問題，當 name 不存在時沒有警告，直接結束。因為 execute(0) 會中斷整個 inner(), 因發 inner() 設計大翻修。
[x] char no-such-word execute <==== No errormessage! 應該要出個 panic
    execute(undefined) 自動執行 last 實在沒有用，一併考慮改善。
[x] 讓 execute(ip) 去執行某個 ip 它只執行該處的指令,但是附帶會破壞到 ip 值，值得再想一想。
    ==> 可能簡單不要改 ip 值，skip ip=entry 這行，可乎？ ==> 不行！
    ==> execute() 不能直接套用 phaseA(), 要改寫。
    更重要的知識： 0 execute 並非不做事！而是半途終止當前的 colon word
    : test 1 2 3 0 execute 4 5 6 ;
    : test2 11 22 33 test 44 55 66 ;
    這樣用與 inner(entry) 重複，決定取消。
[x] abortexec is purposed on stopping both inner and outer loop.
[x] inner() overhaul, null=ret, ''=exit, 0=abortexec (also false, NaN and undefined).
    ==> re-write inner() ==> hcchen5600 2015/02/27 11:49:34 start debugging. Strange, why the first inner(entry)
        always got a entry=0 after the first breakpoint in inner() ? Check 3nw call-stack, it's from outer(0) in
        fortheval() that wants to resolve resumeing case. Not a problem, but probably needs improvement? [x]
    ==> compiling==true when executing 'test' <-- Because dictcompile(null) become infinit loop I guess <==== RI!!!
        [x] 'sleep' involves suspend-resume and that has a bug in inner(), the do-while loop needs special treatment .. done.
    ==> Ok now!
    [x] objRet => RET=null, ret instruction code
        objExit => EXIT="", exit instruction code
    [x] remove 'endinner'

[x] now null is 'ret'. I can say, everything in dictionary are 'instructions'. While null is exactly 'ret' instruction.
    As well as "" is the 'exit' instruction. (see) should make it clearer.
    [x] 0 is an instruction too, it suspends the recent inner() loop. So dictionary[0]=0;
[ ] Very important performance improvement.
    if everything in dictionary are instructions then why we still need phaseA? phaseA should have done
    when in compiling time. So inner() should be as simple as while(w){ip++; w.xt(); w=dictionary[ip]}
    nothing more!

[x] 保留 screenbuffer 在開發期是很重要的辦法，但平時感覺累贅。
    今設 kvm.screenbuffer=null 把它停掉; 反之 kvm.screenbuffer="" 恢復 logging。
    [x] 在每個 quit.f 裡把它停掉。
    ==> 'cls' should take care of the new logic,
            kvm.screenbuffer = (kvm.screenbuffer==null) ? null : "";

[x] To move kvm.cv canvas up into the outputbox,
        js> kvm.cv.canvas eleDisplay lastChild insertAfter
    Or anything else,
        eleBody lastChild eleDisplay lastChild insertAfter
    ===> move-cv-up-into-outputbox in canvas.f can do that.

[x] 用這行實驗，很容易發現 HTML5 canvas 的 x-y 座標有負值！左邊、上邊、左上角都會有 -1 -2 出現！
    <js> kvm.cv.canvas.onmousemove=function(e){print(e.offsetX + "-" + e.offsetY + '  ')} </js>

[x] Test the difference between fast-inner and debug-inner in performance. Speed-test.
    : speed-test
        ." Start time " precise-time(mS) dup . cr ( start-time )
        10000000 dup . ."  cycles" cr dup for next ( start-time count )
        ." End time " precise-time(mS) dup . cr  ( start-time count end-time )
        rot  ( count end-time start-time ) - ( count diff ) swap / .
        ." (mS) is the average time of each cycle " cr
        ." Start time " precise-time(mS) dup . cr ( start-time )
        20000000 dup . ."  cycles" cr dup for next ( start-time count )
        ." End time " precise-time(mS) dup . cr  ( start-time count end-time )
        rot  ( count end-time start-time ) - ( count diff ) swap / .
        ." (mS) is the average time of each cycle " cr ;

    [2(overhead + delta1) - 2(overhead + delta2)]/2
    =(2*overhead + 2*delta1 - 2*overhead - 2*delata2)/2
    = delta1 - delta2
    ==> debugInner on 3hta DOH7 ==> for-next 每圈約 0.34 uS
        Start time 1425453797376
        10000000 cycles
        End time 1425453800751
        0.0003375 is the average time of each cycle
        Start time 1425453800970
        20000000 cycles
        End time 1425453807740
        0.0003385 is the average time of each cycle
    ==> fastInner on 3hta DOH7  ==> for-next 每圈約 0.23 uS
        Start time 1425454862920
        10000000 cycles
        End time 1425454865226
        0.0002306 is the average time of each cycle
        Start time 1425454865281
        20000000 cycles
        End time 1425454869912
        0.00023155 is the average time of each cycle

[x] Word() property "creater : colon,(create) (array)" should simply
    be "type"={code,colon,colon-constant,colon-variable,marker,colon-vocabulary,alias...}
    does> words 要靠自己在 create 之後填 last().type='colon-<name>'
    要有 colon 字樣 see 才會正確用 colon 方式顯示。
    tool: list all words and their type
        <js> for (var i in wordhash) print(wordhash[i].type + ':' + i +'  ')</js>
    tool: list all types
        <js> for (var i in wordhash) print(wordhash[i].type+'\n')</js>
    tool: list all words of a certain type
        <js> for (var i in wordhash) if(wordhash[i].type.indexOf('constant')==-1) print(wordhash[i].type + ':' + i +'\n')</js>
        <js> for (var i in wordhash) if(wordhash[i].type.indexOf('alias')==-1) print(wordhash[i].type + ':' + i +'\n')</js>
        <js> for (var i in wordhash) if(wordhash[i].type.indexOf('variable')==-1) print(wordhash[i].type + ':' + i +'\n')</js>
        <js> for (var i in wordhash) if(wordhash[i].type.indexOf('vocabulary')==-1) print(wordhash[i].type + ':' + i +'\n')</js>
        <js> for (var i in wordhash) if(wordhash[i].type.indexOf('marker')==-1) print(wordhash[i].type + ':' + i +'\n')</js>
[x] why
    0: textarea:focus { border: 0px solid; background:#FFE0E0; } (string)
    1: [object Object] (object)
    2: textarea:focus { border: 0px solid; background:#E0E0E0; } (string)
    ===> in {F2}, used 'js>' when it should be 'js:'.
[x] call 'cr' from {F2} eats TOS unexpectedly. Suspect calling 1 nap from a call-back
    generates the problem.
    --> set debugger; before the handler's return.
        TOS will be pop for the return value. Why still there?    B i n g o ! !
        kvm.stack is not the stack , I believe that's because stack changed without update kvm.stack
        ---> kvm.stack=stack 不對，要改成 kvm.stack=function(){return(stack)} --> Done.
        --> but RI is still the 1 nap in cr.
    ==> 化簡問題，不靠 {F2} 複製。從外面 trigger 一個 event 進來，可用 sleep 達成。上手後
        弄好 stack 11 22 33 然後 cr 出來後查看 stack 看對不對
        : h 11 22 ." ---> " . cr ;
        js: setTimeout(function(){execute('h')},500)
        --> can't repro
    --> try {F3} ---> Repro'ed !!
        : {F3} ( -- false ) \ Hotkey handler, Toggle input box EditMode
            11 22 33 . cr 44 55 66 false ;
        33 printed but 22 eaten and the false appears ..... Ah ha!! that's what 1 nap does!
        when 1 nap suspend returned to the {F3}'s caller, document.onkeydown, instead of the
        interpreter idle!
            document.onkeydown:
            case 114: /* F3  */ if(kvm.tick('{F3}' )){kvm.execute('{F3}' );return(kvm.pop());} break;
        the following pop gets 22 and that's why Browser behaviors the F3 search hotkey.
        --> 可以看成：document.onkeydown 所 call 的 {F3} 在 cr 就已經結束了。但 rstack 都還在。
            document.onkeydown 結束之後過了 1 mS 的 nap, timeout 從 idle 上手又回到 h 裡來完成
            待續的部分，之後還是回到 idle。
        討論：
                從 onkeydown 經 execute() 上手，有沒有 rstack.push(0) --> 有，每個 colon word 自己的
            xt() 負責 rstack.push(ip) 故一定有。重點是此時的 ip 何值？應該是 0，沒錯。
            用 code {F3} debugger end-code 證實，code word 上手時 rstack is [] 空的，沒錯。
            ==> 所以，不論 {F3} 是從哪裡（interpret state, colon word, onEvent）上手的 rstack.tos
            都有回返位址，(0, ip, 0)。其中 onEvent 觸發的時間一定是 idle （javascript 特性）故 ip=0。
                1 nap 之後回到 {F3} 繼續未完成的工作，有意義嗎？有。從正常的 onEvent 進來，跟從
            Timout 進來，沒啥差別。這是可以允許的。
                最大的問題是，作者知不知道 cr 會造成一個 suspend-resume？ 對 {F3} 的 caller 而言 {F3} 就
            是在 suspend 時回來的，就這樣而已。知道 cr 也罷，知不知道還有哪些 word 也會呼吸？不知。
            所以要有 guide line。首先，不只是 onEventHandler 會有問題。目前因為 cr 會呼吸，隨便，
                OK : test 10 for r@ . cr next ; test
                    10
                     OK 9  <----- 就可以看到問題了, interpreter 以為 OK 跟 event handler 以為
                                  處理已經完成，是同樣的情況。並非 event handler 特別容易出問題。
                    ... snip ...
            指出 test 半路會結束回 interpret state, 這要是發生在 event handler 裡面，作者又不知道，那
            才會出問題。再做一個實驗，應印出 11 cr 22 33 結果是 11 cr 33 22 因為 cr 終止 L1 而 L2 馬
            上接手跑完。隨後 timeout 回來繼續 L1 未完成的部份。
                : L1 11 . cr 22 . ; code L2 execute('L1');print('33') end-code last execute
    ==> {F2} 裡不用 cr 改用 js: print('\n') 即可。
[x] 原來 1 sleep 的地方改成 1 nap <---- 只有一處，在 selftest *** 裡用來讓 print() 換氣的。
[x] 若用 sleep 也行，但 g.setTimeout.registered().length 會很多，怎麼自動消？
    js: push({a:1,b:2}) constant h js: delete(g.h.a) js> g.h (see) 確認可以殺 member
    --> 要不就讓 g.setTimeout.registered 改用 hash 方便殺。或看 array 能不能殺？
    // How to clear all setInterval() and setTimeOut() without knowing their ID?
    // http://stackoverflow.com/questions/8769598/how-to-clear-all-setinterval-and-settimeout-without-knowing-their-id
    [*] 缺點是 g.setTimeout.registered() 會大量堆積，需 delete(g.setTimeout.registered()[id.toString()]) 既然還得記住
        timeoutId 使得 g.setTimeout() 的好處大打折扣。 查看： js> g.setTimeout.registered() (see)
        setInterval 比較不會大量堆積，最好還是要適時 delete。查看：js> g.setInterval.registered() (see)

[x] cr 裡用了 1 nap 之後， suspend 期間會多打個 OK which is from kvm.forthConsoleHandler.
    ==> Can I use rstack to tell if forth is really OK?
            kvm.rstack().length==0
        try try see ... B i n g o ! !
    ==> // rstack 平衡表示這次 command line 都完成了，這才打 'OK'。
        // event handler 從 idle 上手，又回到 idle 不會讓別人看到它的 rstack。
        // 雖然未 OK, 仍然可以 key in 新的 command line 且立即執行。
        kvm.forthConsoleHandler = function(cmd) {
            var rlwas = kvm.rstack().length; // r)stack l)ength was
            print(cmd+'\n');
            kvm.fortheval(cmd);  // Pass the command line to KsanaVM
            (function retry(){
                if(kvm.rstack().length!=rlwas)
                    setTimeout(retry,100);
                else {
                    print(" " + kvm.prompt + " ");
                    jump2endofinputbox.click(); inputbox.focus();
                }
            })();
        }
        ==> 這段 code is from index.html of jeforth.3htm, all others should follow this solution
        [x]3htm [x]3hta, [x]3nw, [x]3nd, 唯 3wsh 沒有 setTimeout 故無此必要。

[ ] need a tool addr>word ( addr -- Word ) for debugging, find the
    word through the given address.

[x] need a 'breath' compile-only command to suspend and resume immediately ===> 從 cr 下手，用 1 nap 達成。
    To avoid suddenly print a lot of things. 問題是 jeforth 本身就是 event driven 不靠 1 sleep
    根本上不了手。---> 除非讓 sleep 單獨用另一組 suspend-resume 或者每一組 suspend-resume 都有自己的 call-back。
    因為只有 single thread 沒有人會被 interrupt 中斷。所有的 handler 包括 forth interpreter 自己都
    是從 idle 進來的，所以 handler、call-back 等也都一定回 idel 而非回到某個 process 的半途，甚至也
    不是當初 suspend 的 process！ 這點很重要，不同於以前所學。都是從 idle 上手，故多重 suspend 根本
    不存在，只要搞清楚 resume 怎麼上手、要回哪裡即可。
    [x] JavaScript 永遠只有 single thread, 下圖希望我的觀念是對的。
    [x] Suspend-resume 的 context save-restore 只跟 ip, tib, ntib 有關。rstack 永遠要 balance 是每個人
        的責任。自己管好 balance 比 save-restore rstack 要合理，作為 call-back 的 colon word 本身一定有
        ret 意味 rstack 有一回返位址；但是當由 event triggered 進入時不會有 return address in the
        rstack 所以 call-back 不是，
            function(){execute('onEvent')}
        而是類似，
            function(){inner(tick('onEvent').cfa+2)}
        這樣的東西。而前導指令就是 never 0 >r then
        [x] add a new command 'never' equals to jump to then ==> 'ahead' is exactly 'never'
            So : onEvent never 0 >r then . . . . ; is a call-back function
            Usage: setTimeout(function(){inner(tick('onEvent').cfa+2)},100)

                  .-------- Forth 由 Command Line 上手 --------.             Ball animation
                  |                  |                         |             延遲到 forth
                  v                  v                         v             忙完之後
            Forth .-----.            .---------.               .-------------.
                  |     |            |         |               |             |
                  |     |            |         |               |             |
            Idle ='====='.====.===.=.'========='.=.=.=.========'======*======'.=..===.======> time
                         |    |   | |           | | | |               ^       | ||   |
         Ball animation  |    |   '-'           | | '-'         ...DEF^       '-'|   |
         frame update    |    |      123456789ABCDEF^                            |   |
                         |    |                 | |             時間到但         |   |
            Print        '----'                 '-'             forth在忙        '---'
                        forth離開才馬上 print                                   print 也跟著被延後


                 .------ Command Line
                 |
                 v      *debug*                *debug*
        Forth    .-----.suspend     .---------.suspend         .------------.
                 |     |            |         |                |            |
                 |     |            |         |                |            |
        Idle ===='====='.====.===.=.'========='.=.=.=.======.=.'============'======> time
                        |    |   | |           | | | |      | |
        Debugging       '----'   '-'           '-' '-'      '-'
                                 q resume                   q resume

    : sleep ( mS -- ) \ Suspend to idle, resume after mS.
        [ last ] literal ( mS me )
        <js>
            var tibwas=tib, ntibwas=ntib, ipwas=ip, me=pop(), delay=pop();
            function resume() {
                if (!me.timeoutId) return; // 萬一想提前結束時其實已經 timeout 過了
                tib = tibwas; ntib = ntibwas; me.timeoutId = null;
                outer(ipwas); // resume to the below ending 'ret' and then go through the TIB.
            }
            function suspend() {
                tibwas = tib;  ntibwas = ntib;  ipwas = ip;
                tib = ""; ntib = ip = 0; // ip = 0 reserve rstack, suspend the forth VM
                me.timeoutId = setTimeout(resume,delay);
            }
            me.resume = resume; // So resume can be triggered from outside
            suspend(); // go to system idle state
        </js> ;
    code stopSleeping ( -- ) \ Resume forth VM sleeping state, opposite of the sleep command.
        clearTimeout(tick('sleep').timeoutId);
        tick('sleep').resume();
        end-code
    dropall 11 100000 sleep 22 .s stopSleeping
[x] 既然 sleep 可以憑空寫就 suspendForthVM(), resumeForthVM() are no longer needed.
    ==> sleep 改寫了，只剩 *debug* 有用到它們。
    : (*debug*)     ( msg -- ) \ Suspend to command prompt, use q command to quit debugging.
                    [ last literal ] ( msg me )
                    <js>
                        var tibwas=tib, ntibwas=ntib, ipwas=ip, promptwas=kvm.prompt , me=pop();
                        function resume() {
                            tib=tibwas; ntib=ntibwas; kvm.prompt=promptwas;
                            // resume to the below ending 'ret' and then go through the TIB.
                            outer(ipwas);
                        }
                        me.resume = resume; // So resume can be triggered from outside
                        kvm.prompt=pop().toString();
                        tib = ""; ntib = ip = 0;
                        // ip = 0 reserve rstack, suspend the forth VM
                    </js> ;
    : *debug*       ( <prompt> -- ) \ Forth debug console. 'q' to exit.
                    BL word compiling if literal compile (*debug*)
                    else (*debug*) then ; immediate
    code q          ( -- ) \ Resume from -debug-, go on running.
                    tick('(*debug*)').resume();
                    end-code

[x] sleep 可以 stopSleeping 所以不能多重 sleep. 另設 nap 可以多重 nap.

[x] abortexec still there, remove them. ===> rename to abortTIB

[ ] 0 here dump 越跑越慢 on 3htm , why?
    on 3hta is ok. ==> so how about 3nw? --> very good! It doesn't scroll so is fast.
    scrolling may not be the root cause on 3htm because 3hta is fine. I am thinking that why
    3nw doesn't scroll? The implementation is not 周延，各自有不同。==> 猜對了！但即使 3nw print()
    之後都帶 jump2endofinputbox.click(); inputbox.focus(); 試 0 here dump 也還是神速，且沒有問題。
    ==> 只有 3htm 在 chrome 有問題嗎？ --> on IE10 根本 run 不起來！readTextFile 有問題。f.state()
        一直在 'pending'
    ==> IE10 可以跑過 forth.f kernel , 足以試驗 0 here dump --> 沒問題！不像 Chrome 會在背後出問題。
    [ ] 能不能簡化 Chrome 的問題？報 bug

[x] IE10 跑 jeforth.3we 在 readTextFile 出問題，因為 getTextFile.f 裡用到 $.get() 不靈光。
    ==> 參考 http://stackoverflow.com/questions/247483/http-get-request-in-javascript
        直接用 http 會當! (webserver is the Python one-liner)
        null value xmlHttp // ( -- obj ) an XMLHttpRequest instance
        <js> push(new XMLHttpRequest()) </js> to xmlHttp
        xmlHttp :: open("GET",'1',false) \ synchronous request-response handling (false)
        xmlHttp :: send(null) \ <----------- IE 整個當掉
        xmlHttp :> responseText .
    [x] this line works fine on IE10
            js: $.get('1',function(data){push(data)})
        so, getTextFile 要不要改簡單一點？或者研究改良
    [x] 實驗 chrome, 結果 ok
            js> $.get('1','text') \ ==> 0: [object Object] (object)
            constant f // ( -- obj ) $.get() handle
            f obj>keys . \ ==> readyState,getResponseHeader,getAllResponseHeaders,setRequestHeader,
                            overrideMimeType,statusCode,abort,state,always,then,promise,pipe,done,fail,
                            progress,complete,success,error,responseText,status,statusText OK
            f :> readyState ==> 4
            f :> state() ==> resolved
    [x] study jQuery.get()  http://api.jquery.com/jQuery.get/ 果然找到了正確的辦法，同時也學到好多啟發。
            <js> push(
                $.get('filename', function(data){
                    push(data); // 成功，傳回讀到的檔案
                    alert( "success" );
                }).done(function(){
                    alert( "second success" );
                }).fail(function(){
                    push(""); // 失敗，傳回 ""
                    alert( "error" );
                }).always(function() {
                    alert( "finished" );
                })
            ) </js> to data
        ==> IE10 第一次經 readTextFileAuto 會由 fail(call-back) 傳回 failed message,但第二次就沒消息了！
        ==> 目前用 jquery-1.10.2.js --> 改新版 jQuery jquery-1.11.2.js 看看 --> 沒幫助
        ==> IE10 行為異常，甚至會影響 Python server 間接連 Chrome 上跑 3htm 也跟著出問題 readTextFile 異常。
            但 IE10 也有成功的時候，故等於說連 jQuery 也伺候不了 IE10。主要是 IE10 cache 很固執，
            js: $.ajaxSetup({cache:false}) 也關不掉，因此 debug 超困難，因為新程式換不上去。
        ==> IE10 異常，連 failure alert() 也不出來，表示不單是 cache 固執而已，連 call-back 也有問題？
            --> 多加 alert() 進去看看。。。根本沒有 call-back 回 always().
    ==> IE 請一邊涼快去吧！不管了。

[x] setTimeout(), setInterval() changed to mySetTimeout(), mySetInterval()
    reset() to mySetTimeout.clearAll() and mySetInterval.clearAll()
[x] change 'run' to 'retry'
    (function retry(){
        if(not ready)
            setTimeout(retry,100);
        else {
            ready
        }
    })();

[x] Study compiling words constant, value, and literal.
    --------------------------------------------------------------------------------------------------------------
    hcchen5600 2015/03/09 16:52:13

        研究如何用 literal 來做出 constant x 時，又遇到 forth 跨不同 phase 的程式設計很頭疼的問題。
    先前已經有心得：應該從最終結果，如 see x 應當如何來反推 constant 該如何設計。這裡的新發明是：用
    手動直接寫出 x 經過測試先證實手動組裝出來的 x 的確符合所求，然後可以充滿信心地去設計 constant。
        這翻探討，引發深思：為何有些 word 要想破頭去分別設計 interpret state 跟 compile state 而有
    些 word 單設計一種 state 就可以兩邊滿足？其實每個 word 都有兩個 state 但像 + - * / 等已經由 outer
    loop 照顧好了。而我構想 x 該怎麼實現時出現：它該是個 code word 還是 colon word 的岔路。如果它是
    code word 那簡單：
        name:x
        type:code
        xt: function(){/* constant x */ push(constant)}
    同時滿足 both states。如果是個 colon word 則如下的結果效率就差多了，會在 inner() 裡多花很多時間。
        name:x
        type:colon
        cfa: 100
        100: function(){/* constant x */ push(constant)}
        101: RET
    所以我想把它做成如下，因為是個 compile word 故必須 immediate <===== 謹記這句話！
        name:x
        type:colon
        immediate:true
        cfa: 100
        100: compiling
        101: 0branch
        102: 104
        103: compile
        104: function(){/* constant x */ push(literal)}
        105: RET
    以下是手動做出這個 x 的過程：
        here [compile] + <--------------- 複習 [compile] 的用法，證實適合手動打造 word 應用。
        OK .s
              ... snip ...
              6:        2528         9e0h (number) <--------- here was
        OK d 2528
        02528: + ( a b -- a+b) Add two numbers or concatenate two strings. (object)
        02529: RET (null)
        02530: undefined (undefined)
        02531: undefined (undefined)

        create x <--------------- 手工打造 word name
        OK see x
                    name : x (string)
                     vid : mytools.f (string)
                     wid : 29 (number)
                    type : colon-create (string)
                    help : x ( ?? ) No help message. Use // to add one. (string)
                     cfa : 2529 (number)
        -------- Definition in dictionary --------
        02529: doVar ( -- a ) 取隨後位址 a , runtime of created words (object)
        02530: RET (null)
        ---------- End of the definition -----------
        OK 2529 here! <---------- 調整好 here
        OK [compile] compiling  <---- 手工打造 compiling
        OK [compile] 0branch    <---- 手工打造
        OK 112233 ,             <---- 手工打造 dummy 0branch 地址
        OK [compile] compile    <---- 手工打造 compiling
        OK <js> var f=function(){/* constant x */ push(1122)}; f</jsV> ,  <---- 手工打造 function
        OK see x <--------------------------- 查看目前結果，
                    name : x (string)
                    vid : mytools.f (string)
                    wid : 29 (number)
                    type : colon-create (string)
                    help : x ( ?? ) No help message. Use // to add one. (string)
                    cfa : 2529 (number)
        -------- Definition in dictionary --------
        02529: compiling ( -- boolean ) Get system state (object)
        02530: 0branch ( n -- ) 若 n!==0 就將當前 ip 內數值當作 ip, 否則將 ip 進位 *** 20111224 sam (object)
        02531: 112233 (number)
        02532: compile ( -- ) Compile the next word at dictionary[ip] to dictionary[here]. (object)
        02533: function(){/* constant x */ push(1122)} (function)
        02534: !)%$%%#%
        02535: ^$%^*^*^
        ---------- End of the definition -----------
        OK help -N ! ==>  ! ( n a -- ) 將 n 存入位址 a
        OK js> RET 2534 ! <--------------- 手工打造 RET
        OK 2533 2531 ! <------------------ 手工填寫 0branch address

        OK see x <---------------------------- 查看，差不多了，還差 immediate
                    name : x (string)
                     vid : mytools.f (string)
                     wid : 29 (number)
                    type : colon-create (string)
                    help : x ( ?? ) No help message. Use // to add one. (string)
                     cfa : 2529 (number)

        -------- Definition in dictionary --------
        02529: compiling ( -- boolean ) Get system state (object)
        02530: 0branch ( n -- ) 若 n!==0 就將當前 ip 內數值當作 ip, 否則將 ip 進位 *** 20111224 sam (object)
        02531: 2533 (number)
        02532: compile ( -- ) Compile the next word at dictionary[ip] to dictionary[here]. (object)
        02533: function(){/* constant x */ push(1122)} (function)
        02534: RET (null)
        ---------- End of the definition -----------

        OK js: inner(2532) <------ 試驗看 compile function(){} 是否可行？可以！
        OK d 2543 <---- here
        02543: function(){/* constant x */ push(1122)} (function) <--- 果然有 compile 進去, Bingo!
        02544: RET (null)
        02545: undefined (undefined)
        02546: undefined (undefined)
        OK ' x :: immediate=true  <--------------- 手工設定 immediate
    驗收 interpret state 的行為，OK!
        OK x .
        1122
    最終驗收 compile state 的行為，也 OK!
        OK : try x 2 * . ;
        OK see try <------------------------- 沒錯 :-D
                    name : try (string)
                     vid : mytools.f (string)
                     wid : 31 (number)
                    type : colon (string)
                    help : try ( ?? ) No help message. Use // to add one. (string)
                     cfa : 2544 (number)

        -------- Definition in dictionary --------
        02544: function(){/* constant x */ push(1122)} (function)
        02545: 2        (literal) (object)
        02546: * ( a b -- a*b ) Multiplex. (object)
        02547: . ( sth -- ) Print number or string on TOS. (object)
        02548: RET (null)
        ---------- End of the definition -----------
        OK try
        2244 OK <--------------------- 大功告成！
    心得：以後不怕跨 A B C phase 設計 forth 程式了！

    我發現幾乎所有的 literal 都是以 [compile] literal 的形式出現，而不是以此形式出現的 literal 如下，
        [ char </match>|<igm>|<flags> ] literal word
    它根本可以省略，
        char </match>|<igm>|<flags> word

    探討各種情況，看 literal 是否需要維持 immediate? （希望研究出雙方的替代對策 ==> 可以！）

    == A == 當 literal 是 immediate 時

    （1）: test2 [ 120 3 + ] literal ; ( <--- 這兩個等效 ---> ) : test 123 ;
         我看這是 literal 最原始的目的，把 constant 在 compile time 處理掉。
         光憑這個理由不足以支持為何要 immediate, 因為 [ 120 3 + literal ] 即可。
         Yap 提過，他盡量不宣告 immediate 。

        OK see test
                    name : test (string)
                     vid : mytools.f (string)
                     wid : 19 (number)
                    type : colon (string)
                    help : test ( ?? ) No help message. Use // to add one. (string)
                     cfa : 1274 (number)

        -------- Definition in dictionary --------
        01274: 123        (literal) (object)
        01275: RET (null)
        ---------- End of the definition -----------
         OK see test2
                    name : test2 (string)
                     vid : mytools.f (string)
                     wid : 20 (number)
                    type : colon (string)
                    help : test2 ( ?? ) No help message. Use // to add one. (string)
                     cfa : 1276 (number)

        -------- Definition in dictionary --------
        01276: 123        (literal) (object)
        01277: RET (null)
        ---------- End of the definition -----------

    （2）: test3 123 [compile] literal ; ( <-- 不等效 --> ) : test4 123 , ;
        OK see test3
                name : test3 (string)
                 vid : mytools.f (string)
                 wid : 21 (number)
                type : colon (string)
                help : test3 ( ?? ) No help message. Use // to add one. (string)
                 cfa : 1278 (number)
        -------- Definition in dictionary --------
        01278: 123        (literal) (object)
        01279: literal ( x -- ) Compile the TOS. (object)
        01280: RET (null)
        ---------- End of the definition -----------
        OK see test4
                    name : test4 (string)
                     vid : mytools.f (string)
                     wid : 18 (number)
                    type : colon (string)
                    help : test4 ( ?? ) No help message. Use // to add one. (string)
                     cfa : 1290 (number)
        -------- Definition in dictionary --------
        01290: 123        (literal) (object)
        01291: , ( n -- ) Compile TOS to dictionary. (object)
        01292: RET (null)
        ---------- End of the definition -----------

        OK here 4 dump
        01288: RET (null)
        01289: undefined (undefined)
        01290: undefined (undefined)
        01291: undefined (undefined)
        OK .s
        empty
        test3
        test3
        OK d 1288
        01288: 123        (literal) (object)
        01289: 123        (literal) (object) <---------------- (1)
        01290: RET (null)
        01291: undefined (undefined)
        01292: undefined (undefined)

        OK : test4 123 , ;
        OK here . \ ==> 1293
        OK test4
        OK d 1293
        01293: 123 (number) <------------------------- (2) 與以上 (1) 不同
        01294: RET (null)
        01295: undefined (undefined)
        01296: undefined (undefined)

    （3）: test literal foo bar ; <----- 很難想像 literal 這樣用有何用途？

    == B == 當 literal 非 immediate 時

    （1）: test2 [ 120 3 + ] literal ; ===> 改寫成 ===> (猜想是) : test2 [ 120 3 + literal ] ;
    （2）: test3 123 [compile] literal ; ===> 改寫成 ===> : test3 123 literal ;
    （3）: test literal foo bar ;  ===> 改寫成 ===>  (猜想是) : test [ literal ] foo bar ;

    code iliteral ( n -- ) \ Compile TOS as an anonymous constant
            var literal = pop();
            var getLiteral = eval("var f;f=function(){push(literal)/* " + literal.toString() + " (" + mytypeof(literal) + ") */}");
            dictcompile(getLiteral);
        end-code

    [x] literal 根本無需是個 immediate！ ===> 但是要把 compile-only 也拿掉。
    [x] literal 若是 immediate 用到幾乎全都是以 [compile] literal 型式出現。全改回單 literal.
    [x] literal 的用途是 [ js> Math.Pi 2 * ] literal 若是 immediate 則寫成 [ js> Math.Pi 2 * literal ]
        也等效。改成非 immediate 之後則一定要寫成後者的形式。
    [x] 值得紀念的一刻，literal 取消 immediate hcchen5600 2015/03/10 11:55:48

[x] 複習一遍 JavaScript 的 var 由 volatile 經 new 變成 static
    <js>
        function Ball(axisx,axisy,radius){
            var x=axisx,y=axisy,r=radius;
            this.position = function(){return({x:x,y:y})}
            this.move = function(h,v){x+=h;y+=v;}
        }
        push(new Ball(10,15,20))
    </js> constant ball
    ball :> position() (see)
    ball :: move(1,1)
    ball :> position() (see)
    [object Object]
      x :  10
      y :  15
    [object Object]
      x :  11
      y :  16
    ------------ 以下這樣不行 -------------------------
    <js>
        function Ball (axisx,axisy,radius){ var x=axisx,y=axisy,r=radius; } // local static variables
        Ball.position = function(){return({x:x,y:y})} // exported methods
        Ball.move = function(h,v){x+=h;y+=v;}         // exported methods
        push(new Ball(10,15,20))
    </js> constant ball
    ball :> position() (see)  <--------- ball 沒有 position
    ball :: move(1,1) <----------------- ball 也沒有 move
    ball :> position() (see)

[x] 引入 global var g = {} 讓 forth words 可以與 javascript 共用 variables. 因為他們全都屬 global 變數。
    例如，
        123 ivalue x // ( -- int )
        456 ivalue y // ( -- int )
    產生的 x,y 同時也是 g.x, g.y
    每經
        67 ivalue x // ( -- int )
        89 ivalue y // ( -- int )
    會產生新 g.x g.y 蓋過原來的，因為 g 裡面的 members 同名只有一個。

    [x] 改寫 value 以及 constant 一律用 g{}, Constant object 不必由 jeforth.js 提供。
        <js> push(function(){/*comment*/push(112233)})</js> execute 得 tos()==112233
        [x] ==> 'constant' 直接就是個 function() 用 /* constant name */ 在 see 裡顯示自己的 type.
                ---> bad idea. constant should be a g.name because it's a global.
        [x] ==> 'to' 在 compile-time 允收 value, 不影響 run time 速度。

    : value ( n <name> -- ) \ Create a 'value', Don't use " in <name>.
        BL word (create) <js>
        last().type = "value";
        var s = 'var f;f=function(){push(g["'
                + last().name
                + '"])}';
        last().xt = eval(s);
        g[last().name] = pop();
        </js> reveal ; interpret-only
    : constant ( n <name> -- ) \ Create a 'value' variable, Don't use " in <name>.
        value last :: type='constant' ; interpret-only
    : to ( n <value> -- ) \ Assign n to <value>.
        ' ( word ) <js> if (tos().type!="value") panic("Error! Assigning to a none-value.\n",'error') </js>
        compiling if ( word )
            <js> var s='var f;f=function(){/* to */ g["'+pop().name+'"]=pop()}';push(eval(s))</js> ( f ) ,
        else ( n word )
            js: g[pop().name]=pop()
        then ; immediate

    [x] 看來 constant 應該用 literal 實現才對，不是用 value
        ==> 錯！ literal 真的是釘在 dictionary 裡
        的常數，可以 compile 成一個 push(data) 的 function(), 而 constant 則是個 global variable 準備
        佔用一個帶名字的 g[name] 格位，see? 兩者不同。

    : constant ( n <name> -- )
        BL word (create) <js>
            var literal = pop();
            var getLiteral = function(){/* constant last().name */ push(literal)}
            last().type = "constant";
            last().xt = function(){
                if (compiling) dictcompile(getLiteral);
                else getLiteral();
            }
            last().immediate = true;
        </js> reveal ;
    : constant ( n <name> -- )
        BL word (create) [compile] literal RET , <js>
            var literal = pop();
            var getLiteral = function(){/* constant last().name */ push(literal)}
            last().type = "constant";
            last().xt = function(){
                if (compiling) dictcompile(getLiteral);
                else getLiteral();
            }
            last().immediate = true;
        </js> reveal ;
    x
    0001 compiling
    0002 0branch
    0003 30
    0004 compile
    0030 function(){/* constant x */ push(literal)}
    0040 RET

    001: n
    002: function(){/* constant */ push(constant)}

[x] 「設計 compile word / postpone word / 跨時區命令保持頭腦清晰的步驟與技巧」
    https://www.evernote.com/shard/s22/nl/2472143/8da1eb3d-2768-4603-8eda-eabd51c69227

[x] 3hta, (see) 0 shows [object Number] ? why?
    js> rstack (see)
    0,621
      0 :  [object Number]
      1 :  621
    js: see(rstack) <---- can repro, so see()'s problem, yes. RI ,
    RI: 鑽進 rstack 之後 0 會被當成 （大概是）Object.toString.apply(0) 顯示。
    [x] ==> 先用 ivalue 把 Constant() 置換掉， 之後 see() 的毛病也改好。

[x] Double suspend is not allowed so far, but why?
    ==> hcchen5600 2015/03/10 18:06:58 已經有可以多重 suspend 的 nap 命令。
    ==> 準備把 suspendForthVM() resumeForthVM() 都從 jeforth.js 移除。
    ==> hcchen5600 2015/03/11 20:16:04 現在的 *debug* 已經可以多重 suspend.

[x] remove some functions out of jeforth.js they are too personal
    [x] Constant()
    [x] isSameArray() <--- jeforth.f code ; 之前要定義好。
    [x] memberCount()
    [x] mergeObj()
    [x] retrieveObj()
    [x] isMember()
    [x] suspendForthVM()  *debug* msg>>> 改成傳回 resume() 因此可以多重進入 *debug* 但不知是否有用。
    [x] resumeForthVM()   只要把 resume() 找個 stack push 存放，即可輕鬆 pop execute 達到 resume 目的。
    [x] mySetInterval()
    [x] mySetTimeout()
    [x] see(obj,tab)

[x] awk.f 裡有個 [compile] compiling 前置的 [compile] 是空包彈，應該拿掉。
    如果 [compile] foo 而 foo 本來就不是 immediate 則在 colon definition 期間與單 foo 完全等效，前置 [compile] 等於無害的 redundent。
    ANS forth SPEC 裡也是這麼說。

[x] type 'jsc' 變成 'csj' ==> 不要 focus ==> jump2endofinputbox.click(); // inputbox.focus();
    結果 ＿Bingo!!__
    用這個測驗 ==>
        : test cls 1000 for r@ . ."  ------------------ " cr next ; \ inner loop
        or
        js> Math.random() . cr rewind \ outer loop
    [x] print() does,
            jump2endofinputbox.click(); // inputbox.focus();
        is an overkill, only cr does so would be enough. But not! then cr will be application dependent
        and thus need to be moved from jeforth.f into quit.f
        [x]3hta [x]3htm [x]3nw [x]3nd
[x] 當 cr 很多時 inputbox's focus 會不斷被拉開，因此 inputbox 會變灰。直到 console event 完成了才會由
    kvm.forthConsoleHandler() 偵測到工作完全結束才 focus 回到 inputbox。這真是一大進步。
    ** ==>  但是產生 stop 想下達無法下達的窘況。 hcchen5600 2015/03/15 13:41:33
        [x] 但 3nw 沒有這個現象，用
                ." 往上滾到看不見 inputbox 為止。" 5000 nap js: jump2endofinputbox.click() ." 看到我表示有效。 " 10000 nap ." 看到 OK 表示完成 "
            試驗，3hta 3htm inputbox 都會灰掉，就是 3nw 不會。3nw 滾上去之後隨便 click 一下才會灰掉。
            node-webkit 這點算是它的好處吧！
    ==> 需要一個 break key 類似 ctrl-break 來下 stop ----> {ctrl-break} 有專屬的 keyCode 3, 簡單好用。
    *   inner loop 即使有用到 cr 者（有 1 nap）也只會印出 {ctrl-break} 斷不了; 沒有 1 nap 者 {ctrl-break}
        都被 queue 起來了，根本沒機會。這也好。
    [x]3htm [x]3hta [x]3nw [/]3nd 不用。

[ ] forth quote ==> 看能不能用來自動檢查，提供 warning 增進系統可靠度。
    o   看這句話對不對：「會用到 compiling 的一定是 immediate word。」這一定對，不是 immediate word 就根本
        看不到 compiling state 用到 compiling 沒有意義。
    o   沒有用到 compiling 的 immediate word 可考慮把 immediate 屬性拿掉。需當 immediate word 用時以 [ , ] 包起來即可。
    o   所有的 forth words 都有 interpret / compile 兩個 state，大部分 words 只寫 interpret state 是因為
        compile state outer loop 會把整個 word 都拿去 compile。如果不能被直接 compile 的 word 就一定要自己
        分別寫這兩個 state 的 code 因此一定是 immediate。如下：
    o   有抓後面 token 的 word 要考慮是 immediate 或 interpret-only 兩者之一，否則可能設計不夠周延。
        這不是絕對，像 tick ' , word 這樣兩者皆非的也有。
    o   有 compile 東西進 dictionary 的一定是 immediate 所以 compile-only 一定是 immediate。
    o   colon word 裡 last 或 js> last() 有三種可能意義，
            a. [ last literal ] 取得該 colon word 本身。
            b. create 之後 last 取得新 word。本 colon word 是個 class，新 word 是一個 instanse。
            c. 單 last 取得 forth 系統最後一個 word。
    o   在 <js> 之前，於 colon word 中插入 JavaScript function 的方法
            [ s" push(function(){push(last().cfa)})" jsEvalNo , ] \ push 一個 function 然後把它 compile 進字典。
        等效於，
            s" push(last().cfa)" jsEvalNo
        但執行效率高。公式，
            s" 。。。" jsEvalNo ==> [ s" push(function(){。。。})" jsEvalNo , ]
    o   使用 immediate 的理由
        把 vocabulary words 都弄成 immediate 所以不必以 [ forth ] 形式在 colon definition 種使用，
        因此可以從裡面分辨 state , 只有當 compiling state 時 rescan-word-hash 才 skip last().


[x] function 裡的 function 就跟 function 裡的 var 一樣，都是 volatile。
    所以每次 function 上手，看到自己裡面的東西, 含 function, 都是新的。
    ------------ ex.1 ---------------------
    : test <js> var f = function(){}; f </jsV> ; // ( -- function ) Create a function. 每次都傳回新的 function。
    OK test test \ ==> Now we have two dummy functions in the stack,
    OK .s
      0: function(){} (function)
      1: function(){} (function)  <---- tos().x=123 , cehck tos(1).x , observe they are different.
    OK = tib. \ ==> false      Are they identical? NO!!
    --------- ex.2 有沒有 assign 給 f 無關。-------------
    : test <js> function inner() {push(arguments.callee)} inner() </js> ;
    test test .s
    OK test test .s
      0: function inner() {push(arguments.callee)} (function) 這兩個不同！！！
      1: function inner() {push(arguments.callee)} (function)
    OK = tib. \ ==> false
    --------- ex.3 <js></js> 第一層是同一個 function -------------
    : test <js> argument.callee </jsV> ; // ( -- function ) Return the same function
    OK .s
      0: function(){push(arguments.callee)} (function)  這兩個是同一個
      1: function(){push(arguments.callee)} (function)

[x] 怎麼還有 endinner ？ 通通拿掉！

[*] 用自己的 cfa 當 call back 不理想,簡單用 execute(name) 較好。

    ==> 出現在 processing.f 的例子，onFrameTick
        用自己的 cfa 當 call back, 沒有人做 rstack.push(0) 結束時 rstack 不平衡還得處理。花招太多。
            [ s" push(function(){inner(" js> last().cfa + s" )})" + </js> literal ] ( -- callBack )
        用 execute(name)，不會有 rstack unbalance 的問題，execute() 執行 colon word 的 xt 有 rstack.push(0)
            [ s" push(function(){execute('" js> last().name + s" ')})" + </js> literal ] ( -- callBack )
        缺點是萬一有 reDef 較不絕對，而已。

    ==> 出現在 many-clocks.f 的例子，改寫時頭痛了一下子。有 forth quote 心得可寫。
        colon word 裡 last 或 js> last() 有三種可能意義，
        a. [ last literal ] 取得該 colon word 本身。
        b. create 之後 last 取得新 word。本 colon word 是個 class，新 word 是一個 instanse。
        c. 單 last 取得 forth 系統最後一個 word。

        這兩行等效，屬以上 b. 類：（用在 create A does> B 的 A 段, 佈置 call-back function）
            s" push(function(){inner(" js> last().cfa + s" )})" + jsEvalNo ,
            s" push(function(){inner(" js> last().cfa + s" )})" + [compile] </js> ,
        因為 call-back function 是 call-by-address 的，沒有人 rstack.push(0) 因此在 B 段 does>
        裡最後必須，
            js> rstack.length if 0 >r then \ TSR 不要吃到別人 (in suspending) 的 rstack。重要！
        這樣一來，機關太多。

        改成 call by name
            s" push(function(){execute('" js> last().name + s" ')})" + jsEvalNo ,
            s" push(function(){execute('" js> last().name + s" ')})" + [compile] </js> ,
        就什麼都好了，簡單明瞭。execute() 執行到 colon word 時 colon word 自己的 xt 自會
        做 rstack.push(0) 的工作。

[x] now come back to deal with pile.f ===> Done!
    [x] 內容盡量改成 forth

[x] 發現 forth console event 的獨立性，覺悟到 abortexec, abortTIB 都太小看它。應改稱
    簡單的 stop 並且加上 rewind 命令，用來 rewind TIB. also hotkey {ctrl-break} to stop TIB.
    [ ] rewind 要改良，自動往前查看有沒有 nap 命令，沒有就放棄，並建議替代方法 js: ntib=0 亦可。

[x] 研究發現 forth console event 之所以不會在 TIB/nTIB 上栽跟斗是因為 nap, sleep 等這些
    suspend 程式做好了 context save-restore 的準備，而非原先猜想的 fortheval() 可能多此
    一舉的 save-restore 之功。----> fortheval() 的 save-restore 是為了經常被 JavaScript
    code 用來引用 forth word, 因此不能省。

[x] 發現 h2o.f 十分奇妙。發表。

    用 jeforth 來玩 HTML5 繪圖時，「湧現」奇妙的現象。
    http://figtaiwan.org/project/jeforth/jeforth.3we-master/index.html?include%20h2o.f

    我本來只是想模仿地心引力，讓平面球體彈跳、碰撞，逗樂孩子們。（彷彿）成功之後，宣稱
    咱們可以做個太陽系、模擬行星軌道來玩。原來只是胡亂模仿的動畫，這下就得講究物理定律
    。以碰撞為例，前後「動量守恆」第一個被拿出來驗算，結果發現（當然）不對。因為我本來
    是亂寫的，沒有講究那麼多。於是複習高中向量數學，老實模擬。沒想到電腦照物理學（希望
    我的理解沒錯）跑出來的結果卻無法維持兩球碰撞前後的「動量守恆」。研究在三，至今未解
    。結果是小球球們叮叮咚咚，要嘛最後都停了下來，動量不知憑空消失到哪去了；要嘛越跑越
    快，最後亂飛一通，也不知哪來的動量。只知道每次碰撞動量都不守恆，既不能胡亂自創物理
    學，又搞不懂電腦算的怎麼會有差額，故解不了。

    於是，憑研究過程觀察到差額最多是 0.41xxxxxx，我心生一計：不處理差額過大時的碰撞，讓
    兩球擦身而過，只處理動量差額在限度內的碰撞，以為是個辦法可以讓小球球在遵守物理定律
    的條件下永續經營。每想到此「不做事」之法，竟然「湧現」奇妙的現象：首先生出「黏性」，
    因為有黏性而使小球結成團體，而團體成員個別的碰撞又拖著整個團體「旋轉」、「膨脹、縮
    小、顫抖」、「大球包小球，小球在其內旋轉」、「雙節棍」、等行為，天哪，我哪懂這些？
    程式裡壓根兒沒這些東西，一下全蹦了出來！

[x] Facebook changes space to + in URL, so 3htm supports _ to replace space in URL.

[ ] 開始著手行星軌道模擬。然後做塞車波。然後用 physics engine 做12球的天平。
    畫圖，畫二維、三維的點、線、圓等

[x] Formulas
    F = m1.a = G(m1.m2)/r^2
    a = G.m2/r^2 = gravity/r^2
    r = |(rx,ry)| // (rx,ry) 是 planet 指向 the sun 的向量
      = |(sun.x,sun.y)-(p.x,p.y)|  // p is a planet
      = |rx=sun.x-p.x, ry=sun.y-p.y|
      = Math.sqrt(rx*rx,ry*ry)
    (ex,ey) = (rx,ry)/r // 由 planet 指向 the sun 的 unit vector
    a(ex,ey) // 行星朝向太陽的重力加速度
      = (gravity/r^2)(rx/r,ry/r)
    aex = gravity*rx/r^3
    aey = gravity*ry/r^3

    p.vx += aex  // 行星的瞬時速度
    p.vy += aey

[x] js> f=0.1 cut js> f+=0.1;f . space 500 nap rewind
    The result is a little surprisingly big distortion. Is it normal? And why?
    JavaScript 的誤差，很奇怪。不過跨平台都是這樣, HTA, Node.js, Chrome HTM.

[x] improve solar-system.f for more forth less closure. ==> 成功了！
    [] value stars // ( -- [] ) The stars array  這是一定的，沒猜錯。
    0 value istar // ( -- index ) The current star of the solar system. 這個 global variable 也是必須的。
    : property ( n <name> -- ) \ Create a property of a star 這個 property 就有趣了！
        create ... does> ... ;
        /// 它用來製造 g.stars[g.istar]{} 裡的 property 如 x y vx vy 等，根據 istar 指標來工作。
    因此 access 這些 properties 變得很方便容易。
    Note! istar 指標有用到的人都得自己做 save-restore, 此法的重點。
    [ ] ==> 有了這個方法，似乎拿 3nd/3nw 來當 server 有希望了。
    [x] x y vx vy 等這些 properties 不是 value 但也是用 'to' 命令來寫入，這個 'to' 的重新定義以及
        使用是否方便之疑慮 --> 試用再說 [ ] 目前是改寫 'to' 使認得 star.property type，有點雜湊笨拙。
        vocabulary words 都不是 immediate 使用在 colon definitions 裡想必是用來指定隨後的 word 要用
        哪一個 'to' ? 則應以 [ vocabulary ] 的形式出現。--> 改好 solar-system.f 運行正常。似乎切 vocabulary
        的方式有理。注意，切換的動作是在 compiling state 時完成的，目的在明指哪個 'to'。至於 run time
        時的 vocabulary 則另屬 interpret state 時的控制，莫混淆。我覺得此時到底用哪個 to 還真不一定！
        但 istar 是 value 而 radius 則是 star.property 不難分辨。
    [x] 看得見以上辦法是有點麻煩。最好讓 to 在 compiling 時自動根據隨後的 <name> 根據其 type 自動
        compile 對應的 'to'，這也是可以考慮的辦法。==> 結果發現重要問題！ [x] 答案 see solar-system.f 典範。
        [x] vocabulary 應該是 immediate 用來在 colon definition 中切換 word-list
        [x] 切過任何 vocabulary 都會使在 definiton 中途的 colon word 被 reveal!!
            colon definition 當中 ; 之前，本 word 被意外 revealed 一般看不出問題，在引用同名舊 word 時
            就不行，會引用到自己。
            --> (create) 好像已經不做 reveal 的動作，constant 好像是靠 rescan-word-hash 來做 reveal 的？
                No, constant uses 'reveal'.
            --> 改 vocabulary 或改 rescan-word-hash 讓過 last(), 看對不對。用到 rescan 的地方都討論一下，
                --> 不行！ rescan-word-hash 時漏掉 last() 就漏掉了，與 reveal 無關。等於切換 vocabulary
                    都會漏掉 last() 使系統不認得它或錯用舊版。
            --> 把 vocabulary words 都弄成 immediate 所以不必以 [ forth ] 形式在 colon definition 裡使用，
                因此可以從裡面分辨 state , 只有當 compiling state 時 rescan-word-hash 才 skip last().
                這是個使用 immediate 的理由！

[x] jeforth.3htm 裡動態 include Box2dWeb 成功，靠，太棒了！
    c:\Users\8304018.WKSCN\Dropbox\learnings\github\jeforth.3we\js\box2dweb\Box2dWeb-2.1.a.3.min.js
    <h> <script type="text/javascript" src="js/box2dweb/Box2dWeb-2.1.a.3.min.js"></script></h>
    js> window obj>keys . \ ==> 果然有 ... Box2D,Vector,Vector_a2j_Number, ...

[x] 在 jeforth.3we 中操作 object 以 solar-system.f 為典範，有了突破。
    1、透過 istar 讓 property 既是 forth 的 global 又可以 access 各自的 object instance 不亂。
    2、Function Overloading 在 to 命令上的嘗試，成功。 See solar-system.f

[x] jeforth.js 要再簡化，只留必要的東西。所以 help 相關的都要移除。 ( ) \ 可以改良，在 TIB 中回朔到
    同一行中有 last().name 就知道自己是 stack diagram 以及 help message, 故不必放在 kernel 裡也可以
    做得到。
    錯！能移出來早就移出來了。為了 code word 也能有 help message 只好繼續保留。
[x] I need a new js function : previoustoken() for 'rewind' to idiot-proof there's a nap in front of it.
[x] <js> ("h" + " aa bb cc dd    " + " ").split(/\s+/).slice(0,-1) </jsV> // An array, 這麼麻煩是為了要自動把行尾的 white spaces 去掉。
    <js> ("h" + " aa bb cc dd    " + " t").split(/\s+/).slice(0,-1) </jsV>
    split the TIB at ntib , the previous is just used, the next is what 'word' will return.
    so the previous returns an array of tokens
    : -word ( -- token[] ) \ Get used tokens in the TIB.
        <js> var a=('h '+tib.substr(0,ntib)+' t').split(/\s+/); // 加上 dummy 頭尾再 split 以統一所有狀況。
        a.pop(); a.shift(); /* 丟掉 dummy 頭尾巴 */ a</jsV> ;

[x] need a jeforth new word to launch multiple TIB tasks
    s' ." * " 100 nap rewind' js: fortheval(pop())
    s' ." $ " 150 nap rewind' js: fortheval(pop())
    ==> <task> ." * " 100 nap rewind</task> <task> ." $ " 100 nap rewind</task>

[x] jeforth.3htm press {backSpace} become changing the web page to previous. Avoid that!
    hcchen5600 2015/04/03 21:47:24 Done!
[x] pull down menu for command history and words auto completion
    See jQuery 'Popup selections - Tryit Editor v2.3' @ http://www.w3schools.com/jquerymobile/tryit.asp?filename=tryjqmob_forms_select_popup
        <o>
        <select>
        <option>Mondayfsdfsdfs df sdf sdf sdf sf sdf sdf sd fsd fs df sdf sd fsd fs dfs df sdf sdf sdf sd fsd</option>
        <option>Tuesday</option>
        <option>Wednesday</option>
        <option>Thursday</option>
        <option>Friday</option>
        <option>Saturday</option>
        <option>Sunday</option>
        </select></o>
[x] 用 jeforth.hta 來管理 github
    先複習怎樣由 jeforth.hta 來下 dos box command . . .
    1. use Github for Windows to open the dos shell through the [setting] button at the upper right corner.
    2. title demo <-- change the dos box title
    3. <vb> WshShell.AppActivate "demo" </vb> \ activate the dos box
       <vb> WshShell.SendKeys "dir{enter}" </vb>

    js> clipboardData.getData("text") ?dup not [if] "" [then] \ SAVE-restore. Clipboard can be null, so be careful.
    js: clipboardData.setData("text","1+2=*3=")
    <vb> WshShell.SendKeys "^c" </vb>             100 sleep \ Ctrl-c
    <vb> WshShell.SendKeys "%{F4}" </vb>          100 sleep \ Alt-f4
    js> clipboardData.getData("text")
    js: clipboardData.setData("text",pop(1))  \ save-RESTORE
    9 = ==>judge [if] <js> ['ActiveXObject','WshShell'] </jsV> all-pass [then]
    <vb> WshShell.SendKeys "%" </vb> \ Release Alt key, some how other wise it got locked.
    <comment>
    \ 改用 clipboard 已經成功，不怕中文輸入模式。以下留作紀念。
    \ js: document.body.style.imeMode='disabled'; \ [x] 懸案，想要避免中文輸入法干擾，無效！
    \ <vb> WshShell.SendKeys "1{+}" </vb>           100 sleep \ Pad plus
    \ js: document.body.style.imeMode='auto';
    </comment>
[x] jsc interface changed, see hta's guit.f
    1. jump2endofinptbox.click() every time.
    2. remove the jsc> prompt in the confirm box.
[x] words and help to support a new switch "-V vocabulary-name" to show only the specified vocabulary
    words or help -V- to disable

[x] 為了 forthtranspiler 自稱 vm 怕混淆 jeforth.3we 還是自稱 kvm 好了。
[x] 成功了， forthtranspiler 可以直接在 jeforth.3we 底下加掛！
    <h> <script src='../forthtranspiler/jefvm.v3.js'></script></h>
    <h> <script src='../forthtranspiler/jefvm.v3_ext.js'></script></h>
    ==> 把唯一的 console.log 改成 print 即可。

[/] HTML5 textarea (inputbox) 有 autocomplete, autofocus(對咱無效) 等功能！

[x] TAB autocomplete

[ ] Webserver.f 顯得很笨了，現在 variables 直接可以在 forth 與 js 之間共用。

[ ] use jeforth to try Youtube "Animoo: Make and Do - Animated Optical illusions"
[ ] 現在有了 er 不妨在 outputbox 設定上限，超過就把最上面得 text br 刪掉一部分，免得太長 browser 受不了。

[ ] 爽哥遇到兩個問題 1）jeforth.3nd.bat 路徑沒改，run 不起來。 2）jeforth.3hta 因為 Same origin policy
    run 不起來。為了降低 user 遇到挫折的機會，[ ] 要防呆。為了要幫助 user 抓出問題，或當場有事做可以幫忙抓
    問題，[ ] 要提供 safe mode。

[ ] 最精簡的 jsforth.js 包含的 words 只有
    code end-code 如何使用 wordhash words dictionary ip stack
    rstack tos pop push tip ntip overhauling protocal 共筆機制 版本週期
    jsforth.f
    inner loop
    outer loop
    word

[ ] 爽哥的 https://github.com/samsuanchen/multitaskjavascripteforth 應該盡量多引用。先看他的 inner loop
[ ] 仿 jsForth 把 print() 改成 printLine() printChar() 或 sprint() 避開與 window.print() 相撞的機會。

[ ] function dictcompile(n), function compilecode(word) 這兩個在 jeforth.js 裡的 function 很累贅。改
    成 comma() 一個就好了。原 compilecode(word) 用 comma(tick('wordName')) 就可以了，不必多一個 function()

[ ] 利用 solar-system.f 開發出來的方法來管理 canvas 也可以有多個 canvas。或者用個 icanvas 來指定某一個
    ，因此有修改到 icanvas 的人都得 save-restore icanvas。
    如果規定 value cv 當做默認的 canvas 就不必用 kvm.cv 了，但這樣會使 canvas.f 經常因為 cv 是 undefined
    而出錯。

[x] jeforth.3we README.md 改良

[ ] How to play with arrow.js
    1.  add three lines only to arrow.js
        push(world); // [ ]

[x] sync words -V vocabulary-name and help -V vocabulary-name also -V-
    改寫，合併、簡化

[x] echo command line 要先 cr 一下，除非沒有東西。
    [x]index.htm [x]index.html [x]jeforth.hta [ ]jeforth.3nd.js

[x] alias' help should show the correct word name

[x] Tab change to 4 spaces
    [x]jeforth.hta [x]index.html [x]jeforth.3nw.html

[x] <enter> key doesn't work when in EditMode !!! Bug.
    ==> EditMode 當中 enter 不適合用來跳進 inputbox, 會嚴重干擾 editing。
        但是有 Esc, Tab, F4 等替代辦法。

[x] Tab-autocomplete don't let it return 'undefind'

[x] </shell> should do the check-shell itself.

[ ] Separate git.f and shell.f

[ ] inputbox 之前放個 prompt 很重要
    [ ]3hta, [ ]3htm, [ ]3nw

[ ] 把文章都整理進 jeforth.3we/Wiki
    o jeforth for WSH 也可以拿來玩 tiny forth / tiny assembly-disassembly

[x] 改成 up/down 不要直接 recall command line history ，只有 Ctrl-up/Ctrl-down do that。

[ ] Sam Suan Chen's definition is interesting. code function x() { .... } end-code defines
    vm.x() function. I wish this is the way to add variables and functions into KVM. But, don't know
    if it's a good idea.

[x] 比較 jeforth.3we 與 。。。 的速度
    : speed-test 0 swap for 1+ next ;
    // ( count -- sount ) 1 + 1 + ... count times
    code precise-time function(){dStk.push((new Date()).getTime())} end-code
[ ] hcchen5600 2015/05/17 07:15:30
    改用 project-k 的 jeforth.js 有幾個問題，
    [ ] 原來的 forth vocabulary 改成 root 大地震！
    [ ] kvm 不要動或也改名。
[ ] Branch project-k 來改吧！

[ ] Working on Dropbox\Stock2015.xls need to automation
    Excel data from Fubon e01 is already dynamic <-------- Bingo! everything rely on it.
    [ ] Then I'd like to add stock to the excel file with formula that gets the data dynamically.
    [ ] Then I'd like to read data from Web page directly http://www.yuanta.com.tw/pages/content/Frame.aspx?Node=47f739da-b7c5-4d16-accc-7175d8dcf583
        to update and check new info.
    [/] I have opened many excel file, use "list-processes" or "see-process" can see
        how many excel process are running. There can be many excel processes.
        Use "list-workbooks" command can list all excel files under the application
        object. 想要 study "how to get Application object using process id" and "How
        To Get Excel Object From Process?", "how to get excel object through processID
        through javascript", "Attaching to Running Instance of Office Application"
        還是放棄了。
    [x] 最簡單的方法是，透過 jeforth.3we 把 excel run 起來，然後用 excel 去 open 要
        工作的 excel files。讓 jeforth.3we 透過選單來指定哪個 file 是哪個 file。
    [x] 用 notepad++ 把   "2062橋椿" --> "2062 橋椿":
        Replace "(\d)(\D)" to "\1 \2"
        ==> 用不著。 money.f 寫好了，自動轉換 formula 而已。搭配元大的除息表看，漏的、新的
            很清楚。
        這張表從 http://www.yuanta.com.tw/pages/content/Frame.aspx?Node=47f739da-b7c5-4d16-accc-7175d8dcf583 copy 來的
[ ] 改用 project-k 的 kernel 有幾個問題要討論。
    1. Virtual machine 的 instance 之命名
    2. Virtual machine 裡的 with(){} default name space.
    3. global variable 要不要加 _ prefix? 避免撞名。或者用一個 function 來管理 新增、刪除?

[ ] 研究 3hta 的 localStorage 看能不能用來存 excel 的 application object (或 workbook object 也可以)
    ==> js> window.localStorage \ ==> undefined (undefined)
    ==> HTA 只 support 到 IE7 幹！ 沒有 localStorage。
        http://note.youdao.com/share/?id=a3be4afcc542a1f5d106528f1f3ae5ab&type=note
    ==> 嘗試用 excel 的一格來存放 myWorkbook object 也不行。
        activeCell :: value=g.myWorkbook ==> -- P A N I C ! -- JavaScript error : Expected ';'
[ ] WSH 的 sendkeys 不太靈光，對 excel、有道云笔记，都無效。
        char 有道云笔记 activate
        js: clipboardData.setData("text","abc")
        char ^v{TAB} sendkeys
    [ ] 有空用 excel 的 sendkeys 試試。

[ ] 使用 jQuery 的結果在 Win7 之下跑不起來了。因為 jQuery + JScript + HTA 版本的關係。
    ==> 首先要把 jQuery(document).ready() 改成用 document.onload = function(){} 或者
        用 <body onload="init();"> 更簡單。
    ==> 在舊的 jeforth.3hta 上改了一半,可以不靠 jQuery 跑起來了。--> 把現在的 3we commit 起來,開
        始直接在上面修改。
        --> 靠！當前的 3we 是 [namespace-test +1 ~8 -1 !] branch，忘了本來是在幹嘛了! 還改了一堆
            excel 的東西。先用 GitHub for Windows 瞧瞧. . . . 可以合併回 marker so just do it . . .
        --> git merge namespace-test ... 成功! 平生第一次做 merge。
        --> 現在回到 master 了,
    [x] Microsoft JScript runtime error: 'keyCode' is null or not an object
        --> Windows 7, Top on JScript v5.8.16385 而且是 IE8 結果他的 document.onkeydown 收到的不是
            handler(e) 而是 handler(void)! keyCode 要另外從 event.keyCode 取得.
        --> 所以網友建議的 pattern 是:
        function alertKeycode(e) {
           e = (e) ? e : event;
           var keycode = (e.keyCode) ? e.keyCode : (e.which) ? e.which : false;
           alert(keycode)
        }
        => OK!
    [ ] Win7 的 IE 是 IE8 而 HTA 裡的這的一行設定:
            <meta http-equiv="x-ua-compatible" content="ie=9" />
        顯得令人擔憂。
    [x] 當初用 jquery 的原因是它的 .append("test string or HTML tag") 很好用，而我當時也搞不懂
        .appendChild(obj) 裡的 obj 怎麼來。其實很簡單:
            outputbox.appendChild(document.createTextNode("string"))
        這樣就可以了：
            var aa = (kvm.plain(ss)+'\n').split('\n').slice(0,-1); // [aaa,bbb,]
            for(i=0; i<aa.length-1; i++){
                outputbox.appendChild(document.createTextNode(aa[i]));
                outputbox.appendChild(document.createElement("br"));
            }
            if(aa[i]) outputbox.appendChild(document.createTextNode(aa[i]));
        [x] still a challenge <e> <o> 都靠 jQuery 才好做。所以還是在 html5.f 裡把 jquery 給抓進來了。
    [ ] 目前的 cr 好像不 work?
    [ ] HTML 一類的 greeting 上有 Program path file:///C:/.../jeforth.3we/jeforth.hta#endofinputbox
        尾巴上的 #endofinputbox 應該想辦法把它拿掉。

    [ ] 想通了 jQuery 還是要把它 include 進來。適當時機是 html5.f, Win7 經過 windows upgrade 之後
        JScript 也到了 v11 了, Winxp 放棄或晚點再看看。

    [x] Try AutoItX3
        <js> push(new ActiveXObject("AutoItX3.Control"))</js> constant au3 // ( -- AutoItX3 ) Get AutoItX3 object
        au3 :: run("notepad.exe")
        ==> Bingo!!
    [ ] So, let's go for the autoit.f

    [x] https://msdn.microsoft.com/en-us/library/office/gg251785(v=office.15).aspx
        If the pathname argument is omitted, GetObject returns a currently active object of the specified type.
        If no object of the specified type exists, an error occurs. <== 這就是 jeforth.3hta 裡 excel.f 該用的辦
        法了! 先用 see-excel 查看有幾個 excel 在 running? 如果是一個就用它, 如果超過一個就警告, 如果沒有就開一個。
        <vb> Set xl=GetObject(,"excel.application"):kvm.push(xl)</vb>
        it works!!
        ==> 終於解決 multiple Excel.Application object 的問題了!
    [ ] ?abort" error message " 能不能弄成 dual state 通用?

    [ ] 開始研究透過 AutoIt 抓網頁 data
        研究 ie.au3 很可能跟 excel 依樣發現又是 GetObject() 就能解決?
        --> 果然發現 IE Window Object, _IEAttach()'s return value.
        --> 原來他是透過 shell.application access windows object, 其實 windows 就是 IE 的 tab 頁面。
        [ ] shell.application 應改簡化成 shell.app 類似 excel.app
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb774063(v=vs.85).aspx
        shell.application :> windows() constant ShellWindows // ( -- obj ) shell.application windows object
        /// ShellWindows object https://msdn.microsoft.com/en-us/library/windows/desktop/bb773974(v=vs.85).aspx
        ShellWindows :> count \ ==> 3 (number) 根本就是看 IE 開了幾個 tab 亦即 windows。
        ShellWindows :> item(0) \ ==> Windows Internet Explorer (object) https://msdn.microsoft.com/library/aa752084(v=vs.85).aspx
        ShellWindows :> item(3) \ ==> null (null) 超過了就變成 null。
        ShellWindows :> item(0) :> LocationName \ ==> 星巴克华东 (string) Bingo!!! 真的碰到了!
        ShellWindows :> item(0) :> LoCaTiOnUrL \ ==> http://www.president-starbucks.com.cn/index.html (string)
        ShellWindows :> item(0) :> application \ ==> Windows Internet Explorer (object) 就是 item(0) 自己。
    [x] 其實 IE object 也可以這樣直接取得:
        <vb> Set IE = CreateObject("InternetExplorer.Application"):kvm.push(IE)</vb> constant IE // ( -- obj ) Internet Explorer object
        然後透過 IE :> parent 應該也是回到 ShellWindows --> [ ] try try see .... 非也, 這個 IE.parent 還是它
        自己。
    [x] 同上,改用 GetObject 看看,
        <vb> Set ie = GetObject(,"InternetExplorer.Application"):kvm.push(ie)</vb> constant ie // ( -- obj ) Internet Explorer object
        --> VBscript error : ActiveX component can't create object: 'GetObject'
        --> 這是因為 IE 應該是個 single-instance object
    [ ] 同上,改用 GetObject 的另一方式看看,
        <vb> Set ie = GetObject("","InternetExplorer.Application"):kvm.push(ie)</vb> constant ie // ( -- obj ) Internet Explorer object
        --> 成功了! 但它的 parent 還是自己。
        --> 每多開一個 tab 用 s" where name = 'iexplore.exe'" see-process . 來看就會多一個 process.
    [x] 被 stop 停掉的 TIB 應該馬上 stop=false 以便只 stop 本 <Task>.
        --> 改了 outer() 若無誤,記得連 project-k 也要修正。
        --> 錯! stop 必須 stop 全部工作。後續還有工作的情形用 ?rewind。
    [x] Need a ?rewind command

    [x] Have many bugs now. On excel.f and on ie.f/money.f. This bug happens on S7 when starting
        ieforth.3we. First time said there are multiple excel and stoped including excel. So I close
        visible excel workbooks. F5 reload and the below error happened. Retry can't fix it. Close
        jeforth.3we and run again, still same problem.
        ------------------- P A N I C ! -------------------------
        VBscript error : ActiveX component can't create object: 'GetObject'
        stop: false
        compiling: false
        stack.length: 0
        rstack.length: 1
        ip: 1286
        ntib: 279
        tib.length: 65609
        tib: (,"excel.application"):kvm.push(xl)</vb><ntib>
        [else] char Excel.Application ActiveXObject [then] to (excel.app)
        ==> I guess this is again the "single-instance object" issue ...
        ==> Bingo!! 不要用 ActiveXObject(), 用 CreateObject() or GetObject()。
            而且 IE and Excel 都是 "single-instance object" 只要看到有多個 application object
            就可以當作是問題。

    [ ] ie.f ok now, money.f 需要改寫 with new knowledge of ie.f.
    [x] 如何取得 the active IE window? ==> 讓 user 自己從 list-ie-winsows 裡選。

[ ] 如何 用 jquery 去 query 用 ie.f attach 到的 web pabe?

[ ] 改 hotkey.au3, 增加功能每周三中午前把 router 切好位置。

[ ] ie(i) 的 alias ie 有問題, run 不起來。
    ieWindow 也一樣問題。

[x] JavaScript "Table to JSON" http://lightswitch05.github.io/table-to-json/
    works fine.
    See YNote "Js Tutorial - Table to JSON _table_to_JSON_"

[x] 希望能把整個網頁都抓進來 jquery 搜尋/控制 其中的東西
    http://stackoverflow.com/questions/18145273/how-to-load-an-external-webpage-into-a-div-of-a-html-page
    <o> <div>
    <object type="text/html" data="http://validator.w3.org/" width="800px" height="600px" style="overflow:auto;border:5px ridge blue">
    </object>
    </div></o>
    真的可以 open 小網頁!
    <o> <div>
    <object type="text/html" data="http://ibm.com/" width="800px" height="600px" style="overflow:auto;border:5px ridge blue">
    </object>
    </div></o>

[x] My Asus desktop rolled back to IE8 意外發現 (er) was not defined well.
    ==> fixed. 分辨 HTML Tag 要用 ce@ :> nodeName 不是用 '[object Text]' 不可靠。
        其實當時我就覺得用 elementObject.toString()=='[object Text]' 有點太過神奇。
[x] autoit.f 不必寫甚麼在包裝過一層的命令, 給 au3 的使用例子就好了。
    直接查 autoitx.hlp 看其他命令。多半是 keyboard / mouse 的命令。
[ ] ie.f 裡 ready not-busy 常常等很久, 有時 readyStatus 卡在 1 不變 4, 配合收 event 可能較好。

[x] hcchen5600 2015/06/29 14:08:57
    想用 jQuery 去 access jeforth 去 attach 的 IE object 網頁, 成功! 太棒了!
    Fortunately the $() function has a second argument, the context, that has to be used here, like:
    $('p', $(ht).context) ==> 去 study 這個 2nd argument 的玄機。
    --
    jQuery 2nd argument, see http://api.jquery.com/jQuery/ Categories: Core
    jQuery 有很多種形式, jQuery("selector") 形式是原型 jQuery( selector [, context ] )
    的簡略式, jQuery(element) 也很常用。鑽進 IE 去控制網頁用的是有 2nd argument
    context object 的形式。 其中 context 實例 ShellWindows.item(theIE).document 即是。
    jQuery 的各種形式,
        1, jQuery(selector [,context])
        2, jQuery(element)
        3, jQuery(elementArray)
        4, jQuery(object)
        5, jQuery(selection) <--- 猜想是第一式的結果
        6, jQuery()
        7, jQuery( html [, ownerDocument ] )
        8, jQuery( html, attributes )
        9, jQuery( callback )
    --
    document js> $('div',pop()) 在 S7 會跑出 : JavaScript error : Permission denied
    可能又是 same origin policy issue。靠,這要怎麼避免? 關鍵是, 拿得到 IE document 可
    讀是應該的, 要可寫才有得談 Same origin policy 算不算是個問題。
    ==> Surprise! 可以修改 Yahoo.com 在本地 DOH7 網頁上的內容。然後又發
        現 document js> $("div",pop()) 也可以! 只是換了一部電腦而已。
        > document :> links[0].outerHTML="<h1>hiiiii!!</h1>"
        > document :> links[1].outerHTML="<h1>Loooooo!!</h1>"
        > document js> $("div",pop())
        OK
        > .s
             3: <h1>hi!!</h1> (string)
             4: <h1>Loooooo!!</h1> (string)
             5: [object Object] (object)
    ==> 回頭查 S7 上失敗時的網頁是 WKS eform http://wkseform.wistron.com/P00/FM_MyPage.aspx
    --> 看能不能改 local 網頁? --> 也可以。
    --> 再試一遍 document js> $("div",pop()) 還是一樣 JavaScript error : Permission denied
    --> 試別的網頁 --> 果然就好了! 原來是需要登入的網頁, jQuery 進去亂鑽，當然要 Permission denied
        shit! 虛驚一場。

[x] jQuery 鑽進去了, 我在期待甚麼? 如果是個 iframe 則手動用 element.f 的 ce 也甚麼都看不到。
    希望 jQuery 能有所不同。因為 F12 debugger 可以看得進去。
    ==> 真的成功了!
    fubon js> $("iframe",g.fubon).length \ ==> 1
    fubon js> $("iframe",g.fubon)[0] obj>keys . \ ==> 有 src
    fubon js> $("iframe",g.fubon)[0].src . \ ==> http://fubon-ebrokerdj.fbs.com.tw/SmartNavi3.asp?A=$^$^B$^BA$^BA]DJHTM&B=1 OK ^1
    ==> id=SysJustIFRAMEDIV 是用 Chrome F12 進去查出來的, document :> getElementById() 找得到嗎?
        --> document :> getElementById("SysJustIFRAMEDIV") \ ==> null (null)
    ==> 用 jQuery 看看 js> $("#SysJustIFRAMEDIV",g.fubon).length . \ ==> 0
        也是沒找到, 改找所有的 table 看看。
        --> js> $("table",g.fubon).length . \ ==> 0
    我可能是給錯參數了, 絕對有 table 的, 但指定 fubon 之下, 沒有, 很自然。用 jQuery 也是這個邏輯。
    [x] iframe 只有一個, 又有 src, 直接 browse ==> 可以。

[/] hcchen5600 2015/06/29 15:38:58
    以上 Fubon 這個 iframe 頁面 ^1 沒有 <body> 倒有 <frameset> 竟然可用 .body 來 access:
    > document :> body . \ ==> [object HTMLFrameSetElement] OK
    ==> 這是常識! http://www.cnblogs.com/yinluhui0229/archive/2011/04/27/2030822.html
        YoudaoNote "frame,iframe,frameset用法和区别"
        每個 frame 都有自己的 <html>...</html> document。
[/] frame (等於是另一個網頁) 要怎麼 access
    --> document :> getElementsByTagName("frame").length . \ ==> 3 OK the ^1 fubon page
    --> document :> getElementsByTagName("frame")[2] obj>keys . \ ==> 列出 members
        有 getElementsBy TagName,ClassName 但是沒有 ById 想想好像也有道理。
    --> 想把 frame 顯示在 jeforth.3we outputbox 可能做不到:
        cls document :> getElementsByTagName("frame")[0].outerHTML .
        \ ==> <frame name="up@just" src="/z/zk/zkf/HiddenFrame.htm" marginwidth="0"
            marginheight="8" noresize="" scrolling="auto"> OK
    --> 看進去的入口猜是 contentDocument
        document :> getElementsByTagName("frame")[2].contentDocument . \ ==> [object Document] 對了!
    --> 試幾下就發現輸入股號的 frame 是 1 號,
        document :> getElementsByTagName("frame")[1].contentDocument.getElementsByTagName("input").length . \ ==> 2
        document :> getElementsByTagName("frame")[1].contentDocument.getElementsByTagName("input") value inputs
        inputs :> [0].outerHTML \ ==> <input name="Menu" type="hidden" value="1">
        inputs :> [1].outerHTML \ ==> <input name="T1" style="border: 1px solid rgb(167, 167, 167); font-size: 10pt;" onfocus="javascript: if(this.value=='請輸入股號或股名')this.value='';" onblur="javascript: if(this.value=='')this.value='請輸入股號或股名';" type="text" size="10" maxlength="10" value="請輸入股號或股名">
    --> inputs :: [1].value=5490 --> 成功!
        對應的 button 是下一格 <td> 裡的 <img> 裏頭有 onclick。如何定位到這個 image 方法很多。
        取 inputs :: [1] 的 siblings 找到 TagName = img 的就是了。
        --> inputs :> [1].nextElementSibling \ ==> null OK 此法不通,要看它的結構,隔一個 <td> 就不行了。
        --> 在該 table 裡找 TagName = img
            inputs :> [1].parentElement . \ ==> [object HTMLTableDataCellElement]
            inputs :> [1].parentElement.parentElement . \ ==> [object HTMLTableRowElement]
            inputs :> [1].parentElement.parentElement.getElementsByTagName("img").length . \ ==> 2 OK 成功!
        --> 改用該 frame 的 document 來找 TagName = img:
            document :> getElementsByTagName("frame")[1].contentDocument constant theFrame or SysJustHead, name of the frame.
            theFrame :> getElementsByTagName("img").length \ ==> 5 (number)
            theFrame :> getElementsByTagName("img")[0].getAttribute("src") \ ==> /images/TransDot.gif (string)
            theFrame :> getElementsByTagName("img")[1].getAttribute("src") \ ==> /images/TransDot.gif (string)
            theFrame :> getElementsByTagName("img")[2].getAttribute("src") \ ==> /images/TransDot.gif (string)
            theFrame :> getElementsByTagName("img")[3].getAttribute("src") \ ==> /images/btn_ok.gif (string)
            theFrame :> getElementsByTagName("img")[4].getAttribute("src") \ ==> /images/TransDot.gif (string)
        --> theFrame :> getElementsByTagName("img")[3].click() 成功! 網頁開始 load 5490 了。
    --> 其實這些 frame 都是有 name 的
    ==> 這個是輸入股號的 frame:
        document :> getElementsByName("SysJustHead").length \ ==> 1 OK
        document :> getElementsByName("SysJustHead")[0].getAttribute("name") \ ==> SysJustHead (string) OK
    ==> 這個是 SysJustBody 左右兩半的部分.
        document :> getElementsByName("SysJustBody").length \ ==> 1 (number) OK
        document :> getElementsByName("SysJustBody")[0].getAttribute("name") \ ==> SysJustBody (string) OK
    ==> 所有要 click 的 link 都在裡面
        document :> getElementsByName("SysJustBody")[0] constant SysJustBody
        SysJustBody :> contentDocument list-links
        0 所屬產業        11 補充揭露事項   22 產銷組合       33 資產負債季表
        ... snip ...
        --> SysJustBody :> contentDocument.links[17].click() 成功!
        --> 17 經營績效 的 table id oMainTable 裏頭還有 select 在 tr id=oScrollHead 裡。

[/] Win7, jeforth.3we inputbox 怪怪的, back-space 倒不回去。
[/] Win7, jeforth.3we Alt-Up 之後, 上下鍵一跳兩行!
    ==> We don't support Windows 7 now.

[x] excel.f or work.f 寫個 query 命令來查部門詳情。 ==> see-departments 1s1k

[x] Excel 的時間 相容於 vb> CDate("2015/1/1 1:23:45") 與 JavaScript 的時間不相容。
[x] 大驚奇! excel time 值屬 (Date) type 其 boolean 有可能是 false !!
    See work.f hcchen5600 2015/07/15 15:49:42

[x] jeforth.3we element.f or ie.f hover mouse cursor on the page turns objects with red frame
    line. So I can copy its outer or inner HTML to jeforth.hta outputbox and then use element.f
    to trim them up.
    ===> moved to ie.f

[x] 用部門代碼查表 departmentcode.json
    // key(i).value 就是本表的 key 或 index 值, 要查 hash 表, 得重複嘗試。
    // 如果失敗就從最後少一個字母再試，直到兩個字母也失敗為止才放棄。
    // 失敗時傳回 undefined 正好。這個 function 稱為 lookup 即可。
    code lookup ( hash key -- ) \ Lookup the hash table that has partial keys with the full key
        (function(hash,index){ // 查表 return hash[index] or undefined
            for(var i=index; i.length>=2; i=i.slice(0,-1)){
                var v = hash[i];
                if(typeof(v)!="undefined") break;
            }
            push(v);
        })(pop(1),pop()); end-code
    : query-dept ( hash dept -- ) \ See the department info
        char BG        dup . char : . space js> tos(2)[pop()] over lookup . cr
        char BD        dup . char : . space js> tos(2)[pop()] over lookup . cr
        char DEPT      dup . char : . space js> tos(2)[pop()] over lookup . cr
        char DEPT2     dup . char : . space js> tos(2)[pop()] over lookup . cr
        char JamesYu   dup . char : . space js> tos(2)[pop()] over lookup . cr
        char Payroll   dup . char : . space js> tos(2)[pop()] over lookup . cr
        char Site      dup . char : . space js> tos(2)[pop()] over lookup . cr
        char Boss      dup . char : . space js> tos(2)[pop()] over lookup . cr
        char Assistant dup . char : . space js> tos(2)[pop()] over lookup . cr
        char WKSRD     dup . char : . space js> tos(2)[pop()] over lookup . cr
        2drop ;

[x] excel.f 在有 excel 的 S7 OA 上也被跳過了, 原因是下面這段 code 出乎意料地傳回 'undefined' ,
        <vb>
        On Error Resume Next
        Set xl=GetObject(,"excel.application")
        kvm.push(xl)
        </vb>
    --> 去掉 "On Error Resume Next" 後即見原因:
        VBscript error : ActiveX component can't create object: 'GetObject'
        我猜這個 excel process 是有問題了。把它 kill 掉看看 --> 果然好了。
    ==> 加上這種情形的警告。

[x] Improve see-dept <code> , list all possible departments
    hash 的 key 有很多是部門代碼的開頭幾個字母, lookup 會自動把 i 縮短來嘗試。
    原來的 lookup 是用 v = hash[i]; 查表, 所以 i 怎麼縮必須是 hash 有的 key。
    如果 i 已經比 hash 的 key 短, 就查不到了。
    ==> 如果 input 很長, 沒有 hash 吻合。把 i 截短 重試, 直到有吻合的為止。--> 現有的 algorithm, 精確。
    ==> 如果以上失敗，就拿所有的 key 來跟 i 比。比 i 短的就不對了，
         比 i 長的 key 截短來比 --> 結果可以一 key 多 value 都列出來。
    ==> 做成另一組 lookup2 跟 see-dept2 吧
    ==> see-departments 1s1k

[x] hcchen5600 2015/08/21 17:40:12
    完成 [begin][again] [begin][until] [for][next] interpret mode 的重要 flow control 命令
    以後不用 cut .. rewind 了。
[x] Use this line to setup Fubon e01 association in excel
    ==> [begin] DDE-formula down @?stop 10 nap [again]
[x] study meney.f against the recent decline.
[x] work on project-k jeforth.f
[x] 新增 private folder 放 work.f money.f departmentcode.json 等。
    --> 看怎麼把 project-k-kernel merge 回 master?
[x] 把 jeforth.3we 的 kernel 換成 project-k. project-k 的 cub.html 已經成功把
    pack-help 獨立出來, vm/kvm 的問題也搞懂了. 應該從 jeforth.f 改好就好了。
    jeforth.3we 還是可以自稱 kvm 噓~~~ ===> 不要直接改, 先用 cub.html debug。
    或者用帶入新 vm 的手法直接在 jeforth.3we 裡 debug。
[x] cub.f 直接在 jeforth.3we 裡試驗 project-k-kernel 很成功。一下就把 cub.f
    run 起來了。cub.f 沒有 selftest 所以不可靠, jeforth.3we 穩是基本要求。準備
    改用 3we/kernel/jeforth.f
[x] 用了很久的 packhelp() 傳回 "( foo ) bar" 或者 "( ?? ) No help message. Use // to add one."
    等於是從 tib 抽 help 出來。用新的 "parse-help" 取代，方法如下：
        push(nexttoken('\n|\r')); // rest of the first line
        execute("parse-help"); // ( "helpmsg" "rests" )
        tib = pop() + " " + tib.slice(ntib); ntib = 0; // "rests" + tib(ntib)
        newhelp = pop();
[x] project-k 的 panic 要表明身分,否則搞搞不清楚.

[x] 從 jeforth.3we 下命令給 project-k VM 用 hotkey f8：
        code {F8} ( "command line" -- ) \ Let project-k VM to run the inputbox
            var cmd = inputbox.value;
            inputbox.value="";
            g.k.dictate(cmd) ;
            jump2endofinputbox.click();
            inputbox.focus();
            end-code

[x] cub.f 好了,攻 selftest, 改良。
[x] Original (words) in jeforth.f is very powerful but without -v and -V.
    While words and help was poor, because they were rely on voc.f unnecessarily.
    So we need to improve words and help. --> 規定好 input 格式, 有助化簡程式。
    words/help [pattern [switch [argument]]]

[x] 老經驗
    nexttoken('\n|\r'); // if use only '\n' then we get an unexpected ending '\r'.

[x] see ~(create)~
    JavaScript error on word ".0r" : Cannot read property 'length' of undefined
    ==> RI,FP: 產生一個 colon word 方法很多，不一定已經有 cfa。

[x] 用 vm.init() 來設定 type() or print() function 多此一舉。已經有 vm.clearScreen 等
    乾脆就不要 init() 了。projct-k 根本不知道也不用知道你需要 print() !!
    ==> jeforth.js 有用到 type() 這樣一來 project-k 就認為自己在有 display 的地方執行?!
        雖然可以從 type() 的定義解決，總是不太理想。
    ==> 用到 type() 的地方
        1. docode() 的 reDef warning ==> 改 call panic(state-object).
        2. panic() ==> 所有 error/warning 都 call panic() 如前。但 panic() 裡面先檢查有
           沒有 vm.panic() 然後 call vm.panic(state)。
        3. reset() 的 message 沒啥意義
    ==> 已經都用 k :: type=function..., k :: prompt=.. 的方式。

[x] Javascript 的 string 有 trim() method 可以去頭尾 white spaces, 從來不知。
    ==> 小心用! Windows XP 的 JScript v5.6 未 support. 故 project-k jeforth.f 裡都不能用。

[x] stackwas 放在 jeforth.js kernel 裏頭有必要嗎? --> 改成 tick(':').stackwas 了。
[x] 要參考 code word 自身,用 tick('name') 是可以考慮。有更好的辦法嗎?
    ==> 現在 _me 直接就是該 word object 本身。
[x] working on db bp *debug* for cub.f
    ==> resume function needs a static variable.
        --> see processing.f, "JavaScript Module Pattern: In-Depth" in YouDao Notebook.
    ==> I only want to get the code word object in its xt(), it's the argument! So,
        simply call w.xt(w) passes w over, this simple! This is done in the inner().
        also "newxt=function(_me){..." in docode() of kernel jeforth.js.
    ==> 經由 "newxt=function(_me){..." in docode() of kernel jeforth.js, and
        simply call w.xt(w) in the inner() loop, we have _me in any code word
        that indicates the code word itself.

[x] root word-list 還是叫 'forth' 好了, 當初想的是讓 project-k 盡量中性，先有 root 然
    後再加上 forth voc 等。但因為 kernel jeforth.f 本身不 support vocabulary, 故以上
    已經落空，根本分不出 root 跟 forth 不如就用 forth。還是可以在 voc.f 進來了以後再
    拆分 root 跟 forth。但這麼做有何意義? 既無意義就表示都是 forth 即可。
    所以 forth 變成永遠都在的部分，不想讓 words help 太雜亂時，盡量用 only work.f,
    only git.f 等來讓輸出清爽。故 words 的 -v -V -V- option 都不必了，好耶。

[x] should be moved to voc.f
    : temp          ( -- ) \ The source-code-file.f header macro
                    <text>
                        ?skip2 --EOF-- \ skip it if already included
                        dup .( Including ) . cr char -- over over + +
                        js: tick('<selftest>').masterMarker=tos()+"selftest--";
                        also forth definitions (marker) (vocabulary)
                        last execute definitions
                        <selftest>
                            js> tick('<selftest>').masterMarker (marker)
                            include kernel/selftest.f
                        </selftest>
                    </text> tib.insert ;
                    js: last().name="source-code"+"-header"
                    /// skip including if the module has been included.
                    /// setup the self-test module
                    /// initiate vocabulary for the including module

[x] cub.f 寫好了以後要併回 cub.html, project-k 保持單純。

[x] 大改寫,
    [x] voc.f help calls (help) but origianl (help)/help 的 系統 help 要重新調配.
        (help) 不該負責印系統 help --> (words) words , voc.f words help ok
    o   get jeForth() from jeforth.js > kvm = new jeForth()
    o   kernel/jeforth.f --> f/jeforth.f
    o   fortheval --> dictate
    o   print --> type
    o   所有 g.sth 改成 vm.g.sth, 否則 g 本身要在哪裡定義?
        --> 如果是在 init module (index.html, jeforth.hta, etc) 的 global
            可以考慮，但我不想跑出一個不是掛在 vm 下的例外來降低 porting project-k 的一致性。
        --> 如果在 kernel jeforth.js 裡，不好！多出個人色彩。
        --> 必須 HTA 下 <vb> .. vm.g.name .. </vb> 也能看得見。
            <vb> 本來看不見 vm 只看得見 kvm 但死認 kvm 當然不行，所以後來引進
            var jeforth_project_k_virtual_machine_object = new jeForth()
            把 vm 的本名弄到絕對不會有人來衝突，然後再介紹給 <vb> 內部自己的 global vm。
        --> 所以 g hash 目前是掛在 vm.g 暫無他法。
    o   internel kvm --> vm
    o   去掉 kernel kvm.path = ["dummy", "f", "3nd/f", "3nd", "3nd/eforth.com", "playground"];
    o   kvm.selftest_visible = true;
    o   kvm.minor_version = 1; // minor version specified by application, major version is from jeforth.js kernel.
        var version = parseFloat(kvm.major_version+"."+kvm.minor_version);
        kvm.greeting = function(){
            type("j e f o r t h . 3 h t m -- v"+version+'\n');
            type("source code http://github.com/hcchengithub/jeforth.3we\n");
            type("Program path " + window.location.toString());
            return(version);
        }
    o   vm.base 改用 value -> vm.g.base [x]jeforth.f []3htm []3nd []3nw []3hta
    o   vm.editMode 改用 ({F2}).EditMode
    o   改寫 vm.panic()


[ ] html5.f , element.f 的 selftest 都很欠缺，無聊寫寫。
[x] 3htm 的 platform.f 裡又有 (help) help 用來超漂亮的 help .... 也得改寫.
    ---> keyboard events 有問題,回家繼續 debug
[x] Error! source-code-header unknown.

[x] jeforth.3we 的 'kernel' directory 直接就是 project-k 以免搞不清楚.
    本來認為是 kernel 的 jeforth.f 跟 voc.f 則搬到 f 裡去。不當作 kernel 了。
    [x] 這個要把 kernel 拿掉, 以 3htm 為例,
        kvm.path = ["dummy","f", "3htm/f", "3htm/canvas", "3htm", "playground"];

[x] 這兩個不必佔用 vm.member , 應該直接放進 *debug* 的 members。
    因為掛在 vm 下的 properties 都要有關聯 vm 內外的目的，如 vm.type(), vm.prompt,
    等. bp 跟 continue 或 resume 純粹是 jeforth.f 內部的東西, 應該屬於 value 放
    在 vm.g 下才對. 宣告成 value 就對了。
        // debug
        vm.bp = 0 // breakpoint  <---- tick("*debug*").breakpoint=0
        vm.continue = 0 // *debug* resume point   <---- tick("*debug*").resume=null
    [x] index.html [x] cub.html [ ] 3nw [ ] 3nd

[x] some application didn't use this trick
        e = (e) ? e : event; var keycode = (e.keyCode) ? e.keyCode : (e.which) ? e.which : false;
    [x] index.html of 3HTML, [x] baby.html of project-k, [x] cub.html of project-k
[x] chrome f12 跑出一個 message :
    cub.html:6 Resource interpreted as Stylesheet but transferred with MIME type text/plain: "http://localhost:8888/common.css".
    我不喜歡這個解釋 http://stackoverflow.com/questions/12003107/resource-interpreted-as-script-but-transferred-with-mime-type-text-plain-for-l
    用 Win8 ie10 也一樣有問題 SEC7113: CSS was ignored due to mime type mismatch
    --> utf-8 改成 ANSI 也沒用
    ==> 改直接執行 cub.html 就好了 (不透過 localhost:8888) --> 可能是 webserver.f 的問題.
    ==> 果然是 webserver.f 的問題! https://msdn.microsoft.com/en-us/library/hh180764(v=vs.85).aspx
        RI : An imported style sheet was not used due to the wrong MIME type in the HTTP header.
        FP : Ensure style sheet file is delivered with the proper HTTP response header, which includes
             a content type of text\css. See MIME-Handling Changes in Internet Explorer for more information.

[x] ie10 還抓到 cub.html 好多別的問題
    HTML1402: Character reference is missing an ending semicolon ";".
    cub.html, line 243 character 22
    HTML1402: Character reference is missing an ending semicolon ";".
    cub.html, line 707 character 62
    HTML1402: Character reference is missing an ending semicolon ";".
    cub.html, line 707 character 124
    HTML1402: Character reference is missing an ending semicolon ";".
    cub.html, line 710 character 34
    HTML1402: Character reference is missing an ending semicolon ";".
    cub.html, line 712 character 103
    在 chrome 都沒問題,而且所列之處根本就是 forth code ! 別管他。

[ ] review project-k GitHub wiki 的文件、linkage 等。
    文章寫多了,動不動就有斷鏈、command 已經改名等問題。

[/] 檢查 browser 是否 Chrome, alert 用 chrome 比較好。cub.html 在 Win 10 Edge 直接跑，慢得要命。

[x] 3htm jsc 裡 erase 無效 ... 感謝我自己! 以前已經發現在 jsc console 時
    inputbox.value 是 \10 因為 \r\n (Chrome & IE) 只吃掉 \r 故留下 \n 使得 inputbox 非 empty 因此
    {backspace} 不工作。修改判斷條件為 inputbox.value==""||inputbox.value=="\n" 即可
    * 3nw 也解過這個問題, 方法是在 jsc.xt 裡一見面就把 inputbox.value 清成 "" 也可以。

[x] tweak cub.html on going . . . so as to make a project-k release
    rename to sample.html. project-k released. [ ] make it a release on github.

[x] webserver.f ok now. working on 3nd . . .
    [x] no panic !!!! in jeforth.3nd.js <---- master kvm.panic() was missing.
        in 3htm level doesn't work either <----- it works, it launchs F12 debugger.
    [x] vm.gets() very poor, needs improvement.
        --> e command tips ctrl-z at least
    [x] fs.f has some self-test, they need to upgrade
    [x] jsc.hlp, jsc.js
    [ ] eforth.com

[ ] jsc 能不能在 exit "", ret null 處停下來, 目前不會, 故看不到 ret / exit 就突然結束了。

[x] porting to project-k 大改寫 apply to 3HTA (3htm and 3nd are done)
    [x] kernel/jeforth.js --> project-k/jeforth.js
    [x] get jeForth() from jeforth.js > kvm = new jeForth()
    [x] 去掉 kernel kvm.path = ["dummy", "f", "3nd/f", "3nd", "3nd/eforth.com", "playground"];
    [x] kernel/jeforth.f --> f/jeforth.f
    [x] kvm.selftest_visible = true; // type() needs to check it
    [x] kvm.minor_version = 1; // minor version specified by application, major version is from jeforth.js kernel.
        var version = parseFloat(kvm.major_version+"."+kvm.minor_version);
        kvm.greeting = function(){
            type("j e f o r t h . 3 h t m -- v"+version+'\n');
            type("source code http://github.com/hcchengithub/jeforth.3we\n");
            type("Program path " + window.location.toString());
            return(version);
        }
    [x] vm.base 改用 value -> vm.g.base [x]jeforth.f []3htm [x]3nd []3nw [x]3hta
    [x] apply to all *.f files
        [x] fortheval --> dictate  [ ] apply to all *.f files
        [x] print --> type   [ ] apply to all *.f files
        [x] 所有 g.sth 改成 vm.g.sth   [ ] apply to all *.f files
        [x] internel kvm --> vm
        [x] js: vm.selftest_visible=true
        [x] -->judge 改用 [d d] [p p]
    [x] vm.editMode, in platform.f, 改用 {F2}.EditMode [x]3htm []3nd []3nw [x]3hta
        [x]3htm [x]3nw [x]3hta all are in 3htm/f/platform.f
        [x]3nd
    [x] 改寫 vm.panic()
    [x] 照理說 "kvm" 只應出現在 jeforth.hta 裡, 其他都用 "vm"。但是 vb.f 裡似乎免不了要用一次 "kvm" 讓
        VBscript 認得 "vm"。若 "kvm" 之名改了，vb.f 也得跟著改。<==== FP, use a very long VM name in global.

[x] working on improving 3nd jsc . . . done，it's very good now.
    [x] 3htm [x] 3hta [ ] 3nw

[x] *debug* should print the prompt at entering *debug* mode.
[x] include jQuery is done in html5.f , no good. Because html5.f is shared by 3hta, 3htm, and 3nw.
    --> move include jQuery out of html5.f, jquery.f stand alone for 3hta.
    --> type should be redefined in jquery.f but didn't --> fixed, but still pringing &gt;&gt;&gt; <br>&gt; js&gt
    --> RI: multiple \t only first \t processed, because plain=function...; function vm.type=function...
        something wrong. --> try newPlain() then ok. So which plain() is used? I know vm.plain()
    --> 乾脆不要有 type() plain(), 都用 vm.type() vm.plain() 免生疑惑。 ==> Bingo! and shit 自找麻煩。

[x] working on wsh.f selftest improvements

[x] 半路發動 selftest 的方法，必須用 include 的才會自動幫 .f 檔加東西執行 selftest。
    ' <selftest> :: enabled=true dropall cls --wmi.f-- include wmi.f
    ' <selftest> :: enabled=true dropall cls --excel.f-- include excel.f
    ' <selftest> :: enabled=true dropall cls --canvas.f-- include canvas.f
    ' <selftest> :: enabled=true dropall cls --ie.f-- include ie.f
[x] ie.f 已知 ShellWindows 包括 fe ie . ie(i) ie 等不該以 ie 為名。
[x] fe/ie 其實是 sw 才對，ShellWindows.item(i)
[x] ie.f 最嚴重的問題是這個, ShellWindows.item(index) 不能收 argument !!??
    \ [x] 不能直接用變數,很奇怪? <-- RI: 需 parseInt() cast 一下。
    \ theIE s" vm.g.ShellWindows.item(_i_)" :> replace(/_i_/,pop()) jsEval ;
    > : sw <js> var index=vm.g.theIE; var oo = vm.g.ShellWindows.item(index); oo; </jsV> ;
    > sw .
    > JavaScript error on word "sw" : Invalid procedure call or argument
    ==> 改用 code word
    code sw2
        var index=vm.g.theIE;
        var oo = vm.g.ShellWindows.item(index);
        push(oo);
        end-code
    --> 結果一樣
    ==> 改用 .js 發現用 parseInt() cast 一下就好了
        var sa = new ActiveXObject("Shell.Application");
        var sw = sa.windows();
        var index = vm.g.theIE;
        type(sw.item(index)); // 還是有問題
    --> <js>
        var sa = new ActiveXObject("Shell.Application");
        var sw = sa.windows();
        type(sw.item(parseInt(vm.g.theIE))); // parseInt() cast 一下就好了。
        </js>
    ==> : sw js> vm.g.ShellWindows.item(parseInt(vm.g.theIE)) ; <--- OK !!
[x] 在 wsh.f 裡會自動切中文? 如何避免?  ---> 乾脆讓它 "Let me set a different input method for
    each app window" @ Control Panel>Clock, Language, and Region > Language > Advanced settings.
    因為不讓它切它總是要切乾脆由它去吧!
[x] Consider the proper .f for [stringify] and [parse] , according to 3hta's quit.f,
        include voc.f       \ voc.f is basic of forth language
    ==> include html5.f     \ HTML5 is HTA's plateform feature
        include jquery.f    \ Avoid Windows XP, Windows 7 HTA problems from happening immediately
        include element.f   \ HTML element manipulation
        include platform.f  \ Hotkey handlers and platform features
        include vb.f        \ Being able to run VBS is what HTA is for.
        include wsh.f       \ Windows Shell Host
[x] 在 panic() 裡面用 ' <selftest> :> enabled 來判斷是否 free run mode。
    panic() 是 application dependent, 以 3hta 為例，如果是 free run mode ,碰到 severe panic
    通通要進 jsc 停下來; 如果是 interactive mode 則進 F12 debugger.
    看來 <selftest> 定義好之後要改寫 panic() 但是又不方便放進 jeforth.f 成為 common code,
    因此應該在 quit.f 裡面改寫。
    ------------- ^^^^ 以上不對 ^^^^ -------------------------------
    實際上 panic() 要不要進 jsc 只跟 severity 有關, 沒機會管 <selftest>.enabled.
    [x] 3hta [x]3nd [x]3nw [x]3htm

[x] jsc.hlp , jsc.js 都該像 3nd 一樣獨立。 <--- jeforth.f 之後馬上就是 quit.f 不
    能更早了! 所以放在 quit.f 裡面沒問題。===> ok, but 問題是重複寫了好幾份, 能不能在 quit.f
    裡面都參考同一份 jsc source code?
    ==> done, 統一成只有兩分 jsc.f : 3hta,3htm,3nw and 3nd.
    [x] 晚點把 3nd 裡的 jsc.hlp jsc.js delete 掉，已經沒有用了。

[ ] T550 常常突然停下來, 造成 Multiplicity 斷線. 寫程式觀察這個情形。

[x] How to install nw.js 
    Method 1:
        Unzip the nw.js package (v0.14 now use SDK version to gain F12 Debugger or DevTool)
        and set path to it, that's all. 
    Method 2:
        就是把 zip 解壓, 然後整個 folder copy 到 nodejs\ 的 path folder 
        (c:\Program Files\nodejs) 因為 node.js 有 installer, nw.js 沒有. 正好目錄結構不衝突,
        應該可以 ==> Yes, OK.
        Simply copy the entire nw.js unzip'ed folder to node.js folder. This is because 
        node.js has Windows installer and nw.js has not but it can leverage node.js.
        2020/05/02 10:10:08 測試 lang='js' on OA used this way again and it works! 

[x] porting to project-k 大改寫 apply to 3nw (3htm 3nd 3hta are done)
    ---- modify jeforth.3nw.html --------------------
    [x] kernel/jeforth.js --> project-k/jeforth.js
    [x] get jeForth() from jeforth.js > kvm = new jeForth()
    [x] 去掉 kernel kvm.path = ["dummy", "f", "3nd/f", "3nd", "3nd/eforth.com", "playground"];
    [x] kernel/jeforth.f --> f/jeforth.f
    [x] kvm.selftest_visible = true; // type() needs to check it
    [x] kvm.minor_version = 1; // minor version specified by application, major version is from jeforth.js kernel.
        var version = parseFloat(kvm.major_version+"."+kvm.minor_version);
        kvm.greeting = function(){
            type("j e f o r t h . 3 h t m -- v"+version+'\n');
            type("source code http://github.com/hcchengithub/jeforth.3we\n");
            type("Program path " + window.location.toString());
            return(version);
        }
    [x] vm.base 改用 value -> vm.g.base [x]jeforth.f [x]3htm [x]3nd [x]3nw [x]3hta
    [x] drop kvm.init
    [x] apply to all *.f files
        [x] fortheval --> dictate  [ ] apply to all *.f files
        [x] print --> type   [ ] apply to all *.f files
        [x] 所有 g.sth 改成 vm.g.sth   [ ] apply to all *.f files
        [x] internel kvm --> vm
        [x] js: vm.selftest_visible=true
        [x] -->judge 改用 [d d] [p p]
    [x] vm.editMode, in platform.f, 改用 {F2}.EditMode
        [x]3htm [x]3nw [x]3hta
        [x]3nd 另外 review <---- gets is different thing.
    [x] 改寫 vm.panic()
    [x] 照理說 "kvm" 只應出現在 jeforth.hta 裡, 其他都用 "vm"。但是 vb.f 裡似乎免不了要用一次 "kvm" 讓
        VBscript 認得 "vm"。若 "kvm" 之名改了，vb.f 也得跟著改。
    [x] jsc is now defined in quit.f
        [x]3htm [x]3nw [x]3hta <---------- same 3htm/f/jsc.f
        [x]3nd 另外 review <--------- 3nd/f/jsc.f

[x] 3nw 的 jsc 直接 copy 用 3hta 的是可以用的。有機會把 3hta 3htm 3nw 三個 jsc 統一起來。
    [x] 乾脆寫成一個 jsc.f 統一起來。
    [x] jsc.f 可以自給自足 vm.jsc 不需要 initial module 定義。 [x]3hta [x]3htm [x]3nw

[x] 3nw jsc 目前有下列問題:
        [x] initializing of vm.jsc.cmd, vm.jsc.enable should be done in 3nw.html <=== 這兩個根本不用 init
            jsc.cmd 用到前有給值的動作, vm.jsc.enable undefined 時正好是 fault。
        [x] Replace the arguments.callee.show by vm.jsc.statusToggle, that switches the status
            prompt, by 't' command.
        [x] exit/q/quit 光 return 好像不夠, 下 debugger; instruction 會卡在 jsc 裡出不來。--> restart 後消失了。
        [x] erase 有時無效,且 rstack 一直堆積同一個回返地址
            RI ==> 因為 single step 會 break 所有的動作, 連 {backSpace} 也被 break 到了!!
            [x] 以後再想想辦法。jsc 裡面用到的 words 都會有這個問題 ==> jsc.enable is the solution.
        [!] jsc help shows only a few lines <---- nw.js' problem

[x] vm.panic redefine was in 3hta/quit.f , move to 3htm/f/jsc.f
    [x]3hta [x]3htm [x]3nw
    [x]3nd
[x] the --- save selftest.log --- thing in all quit.f can be removed
    [x]3hta [x]3htm [x]3nw
    [x]3nd

[x] playground 裡面的 project-k things 可以清除了
[x] panic()'s state.level should be state.serious because it's used as a boolean.

[x] <vb> needs a global name for the jeforthVM, so let it be
        var jeforth_project_k_virtual_machine_object = new jeForth()
        var kvm = jeforth_project_k_virtual_machine_object;
    <vb> 裡要重新取得 vm through jeforth_project_k_virtual_machine_object
    全部都叫 vm 感覺也不好, init module 裡維持作 kvm, 因為 vm 聽起來是一個自稱, 事
    實亦然。
    [x]3hta [x]3htm [x]3nw <----- 目前只 3hta 有用到。
    [x]3nd <-------- global.kvm = global.jeforth_project_k... = new jeForth();

[ ] vm 在 initial module (index.html) 裡只用來加掛 jeforth.f 需要的東西，主要是 I/O。
    此外的東西都不該出現在 vm 下的第一層, 但在 vm.g 以下則 OK. [ ] 畫圖說明
    這是為求整套系統 building blocks 之間的簡單明了。
    [ ] 手工 js> vm obj>keys . 列出所有 members 一一檢討。
        3nw: > js> vm obj>keys .
            major_version,execute,dictate,stack,rstack,words,dictionary,gui,appname,
            selftest_visible,minor_version,host,path,screenbuffer,type,greeting,panic,
            debug,fso,readTextFile,writeTextFile,prompt,argv,bye,clearScreen,plain,g,
            [ ] --> inputbox
            [ ] --> jsc
            [ ] --> cmdhistory
            [ ] --> forthConsoleHandler
        3hta: > js> vm obj>keys .
            major_version,execute,dictate,stack,rstack,words,dictionary,appname,host,path,
            selftest_visible,plain,type,greeting,debug,screenbuffer,prompt,ado,argv,bye,
            clearScreen,panic,writeTextFile,readTextFile,g,process,fso,BinaryStream,
            [ ] --> push,pop,
            [ ] --> BinaryFile,objWMIService
            [ ] --> vbscript,
            [ ] --> jsc,cmdhistory,
            [ ] --> forthConsoleHandler,
            [ ] --> inputbox,EditMode,
        3nd:
            major_version,execute,dictate,stack,rstack,words,dictionary,host,appname,path,
            screenbuffer,selftest_visible,type,clearScreen,panic,greeting,fso,readTextFile,
            writeTextFile,bye,gets,debug,prompt,argv,exec,stdio,g
            [ ] --> jsc,
            [ ] --> forthConsoleHandler,

[x] jsc.prompt are "undefined" when it was from panic
[x] project-k kernel porting done. Merge to jeforth.3we master.
    --> Click "Pull" on "GitHub for Windows" --> "Pull request created" -->
    一頓亂搞解決 git merge 的問題 --> 好像是先切到 master, 然後 git merge the-working-branch。
    會在 local 產生一個特別的版本, 其中如果有問題必須在 local 解決, 否則無法 push 上雲端。

[x] 3nd 的 version 顯示沒有照新 style.
    j e f o r t h . 3 n d -- r2 <============== should be major.minor
    Node.js v0.12.4 ... snip ....
    --> refer to 3htm's index.html

[ ] ie.f shell.application.f 這種大題目要另外深入探討。

[x] inputbox arrow keys can be smarter. When it's empty, recall commands, otherwise
    it moves cursor. <--- for [x]3hta, [x]3htm, [x]3nw they share the same platform.f
    --> redefine 3htm/f/platform.f {up} {down}
    --> 想錯了! 第一下可以 recall older command, 再一下因為 inputbox 已非 empty 就不行了。
        故 up down 應該 launch alt-up history-selector 而非 ctrl-up ctrl-down recall。
    [x] ctrl-up,down 不會整理跨行的 textarea, alt-up history-selector 則會。兩者還是有一點
        差別。故保留 ctrl-up ctrl-down 仍有效。
    [!] Chrome 3htm inputbox ^m 無效! 3hta ok，任其自然。
    [x] case  77: /* m    */ ^m 在 HTA textarea 裡本來就有效。在 Chrome 無效也無法簒改
        e.keyCode。仿 excel 用 Alt-Enter 也不成功。難道只能切 EditMode? 但為什麼 EditMode
        有效? 因為 Alt-Enter 被 Chrome textarea 處裡掉了所以無效。
        --> 那就改用 shift-Enter 呀! ==> B i n g o ! !
            non-EditMode 想換行用 Shift-Enter 避免把命令發出去
            EditMode 用 Ctrl-Enter 發出命令
    [x] 下過命令自動取消 EditMode。

[/] rename ntib to itib ok? think about it. --> forget it.

[ ] 要不要突破第一行的限制?
    --> In a code word definition, the ( foo ) \ baa must be at the first line with 'code' or
        it's an error for JavaScript.
[x] HTA's vm.beep 本來在 platform.f 有用到, 改成 execute("beep") 把 vm.beep 取消。
    beep 也算是 I/O 定義成 vm.beep() 似乎有理。但既然可以用 execute("beep"), 還是不要的好。
    [x]3hta, [n/a]3htm, [ ]3nw, [ ]3nd

[ ] Thinking of how to improve the user experience on http://www.figtaiwan.org/project/jeforth/jeforth.3we-master/,
    I found a wonderful web page design helper called contentBuilder.js http://www.online-html-editor.org/.
    It's beautiful and it can help us to convert a picture into base64 embeded HTML code. Good for jeforth
    to have embeded pictures.
    [ ] Use contentBuilder.js' online editor to design what I want to show on jeforth.3htm online. Then pay
        some money to find a front end designer to translate into HTML.
    http://www.online-html-editor.org/


[x] 3hta to support both ado and fso switch
    --> What happened if use fso? <--- see "HTA does not work with utf-8 with BOM" above
        git.f 讀一半就會出錯, 因為有用到中文 word name。
    --> What happened if use ado?
        "Safety Settings on this computer prohibit accessing a data source on another domain"
        https://www.evernote.com/shard/s22/nl/2472143/db532ac2-04d1-4618-9fc9-e81dc3ed1d0a
    [x] 2. HTA 版用 fso 開始, 看到 Windows 8 以上自動改用 ADO (file system)

[x] project-k can't use string.trim(), Windows XP JScript does not support that.
    String.replace(/(^( |\t)*)|(( |\t)*$)/mg,''); // remove 頭尾 whitespaces. .trim() 舊 JScript v5.6 未 support

[x] Windows XP can run jeforth.hta now. But can't readTextFile due to the error of :
    "JavaScript error : Safety settings on this computer prohibit accessing a data
     source on another domain." ===> 放棄 Windows XP.
[/] Try Windows 7. ==> Windows 7 不一定可以順利執行, 乾脆偵測到發個警告。
    [/] 偵測 OS version needs objWMIService which is too late and <vb> is used, too late.
        I wish HTA supports something to tell OS version?
    --> jeforth.hta uses the below method to distinguish Windows version:
        if(document.getElementsByClassName){
            document.getElementsByClassName('appname')[0].innerHTML=kvm.appname;
            document.getElementsByClassName('appname')[1].innerHTML=kvm.appname;
        } else{
            alert("Warning: Your system is old, IE10 or newer preferred. Try Windows upgrade.");
        }
    ==> Give up Windows 7

[x] How to tell Windows version?
    > objEnumWin32_OperatingSystem :> item().Version .
    6.2.9200 Win 8, 6.1.7601 Win 7, 10.0.10240 Win 10
[x] 自動判斷, Windows 8 以上就自動切 ado 否則續用 fso。
[x] Windows 7 compatibliity
    [x] wmi.f Win32_OperatingSystem selftest memory 本來要求 > 2G 改成 > 128M
    [x] skip html5.f appendChild selftest if IE/HTA too old. Check document.getElementsByClassName existance.
    [x] html5.f selftest createElement aaa will become AAA on newer IE/HTA but Win7 older IE/HTA will not.

[x] ~.bat 的 path 設定使 jeforth.3we 對別人很難用。統一 install 方法，去個人化。
    要求 node.js 先裝好, node.exe 入 path, nw.js 整個 copy 到 node.js home folder 因此
    nw.exe 也入了 path。
    [x] 修改文件, how to run 要改良說明。

[x] 3nw's quit.f needs a jump focus at the end.

[x] eforth.com selftest needs a rewrite --> Done.

[x] bug
    > help ShellWindows <--- also all other constants!!
    JavaScript error on word "(words)" : Object doesn't support property or method 'toLowerCase'
    JavaScript error on word "(help)" : Object doesn't support this property or method
    JavaScript error on word "help" : Object doesn't support this property or method
    --> check help calls (help) calls (words) <--- only one, see (help) shit!!
        help and (help) are : Modified by platform.f for HTML table.
    --> platform.f is common among 3htm too, so it's easy to debug --> try 3nw --> but 3nw is ok on help <constant>
        --> include ie.f makes the problem? No.
        --> not the experiment,
    --> the problem has gone after restart jeforth.hta.

[x] element.f 的 ce@ 有防呆，會自動剔除非 element objects 回復到前一個有效的 element。
    但沒有警告, 今加上。 2015/10/5 14:14

[x] ie.f 裡寫出
    : remove-script-from-element ( element -- ) \ Through jQuery, the element will be modified.
            js> $("script",pop()) ( jqObject )
            <js>
                for (var i=0; i<tos().length; i++)
                    tos()[i].parentNode.removeChild(tos()[i])
            </js>
            ( jqObject ) drop ;
            /// The given element 可以是某個 IE 頁面不一定在本地。
            /// document js> $("*",pop())[0] ( the web page )
            /// remove-script-from-element \ document is trimed now
            /// document :> body.innerHTML </o> \ No script trouble

[/] Strange, Windows 10 T550 makes an unknown JavaScript error by,
      shell.application :> windows().item(0).document .
      jsc: vm.g.ShellWindows.item(parseInt(vm.g.theIE)).document
    --> try older version --> master is old, same problem on the T550. --> cold boot --> same problem. --> Windows update ...
    --> try S7 Win8 --> OK no such problem.
    --> !!! try other Windows 10 computer --> an UUD in the lab 10.0.10546 is ok!! so it's T550's problem.
        --> but it appears like [object HTMLDocument] while S7 Win8 appears [object Document], different!
    --> try Windows 10 at home --> it's ok.

[x] box2dweb-arrow.f 在 arrow.js 裡為了要把物理引擎的 world 傳出來給 jeforth 必須要
    用到 vm.push 而vm 裡偏偏沒有 push, 從 kernel jeforth.js 裡把它們 export 出來吧!
    --> 修改 project-k jeforth.js.
    --> vb.f 也要簡化, 先前是它自己定義 vm.push vm.pop 可以拿掉了。
    [x] 同時, arrow.js 裡看不見 vm 因為 vm 是 project-k kernel jeforth.js 裡的自稱,外面
        看不見. 而 kvm 是 jeforth.hta 給的 instance name 是個 global 所以 arrow.js 裡可
        以看見。但是 arrow.js 不要用 kvm 而用 jeforth_project_k_virtual_machine_object
        來取得 vm。

[x] 昨天忘了 push proejct-k, 在辦公室 vm.push vm.pop 還是沒有, 先用 quit.f 應急. 回家記得 push & 拿掉。
    working on branch release-3.1 <--- done

[x] release 3.1 之後 master == develop 如何複查?
    --> S7 checkout to develop, T550 checkout to master
    --> compare the two folders via Total Commander > menu : Commands > Synchronize Dirs...
    依內容 compare 只看 != 者, 忽略 .git folders. 證實無誤。

[x] User suffering problem, jeforth.3we and project-k are separated they don't know, release new README.md
    immediately!!! ---> README.md improved
    [x] but an even better arrangement is expected. --> Simply : git add -f project-k/jeforth.js

[x] Test downlaod jeforth.3we.zip from GitHub, run it, failed !!! <== unix2dos.exe is the solution
            reDef code
            JavaScript error on word "code" : Expected '}'
            reDef code
            JavaScript error on word "code" : Invalid character
            Error! ; is compile-only.
            Error! ; is compile-only.
            Error! ; is compile-only.
            Error! word is compile-only.
            reDef \s
    --> stop in quit.f no work. problem in jeforth.f
    --> Stop right after reDef code, copy-paste the entire remaining jeforth.f ... PASS!
        so what's the matter?
    --> Strange, when defining init, the error message appears. But copy-pase ok.
            JavaScript error on word "code" : Expected '}'
        --> define init-debug which is mirror of init before init. stop before init, Binary search the problem.
        --> gotcha ! vm.g.isSameArray = function (a,b)
        --> RI! 竟然是中文 comment 的問題, 因為程式一開始是用 fso 而問題直接就發生在 jeforth.f 裡。
            ==> 中文 comment 之後加幾個 space 即可避免。<---- 誤導了!這是個已知的問題, 有 config setting 可以設定.
            clone 下來的沒問題, 但是 [Download Zip] 下來的有問題因為 push 上去時 CRLF 被換成 LF, pull 下來時會自動
            又把 LF 換回 CRLF, clone 下來時也無誤. 我猜 [Download Zip] 直接把雲端的 repo 打包下來時沒有做轉換, 所
            以都是 LF 因而出問題。
            See http://www.cnblogs.com/flying_bat/archive/2013/09/16/3324769.html
        --> 試過了, 只有 3hta 會這樣。3nw, 3nd, 3htm 都 ok. 所以要從 jeforth.hta 下手自己解決這個問題。
        --> 整個 project 已經 run 很久了, cloud 端都被轉換成 LF 了, 這至少對 project-k 是好事.   因為號稱它在所有
            有 JavaScript 的地方都能用, 一見面就卡在 CRLF(MS), CR(Apple), LF(Linux) 的問題上不好。
    [x] 值得研究!! jeforth.hta should recover this problem in readTextFile and writeTextFile.
        ==> jeforth.3we-develop.zip 就應該先處理好, 執行 jeforth.hta 時若未處裡已經太晚了， unix2dos.exe is the solution
        [x] make sure Chinese text files HTA created, Big5, utf-8, and GB2312 are all 0D0A/CRLF conflict free
            --> Write a Chinese or pure English string from HTA to a file, check the file, ---> it's utf-8/BOM that
                has a EF BB BF at beginning. Always. Because my method is ado I guess --> Yes. New line is only LF 0A
            --> switch to fso and try again --> Yes! switch to fso then there's no BOM so it's not utf-8 but a plain
                text if it's English and Big5 for Chinese. New line is also only LF 0A.
            --> '想' charCodeAt() is unicode 60-f3, Big5 is B7-51, utf-8 is E6-83-B3, GBK is CF-EB (saved from notepad++)
                Online character code lookup http://bianma.supfree.net/sos.asp?id=12054
            --> GB2312 coded file readTextFile 結果 HTA 會把每個不認得的 code 逐 byte 用 65533 (0xfffd) 取代。
                所以 '義' C1-78 讀進來變成 2 個 character [65533][120] (0x78 == 120)。讀進不認得的編碼沒救,因
                為一堆都被 65533 替換掉了。
            --> 本來是 0A 或 0D 0A 皆保留 fso ado 都不會動他們。 <==== 錯!
                [@] 解法就是, 先把所有的 charCodeAt(i) == 13 的都刪掉, 然後把所有的 charCodeAt(i) == 10 的都
                    insert 13 改成 13 10.
                    binary-string>array
                    <js> var aa=[11,22,33,44]; aa.splice(2,1); aa </jsV> \ ==> 11,22,44 (array)
                    binary-array>string
                    ==> 無效, fso 一讀進 utf-8 就已經亂了。亂了再處理已經來不及。
                <無效取消>
                    [@] guaranteeCRLF (ss) // return a new string with new lines be CRLF
                        ok now, but read -> write file test still failed. --> device a way to see the actual file read by readTextFile
                        code remove-all-CR ( string -- string' ) \ Remove all CR 13 from the string
                            var aa = pop(), bb = "";
                            for(var i=0; i<aa.length; i++)  if (aa.charCodeAt(i) != 13) bb += aa[i];
                            push(bb);
                            end-code
                        code replace-LF-to-CRLF ( string -- string' ) \ Replace all LF 10 to CRLF 13 10.
                            var aa = pop(), bb = "";
                            for(var i=0; i<aa.length; i++) {
                                if (aa.charCodeAt(i) == 10) bb += String.fromCharCode(13);
                                bb += aa[i];
                            }
                            push(bb);
                            end-code
                        : guarantee-CRLF ( string -- string' ) \ Replace LF 0A in the given string to CRLF 0D0A.
                            remove-all-CR replace-LF-to-CRLF ;
                        --> write it to a file
                            code test
                                var ff = readTextFile_fso("f/jeforth.f");
                                writeTextFile_fso ("ff.f", ff);
                            end-code
                </無效取消>
            --> 總之, 用 charCodeAt() 不用擔心會看錯, 0d 0a 看到了就是 CR LF 不會錯。 <=== 錯!
                --> 錯了!
                    --> 看到問題了, 中文 comment 之後的 CRLF 真的有問題,把下行的 } 給吃上來了!
                    --> 因為 fso 不認得 utf-8 中文
                    utf-8 中文行尾用 fso 讀進來會被搞亂, 行尾的 0A 不見了!!! <--- root cause
                    --> 隨便用個中文檔 fso 去讀應該可以複製現象... Bingo!! ... shit! 上面的實驗不夠周延。
            --> 實際上隨便一個 utf-8 中文檔, 用 fso 讀近來都會有 LF 或 CRLF 被吃掉的現象!
                解法曾考慮加強成 20 0D 0A 而非單 0D 0A, 但 fso 一讀進來就已經亂了!來不及做任何補救。
                --> 如果來源是 0D 0A 可能真的有助於避免 fso 把 0A 吃掉? ==> Bingo!! 完全正確。
        [x] 這下子 GitHub 的 CRLF 問題又陷入膠著了... 因為 fso 一讀進來單 LF 0A 的檔案就已經亂了。
            ( ) 看來 jeforth.f quit.f 等, 用 fso 讀進來的 module 都不能用 utf-8 而必須用 Big5
            (x) 主要檔案不要用中文。<---- 寫個程式來檢查 "string".charCodeAt(i) > 128 的就可能
                是問題。
                code ansi? ( string -- T/F ) \ The string is all ANSI characters? (code < 128)
                    var ss = pop(), flag = true;
                    for (var i=0; i<ss.length; i++) {
                        if (ss.charCodeAt(i) > 128) {
                            flag = false;
                            type(ss.slice(i,i+20+'\n'));
                            i += 20;
                        }
                    }
                    push(flag);
                    end-code
            ( ) 自動挑選正確編碼的 jeforth.js e.g. jeforth-big5.js, jeforth-utf8.js 跟相關檔案。
            ( ) 乾脆不 support Windows 7 以前的版本, 就可以不用 fso 直接都用 ado。
            [x] [Download Zip] extract 之後用轉碼程式先處理過, 很簡單:
                ~\jeforth.3we>for /R %G in (*.*) do c:\your-path\bin\unix2dos.exe "%G"

[ ] jeforth.3hta 從 DOS box 下執行當然沒問題, 但是從 PowerShell 下執行就會有些 wsh.f 的 selftest 會過不了。
    值得研究。

[ ] ie.f , Windows 10 , observed vm.g.ShellWindows.count==2 but both are null.

[ ] Jump into jsc due to error then ESC is to go on the ongoing process, ok fine but
    how to terminate the entire system? We need a jsc abort command?

[ ] A gh-pages branch which was created via GitHub .... don't know what it is for?
    --> Ah! it's the project's web page!! I should use it.

[ ] project-k/jeforth.js >> vm.major_version = 2; // major version, jeforth.js kernel version.
    --> 應該如實稱作 kernel_version 才對。

[ ] 'document' command 經常觸發 JavaScript 無名 error. 即使不用 ShellWindows 而直接取得 IE
    object 如下, 經實驗證實這個 object 跟 sw.item(i) 是同一個，所以對這個無名 error 無助。
    <js> var ie = new ActiveXObject('InternetExplorer.Application'); ie</jsV> onstant InternetExplorer.Application
    ==> 先嘗試 Chrome automation
    ==> Try autoit
    ==> Try jeforth.3wsh

[x] 16:36 2015-11-09 Study how to publish jeforth.3htm directly from GitHub through rawgit.com.
    16:43 2015-11-09 It really works! Both baby.html and sample.html
        http://rawgit.com/hcchengithub/project-k/master/baby.html
        http://rawgit.com/hcchengithub/project-k/master/sample.html
    [x] How to make a release, so as to try rawgit
        Releases 有專門一群說明點  https://help.github.com/categories/releases/
        原來 release 是從 GitHub.com 網頁上執行的,所以可以提供 binary 檔。
    ** rawgit 使用方法 **
    到了 rawgit.com home page 它直接讓你輸入[Paste a GitHub file or Gist URL here].
    如果輸入的位址是錯的，它不會有反應; 必須輸入對了,底下的測試版、production 版 URL
    才會自動反映出來。正確的輸入內容是從 GitHub.com 網址列抄過來的
        https://github.com/hcchengithub/project-k + '/master/' + 'filename'
    所組成。我把 project-k release 了一版 1.0 而 1.0 就是這版的 release_name 也就是
    branch name.
    輸入：
        "https://github.com/hcchengithub/project-k/master/1.0/baby.html"
    得到：
        "http://cdn.rawgit.com/hcchengithub/project-k/master/1.0/baby.html"
    但是這個不能用，要把 master 刪掉才可以, 變成：
        "https://cdn.rawgit.com/hcchengithub/project-k/1.0/baby.html"
    就好了!

[ ] 問題是從 rawgit.com 或 cdn.rawgit.com 上執行都很容易出現 jquery loading 失敗。
    Ctrl-Enter 無效時，進 F12 debugger 即見該 error message。Refresh 幾次就會成功。
    [ ] 想讓 index.html 檢查看 jquery 有沒有 load 成功。
    [ ] 研究為何有這種情形?
    ==> 寫一個簡單的 index.html 裡面就是 include jquery 跟檢查。看能不能複製問題出來。
    ==> https://rawgit.com/hcchengithub/jeforth.3we/develop/index.html?nop
        run 得很好。

[x] 試跑 solar-system.f 剪貼上去的 code 好像內碼有問題。
[x] only cloth.f 的時候, words, help 等只列出 cloth.f。但是 forth words 總是常駐在
    order 裡面。為了避免礙眼。
    [x] re-design rescan-word-hash, let it always read 'forth' first even when it's
        not in the 'order' list.
    [x] 執行 code 的時候觸發 js error, 這時候 compiling 的質居然是 "code"
            reDef code
            JavaScript error on word "code" : Unexpected token ]
            reDef cr
            *** Start self-test
        ==> 我猜是 bb 裡面有問題。把 bb 拿掉部分看 error msg 還在不在?
        ==> 果然就是這行的問題。
            wordhash[words[v][i].name] = words[v]][i];
            靠! 多了個 ] ------------------------^
        結論是, code word 裡面要是有 typo 會有 error on word "code" 症狀會變成
        定義中的 word 的 xt 變成前一個 word 的，而且該 error 觸發 Chrome F12 debugger 時，
        compiling 的值是個字串 "code"。

[x] hcchen5600 2015/11/13 10:46:37
    [solar-system.f] cloth.f 改寫,變成教材。

[x] backspace, Esc, Enter, arrow keys 等這些 hotkey 都應該只侷限在 inputbox 裡面,
    以避免干擾其他操作。

[x] 撰寫 cloth.md / cloth.html ==> tutor-cloth.f is better !!

[x] up/down 直接 recall history 有點煩, 改成 default disabled。

[x] 合併 [if][else][then][begin][again][until][for][next] 成對應的 if else ... etc
    想想挺困難。不如設計一個 run: 來假裝它可以 run interpret mode 而其實
    只是把 if else then begin .. etc 等改成對應的 [if][else][then][begin] 再
    交給 interpreter 執行。
    ==> run: and (run:)

[x] recall all vocabulary after only
    get-vocs js> tos().length [for] js> tos().shift() . cr [next] drop
    get-vocs js> tos().length [for] js: order.push(tos().shift()) [next] drop rescan-word-hash
    ==> "not-only" command recalls all loaded vocabularies.

[x] vm.cv <--- is an inappropriate thing, should be vm.g.cv if it has to be
    a global, and it is.
    So cv will be a value, a global too.
    ==> this is a bigger effort to modify all existing .f files. Done.

[ ] This info seems a better way for ie.f to modify a web page
    https://msdn.microsoft.com/en-us/library/jj733572.aspx#Date

[x] 寫個 word 來 escape  <code> ... </code> 裡的 HTML tag signs.
    o 規定 <code> ... </code> 不能 nested, 而且要依序出現。
    o <code>...</code> 是最裡面的, 即 <pre>..</pre> 要包在外面。
    ==> code <code>escape ( "raw string" -- "cooked string" ) \ Escape '<','>' in <code> tag.
    ==> In unindent.f now

[x] tutor-cloth.f source code 本身的美感略顯不足，因為 <pre> 區段不能 indent。
    構想是：設計一個 <unindent>...</unindent> tag 用來把其中的整段落往左 shift 到有某一行
    撞到左邊了為止。Tab \t 要先換成 spaces 幾個? 可調。
    ==> unindent.f done

[x] 發現 HTA Regular Expression 一個問題 (Windows 10 !!)
    :> replace(/\/\*(.|\r|\n)*?\*\//mg,"") \ 清除註解。這樣寫在 Chrom OK, 在 HTA 不行。
    :> replace(/[/]\*(.|\r|\n)*?\*[/]/mg,"") \ 要改成 "[/]" 來表達 "/" 不能用 "\/"。
    [x] Test tutor-cloth.f on Chrome and IE after modification --> [/] works fine.

[x] contentEditable 這麼好用, 真希望 jeforth.3htm 可以在 local 直接跑，而不必再透過 local server。
    複習一下，Chrome 卡在這裡:
    XMLHttpRequest cannot load file:///C:/Users/hcche/Documents/GitHub/jeforth.3we/f/jeforth.f?text.
    Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension,
    https, chrome-extension-resource.
    ---
    問 Yap ,
    [17:14:05] h.c.chen 陳厚成: jeforth 不透過 local server 真的就不能跑嗎? 卡在 XMLHttpRequest cannot load file ... ; Cross origin requests are only supported for protocol schemes ... ,
    [17:16:20] h.c.chen 陳厚成: 因為用 JQuery 的 $.get 讀檔案, 例如 jeforth.f 就不行了。
    [17:18:16] h.c.chen 陳厚成: ( 在網頁上跑的 jeforth )
    [17:36:12] h.c.chen 陳厚成: 可能找到答案了
    http://stackoverflow.com/questions/8449716/cross-origin-requests-are-only-supported-for-http-but-its-not-cross-domain
    http://chrome-allow-file-access-from-file.com/
    http://joshuamcginnis.com/2011/02/28/how-to-disable-same-origin-policy-in-chrome/
    我試試看. . . . .
    [17:39:26] h.c.chen 陳厚成: 哈! 真的可以。 Chrome 有 command line switch :  --allow-file-access-from-files
    --
    Answered
    [18:04:40] yap @ Forth: file:// protocol 只能讀  .js  html, 圖片及聲音
    [18:05:07] yap @ Forth: 除非透過 html file api ，但多了一個開檔的動作
    [18:05:21] yap @ Forth: 選檔必須使用者手動
    --
    先把 執行中的 chrome process 清乾淨，然後用
        chrome.exe --allow-file-access-from-files
    執行, 如此 $.get 可以讀 local files. 我試了讀 .js 檔可以。
    Windows 10, Chrome 版本 46.0.2490.86 m
    --
    MS Edge seems has the same switch : https://social.technet.microsoft.com/Forums/en-US/8128064a-9bad-4cb3-aedc-b8a183e344f8/microsoft-edge-how-to-allowfileaccessfromfiles?forum=win10itprogeneral
    But it doesn't work on my desk at home:
    C:\Windows\SystemApps\Microsoft.MicrosoftEdge_8wekyb3d8bbwe>MicrosoftEdge.exe --allow-file-access-from-files file:///c:/Users/hcche/Documents/GitHub/jeforth.3we/index.html
    --
[x] 爽哥 的 cloth_sam.f 革除原版不像 forth 的缺點。
[x] shift-F2 in trouble on 3hta. --> fixed

[x] Bug ! both HTA and Chrome, why I didn't find this before?
    ==> : test <text> /*aabbcc*/ </text> ;
        : test s" /*aabbcc*/" ;
        JavaScript error on word "literal" : Invalid regular expression: missing /
    ==> 簡化到用 F12 debugger 即可複製：
        ntib=0;tib=" /*aabbcc*/ </te>";nexttoken("</te>") --> "/*aabbcc*/ " correct
        ntib=0;tib=" /*aabbcc*/ </text>";nexttoken("</text>") --> 也沒錯呀!
    ==> Strange, happened on 3htm Chrome.
    ==> 表示 <text> 在 compiling state 有問題, and it's nothing in <text> because s" also
        has the problem.
    -->
        : s"  ( <str> -- str ) \ Get string down to the next delimiter.
            char " word js: debugger compiling if literal then BL word drop ; immediate
        : test ( [ js: debugger ] ) s" /*aabbcc*/" ;
    --> @ bp, stack=["/*aabbcc*/"]
        tib = s" /*aabbcc*/" ; '
        ntib ----------------^
        compiling : true
    --> 看到問題了! literal 會把常數用 /* */ 表達在該 function 裡，該常數
        又是 /*...*/ 則結尾的 */ 就會被認走!! 結果出問題了!
        > : test s" /*aabbcc*" ;
        > see test
        -------- Definition in dictionary --------
        01529: function (){push(literal)/*(string)/*aabbcc* */} (function)
        01530: RET (null)
        ---------- End of the definition -----------
    --> 只有當含有 */ 的 string constant 被 literal compile 進 dictionary 時才有這個問題。
    [x] 考慮 string constant 可能很長, literal 用 /*...*/ 顯示的方式還要再考慮周詳一點。
        例如長字串要截斷，碰到 */ 要改成 *_/ 即可避免 .. Bingo!!

[x] I was working on git.f, trying to make the article section more sexy.
    Now at the 5.5 section.
    --> fix shift-F2 hang issue on 3HTA first.
        js: document.designMode="on" <=== 3HTA 一下就出問題, 合理。
        js: outputbox.contentEditable="true" <== 3HTA 真的只針對 outputbox, Chrome 全部都 editable!
    --> 3hta 反而好!!

[x] 照 爽哥 建議增加 tutor-cloth.f 畫線的例子。
    hcchen5600 2015/12/03 17:09:31

[x] This help message is wrong now?
    execute ( Word|"name"|address|empty -- ... ) Execute the given word or the last() if stack is empty. (object)
    ==> 9/16'16 done

[x] Many older forth basic words appear stupied after having pop() tos() ...etc.

[x] 用 rawgit.com 直接跑 GitHub repo 只有 Chrome and Android built-in browser 能 run,
    IE/Edge, and Firefox are facing the Access-Control-Allow-xxxxx 的問題。
    可能是因為透過 rawgit.com 去跑 GitHub repo 觸動跨境 access 的安全機制之故。
    ==> study https://pages.github.com/
    --> 9/16'16 tried https://rawgit.com/hcchengithub/jeforth.3we/develop/index.html on
        IE 11/Windows 10, really failed, as shown below:
        --- jeforth.3htm error message at beginning ---
        Error! Failed to read f/jeforth.f
        --- F12 error messages ---
        Navigation Event Separator
        DOM7011: The code on this page disabled back and forward caching. For more information, see: http://go.microsoft.com/fwlink/?LinkID=291337
        index.html
        HTML1300: Navigation occurred.
        index.html
        SCRIPT7002: XMLHttpRequest: Network Error 0x80070005, Access is denied.
        index.html
        SCRIPT7002: XMLHttpRequest: Network Error 0x80070005, Access is denied.
        index.html
        SCRIPT7002: XMLHttpRequest: Network Error 0x80070005, Access is denied.
        index.html
    --> 13:35 2016-11-26 Firefox's error messages
        Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://raw.githubusercontent.com/hcchengithub/jeforth.3we/develop/3htm/f/readtextfile.f?text. (Reason: CORS preflight channel did not succeed).(unknown)
        Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://raw.githubusercontent.com/hcchengithub/jeforth.3we/develop/f/jeforth.f?text. (Reason: CORS preflight channel did not succeed).(unknown)
        Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://raw.githubusercontent.com/hcchengithub/jeforth.3we/develop/3htm/f/quit.f?text. (Reason: CORS preflight channel did not succeed).(unknown)
    ==> use http://cdn.rawgit.com/...   is the solution. 13:11 2017-01-08

[x] jeforth.3we 可以直接當成 editor 用, 寫筆記, 寫文章皆可。
    --> See YNote: "在 Web browser 上直接編輯網頁內容"
    --> Edit by Chrome, press Ctrl-S and save as "完整的網頁" is profect.
        IE and Edge can only save the original content like Chrome's "僅限網頁的HTML部分"。
    --> jeforth.3htm 下這一行即可單獨弄出一塊 editable 的 <div> 區域。
        s" body" <e> <div id=article contenteditable='true'>--edit me--</div></e>
    --> 更妙的是
        js> outputbox.contentEditable \ ==> inherit (string)
    [x] js: outputbox.contentEditable=true  <-- 不妨加入 shift + {F2} editMode ... Done!
    --> 曾有過用 project-k 做成獨立的 template.html 實現此構想。直接執行:
            chrome --allow-file-access-from-files
        應該更好。有充分的資源可用。
    ==> now, ls.f Edit Box

[x] 應用 chrome --allow-file-access-from-files 之前要把所有執行中的 chrome.exe 都停掉。
    不如來寫一個命令叫做 powoer-chrome (引用 power user 的用法) 來一口氣完成。
    : power-chrome ( -- ) \ Run chrome that

[x] Alt-Up/Down should not recall multiple-line.
    hcchen5600 2015/12/04 10:34:22

[x] bug, constant name 若出現 " 就會出問題, 連帶使 value 也依樣。Variable 倒是 OK 的。
    這個問題在 constant 的 help 裡早就提過了! 我一點印象也沒有。
    解法應該是： replace(/"/g,"\\\"") ---> Bingo!!
    to command 也有同樣的問題 --> Yes.

[/] vm.g.variable 應該是 vm.g.voc.variable 才對,
    或者各自掛到 vocabulary object 底下去才對。
    --> 這個問題跟 forth 本身把所有的 variable constant value 都當成 global 所造成的
        隱憂差不多，頂多多一點。
    [/] 讓 value constant 檢查 the name 是否已經存在。
    [/] 當 selftest 時，把 ReDef 當作 big warning 看待，需要 user confirm。
    ==> automatically no longer a question after private supported.

[ ] The template.f project ==> modify.f

[x] Bug found!! 這個難解的問題已經解了, 但留有較罕見的情況仍有問題，如下。
    > : test js> "123;" ;
    JavaScript error on word "jsFunc" : Expected ';'
    --> ok with js: "123;", only js> has the problem.
    --> jsFunc is for js> that push the value of the last statement.
        Problem is that the last statement can be a string literal that
        includes ';' which is not an end of a statement!
        So, how to isolate *the last statement* is the challange. My recent  jsFunc is
        not good enough for this case. -- hcchen5600 2015/12/04 20:40:13
    --> Not only in string but also in RegEx like this,
            js> tos(1)[2].replace(/;/,"__SeMiCoLoN__")
        the /;/ makes the same problem!!
    [x] Idea of the solution
        研究如何把出現在 jeforth code word definition 裡面的
        JavaScript source code 當中的 "..;.." 分號都置換成 __SeMiCoLoN__
        以避免干擾最後一條 statement 的判斷。
        --> Find all ['"/].;.;.['"/] literals, replace ';' to __semicolon__
        --> Do the existing process to isolate the last statement.
        --> Replace __semicolon__ back to ';' for both portion.
        ==> Bingo!!
        [ ] Escape characters are still a problem.
            "ab\"cd" is ab"cd
            Also /...\/.../ or /...[/].../ too.

[x] 重新考慮要不要這個東西 js: jump2endofinputbox.click(); contentEditable 之後很煩。
    --> Done.

[x] 立志要用 jeforth 來編輯 log.txt
    js> vm.plain(vm.g["log.txt"]) js: article.innerHTML=pop()
    [x] CSS tab-size IE/Edge 皆無效, 3hta either . . .
        證實: char log.html readTextFile js: article.innerHTML=pop()
    ==> ls.f Edit Box is now good enough

[x] Ctrl-F2 之後,把 caret cursor 所在的 element 改成 command-line style.
    \ caret at the target position
    \ press Ctrl-F2
    \ you get a #text node ce (current element)

    [object Text] bla bla bla...

    > The #text node's parentNode ==> char .. (ce)
    > ce
    [object HTMLParagraphElement] innerHTML=bla bla bla
        0 : [object Text] bla bla bla...
    --> In this case, it's a P node.

    \ Now we have the target element.
    \ Then let's create a table node. 我需要取得最內層之 <code> 的 ID 希望可以用
    \ 暫時的 mytemp 用完就把它取消掉，能這樣做就簡單了。應該用 removeAttribute() 可
    \ 以做到。

    \ 試試看 element ID 可不可以拿掉？ 答案是可以的。
    \ element :: removeAttribute("id") 即可。

    > <o> <h1 id=abc>xxx</h1></o> constant xxx
    > xxx :> outerHTML ==> <h1 id="abc">xxx</h1>
    > xxx :: removeAttribute("id")
     > xxx :> outerHTML ==> <h1>xxx</h1>

    動手了：

    <o>
        <table class=commandline><td>
        <code id=tempid class=source>
        </code></td></table>
    </o> ( from )
    ce@ :> nodeValue js: tempid.innerText=pop()
    js: tempid.removeAttribute("id")
    ce@ :> parentNode replaceNode

    : change-to-code-style ( -- ) \ Change the ce@ to code style
        <o> <table class=commandline><td>
        <code id=tempid class=source>
        </code></td></table></o> ( from )
        ce@ :> nodeValue js: tempid.innerText=pop()
        js: tempid.removeAttribute("id")
        ce@ :> parentNode replaceNode ;

[x] jeforth 分析 考勤 刷卡紀錄 上班時數 分析
[x] private folder is a new project
    --> GitHub is not for private use unless pay the money. Use and Dropbox Yun.Baidu instead.

[x] 昨天忘了 sync GitHub at home. Today, in my office, I don't edit log.json and 3ce folder
    so as to remain easy-to-sync of the project. Like maintained by two different people on
    different topics.
    --> 照這樣安排只 click 一下 [Sync] 按鈕, 兩邊這樣都成功了。

[x] 如何把很大的檔案收一部分起來，以方便操作？ --> log.json 需要擴充。log.json 不能被 edit-zone
    取代，因為 outputbox 只接 log 起來太正點了 (ls.f has "snapshot" command now)。保留現有
    log.json 的 stack 架構, 但是擴充 random    access 的功能。讓它跟 outputbox 結合地更自然、更好用。
    ==> Done, ls.f Edit Box.

[x] words and help will list the exactly same word multiple times
    depends on the order list. Try not. Simply check the recent i and the order
    list if [i] appear earlier then skip it.
[x] words , help 取消 -N 把 -N 變成 default, 改用 -f 代表 fuzzy search 取代本來的 default。
    --> modify (words) in jeforth.f , 同時讓 -N (now default) 只列出最高 priority 的一個 word。
    --> Modified jeforth.f, easy. Try on 3ce host page ... fail at selftest. Skip it.
    --> 連 comments 都改好了. (words), (help), help in jeforth.f, voc.f, and platform.f.
[x] 寫 S7 方便改 keyboard registry 的命令。
    ==> registry.f , autoit.f 都可以 access registry, 但是要改 REG_BINARY for s7 keyboard
        re-layout 還是用 reg.exe 配合 export -> edit -> import 的方法, 3hta dos command can help.
        因為 REG_BINARY 問題太多。
    [x] Review registry.f, notes of S7 keyboard remapping. If only I can read registry through
        3hta then it's convenient enough.
    Conclusion is : run the 1 key and 5 key ~.reg files (attached below on this page) to remap
    the Acer S7 keyboard. 1 key is the Caps Lock changed to be Mute toggle. 5 keys are Caps Lock
    become 'delete', AltGr/Del become Home/End, Fn-Home/Fn-End become Pad-/Pad+ for Windows 10
    Zoom in and Zoom out. Refer to my Youdao YNote.
[x] 3ce Improve readTextFile
    : readTextFileAuto ( "pathname" -- "text" ) \ Read text file from jeforth.3ce host page.
            s" s' " swap + s" ' readTextFileAuto " + \ command line 以下讓 Extention page (the host page) 執行
            s" {} js: tos().forth='stopSleeping' js: tos().tos=pop() " + \ host side packing the message object
            s" " \ host commands after resume from file I/O

            <js> chrome.runtime.sendMessage({isCommand:true,text:pop()},
            function(result){push(result);execute('stopSleeping')}) </js>
            10000 sleep ;
    --> 複習: 14:06 2018-08-11 從被 attached 的 target page, hao123 繁簡轉換 page, 執行：
            char common.css readTextFile 
        果然讀到 jeforth.3ce folder 之下的該檔案。 --> 檢查 readTextFile (沒有尾綴 Auto) 的定義，只出現在 ce.f 裡的
        attach definition 裡。
    
[x] 3nw.bat js> 1000*60*60*2 nap include hibernatin.f
[x] Popup page can attach 3ce to target page now, so 3ce default tabid should be the 'active' tab.
    js: push({active:true}) tabs.query js> tos().length \ ==> 1 (number) must be only one
    js: push({active:true}) tabs.query :> [0] (see)
    --> modiyf ce.f tabid command --> ok now!
[x] 3ce attach works fine, but it has to check if the target page has been loaded!
    Experiment: 0 [begin] active-tab :> status . space 500 nap 1+ dup 100 > [until]
    --> Correct, get 3 complete in a row to make sure it's really completed. I saw a complete
        among "loading" that's why.
    --> works fine now.

[x] This line does not print 50 stars, unless remove the 'cr' Bug!!
    run: 50 for char * . cr next
    This is ok --> 0 [begin] char * . cr 500 nap 1+ dup 10 > [until]
    so [for] ... [next] in trouble? or run: for ... next in trouble?
    --> try 50 [for] char * . cr 50 nap [next] ----> it works fine!
    --> <text> 50 for char * . cr next </text> (run:) <--- works fine too!
    --> So, run: for ... next in trouble!
    ==> (run:) uses 'dictate()' to run the string, change to use 'tib.insert'.

    利用別的軟體來畫表格, 例如 excel 可能是最好的辦法。可以 copy-paste 給 3hta
    然後用 js> $('table')[0].outerHTML . 取得 HTML 放到 Notepad++ 去整理。

[x] forget to sync, now I have to use log.txt -- 15:02 2016/02/20
[x] Try Ctrl-Enter application, I already know textarea does not return correct element for
    anchorNode, how about other things? Try 3ce directly....
    返回本站首页hao123网址之家www.hao123.com
    To study
    > js> getSelection() tib. <--------- Alt-F2 gets the same result.
    js> getSelection() \ ==>  (object) inputbox, null
     OK
    > js> getSelection() tib.
    js> getSelection() \ ==>  (object) textarea, null
     OK

    textarea 內不管在哪裡 getSelection() 都是拿到最近的 div parent
    js> getSelection() js> getSelection()==pop() \ ==> true (boolean)
    js> getSelection().length .
    js> getSelection().anchorNode.outerHTML \ ==> <div id="console3ce" class="ce3"> ...

    Drag and drop a picture to 3ce outputbox ==>
    <div><img src="http://www.hao123.com/images/return.gif" width="60" height="30" alt="返回本站首页" border="0" data-pin-nopin="true"><img src="http://www.hao123.com/images/logo.gif" alt="hao123网址之家www.hao123.com" width="168" height="63" border="0" data-pin-nopin="true"></div>


[x] Now I hope that I can use some script in tr.table. So I can click and run scripts.
    That requires a Security Policy:
        Refused to execute inline event handler because it violates the following Content
        Security Policy directive: "script-src 'self' 'unsafe-eval'". Either the 'unsafe-inline'
        keyword, a hash ('sha256-...'), or a nonce ('nonce-...') is required to enable inline
        execution.
    But after added 'unsafe-inline' into "content_security_policy", reload manifest.json gets
    this error :
        嘗試安裝這項擴充功能時顯示警告訊息：
        Ignored insecure CSP value "'unsafe-inline'" in directive 'script-src'.
    So, the only way is to use a function directly.
    --> 奇怪了, 那 jeforth.3ce 已經在用的 script 是怎麼能跑的?
        --> inputbox 是收 element.onkeydown , defined in jeforth.3htm.js and platform.f
            只要不是 inline 形式的 onclick="blabla" 就可以了。(嗎)
        --> 那對 jeforth 很簡單哪! 先取得 element 再幫他掛上 element.onxxxx=function 即可。
            element.onxxxx=debugger; <--- Failed, 'degugger' unknown.
            element.onxxxx="dictate('blabla')" <--- no error, but element.onxxxx will be null.
            element.onxxxx=function(){debugger} <--- OK!! 'this' is the element.
            h1 :: onclick=function(e){dictate('.s')} <--- OK!!! it works fine.
    ==> 結論就是不要寫成 inline script 就行了, 那沒問題呀!
    --> See Ynote: jeforth.3ce let tr.table to have script, do-able!

[x] is#text? paste-string erase-#text-anchorNode
    ==> See Ynote: jeforth.3ce window.getSelection() 得到的 Selection object 是揮發性
        的！不能留下來以後用。

[x] project-k baby.html, sample.html 突然 run 起來之後 Ctrl-enter 沒有作用, F12 debugger 才看得見
    問題, 原來是 jQuery 掛不起來：
    Failed to load resource: net::ERR_NAME_NOT_RESOLVED http://ajax.microsoft.com/ajax/jQuery/jquery-1.11.2.js
    baby.html:48 Uncaught ReferenceError: jQuery is not defined
    這常有, 應該要有警告。
    這是 GFW 的問題, 透過 VPN 就好了。中國境內有沒有 jQuery 的 mirror?

[x] 14:21 2016-04-12 jeforth.3ce startup page to advertise itself. Use YNote directly.
    cls <o> <iframe src="http://note.youdao.com/share/?id=b76172957fccf6a35b31dd7936327c3f&type=note#/"
    name="An introduction to jeforth.3ce" align="center" width="96%" height="6800px"
    marginwidth="1" marginheight="1" frameborder="1" scrolling="Yes"> </iframe></o> er

[x] tutor-cloth.f console3we strange.
    [x] Improve the scrollto position.
    [x] Font size not consistant either.
[x] 'Edit box style' 這種東西實在太煩了, 到底為什麼 font size 怎麼都調不好。
    [x] RI: don't use absolute font-size like the 20px in common.css, it is exactly
        the root cause of this problem.
    --> js> $("style").length \ ==> 3
    --> js> $("style")[0].innerHTML
    --> The below study shows me the idea that a stand along style setting for font-size
        may be the solution.

        js> $("style")[0].outerHTML \ ==> <style id="commoncss">
            .console3we div , .console3we textarea {
                color:black;
                font-family: courier new;
                font-size: 40px; <========== pull this line along out of this tag
                padding:20px;
                word-wrap:break-word;
                border: 0px solid white;
                background:#F0F0F0;
            }

            .console3we textarea {
                width:99%;
                padding:4px;
                border: 0px solid;
                background:#BBBBBB;
            }
        </style> (string)

        js> $("style")[1].outerHTML
        \ ==> <style type="text/css">canvas{border:solid 1px #CCC}</style> (string)

        js> $("style")[2].outerHTML
        \ ==> <style id="ebstyle" type="text/css">
            .eb .box { width:90%; font-size:1.5em;  }
            .eb .box, .eb .ebhtmlarea { border:1px solid black; }
            .eb .ebtextarea { font-size:1.5em }
            .eb input { font-size:0.7em  }
            .eb p { display:inline; }
            .eb .ebname { font-size: 1em; }
            </style> (string)

        js> $("style")[3].outerHTML
        \ ==> <style id="styleTextareaFocus" type="text/css">.console3we textarea:focus {
                border: 0px solid; background:##E0E0E0;
            }</style> (string)
        *** If want to modify existing style tag, I have done that before!
            See flot.f "remove-backgroundColor-style" command that modifies common.css
            background color due to that flot.js does not work well with background color.

    [x] 乾脆把 font-size remove from the above [0] style section. The question of "what
        is the "1.1em" font size refer to
        [x] remove font-size from jeforth.3we/common.css
        [x] also change font-size in 3htm/ls.f, which is now refer to default font-size,
            to 1.1em that works fine now.
        --> it works!!
        --> so the default font-size is good enough. <=== True !!!

[x] 3nw's Ctrl-{+}, Ctrl-{-} font size control does not work.
    1) the two colon words' logic were wrong!! --> fixed
    2) {pad +} and {pad -} and their normal equivlants are of different keycode, so
        3htm/platform.f needs to add two more keys to allow notebooks (w/o numeric pad)
        to press Ctrl-plus and Ctrl-Minus.
    Sh**t! this problem has been there for a long time !!!

[x] Working on jeforth.3we\3hta\1.bat to leverage jeforth.hta for install.bat automation
    for all applications.
    --> This is an example of the batch program :
        : @rem ;
        @rem ' \ dup alias echo dup alias @echo dup alias @echo. dup alias @goto dup alias :end alias jeforth.hta
        @echo.
        @echo Executing %~nx0 . . .
        @goto batch
        \ --------------- start jeforth code ----------------------
        cls <o> <h1> Hello world! from jeforth</h1></o>
        <o> <h3> ---- wait 5 seconds ----</h3></o>
        5000 nap

        bye \ TOS will be the errorlevel returned to DOS
        \ ---------------- end jeforth code -----------------------

        :batch
        @rem ---------- start batch code ---------------------------
        jeforth.hta include %~nx0 \ include the batch program itself
        @if %errorlevel% GEQ 1 goto ERR
        @rem ------------ end batch code ---------------------------

        @goto END
        :ERR
        @echo !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        @echo  jeforth return an error code : %errorlevel%
        @echo !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        pause
        :END
    --> done! jeforth.3we/setup.bat setup all applications.
[x] setup.bat should include the private folder
[x] include command may do nothing if the ~.f module was existing. This causes problem
    if word reDef is expected. For example, many-clocks.f uses 'save' command which is
    defined in canvas.f module. When include many-clocks.f the 'save' command has been
    reDef by ls.f and therefore running many-clocks.f will be a mess of failures. The
    solution is that 'include' command should move the target module to the top instead
    of doing nothing when it's existing.
    --> Not 'include' but 'source-code-header' who skip existing vocabulary.
    ==> done, now include command will always prioritize the word-list even if it has
        included already. It's not NOP anymore. 13:10 2017-01-08

[x] ls.f autoexec has a problem. If it include ~.f which uses source-code-header
    that will cause a self-test nested structre problem. Because autoexec is added to
    the end of tib by tib.insert. But included ~.f's are spposed to be completed before
    the ending self-test structure to balance the nested self-test structure.
    To avoid the problem, ~.f inclded in autoexec should not use source-code-header.
    How to debug this issue? Use this line:
        "" value tib-at-the-point js: vm.g.tib=tib.slice(ntib)
    and check tib-at-the-point

[x] Change the self-test design of jeforth.3we. No command line do nothing.
    --> Yuan-Yuan Teng's experience made me considered this modification. But actually
        the problem was now RI, when a computer is off line then 3HTA selftest will fail
        at printIPAddress. Simply remove the test item has temporary skipped the problem.
        13:07 2017-01-08

[x] support 'private' command to hide private words in the vocabulary
    Forth 好用, 但是所有的 word 都是 global 令人想念有 local 的環境。應用 jeforth 用久了, 這
    個念頭越來越鮮明。要定義一個新的 word 時總覺得有點沉重，怕與過去或未來的 word 撞名。

    希望 word 都是 private 只見於同一個 context 之內, 這樣寫起程式來就可以放心地重複定義新 word
    不怕撞名。偶而要用到某個 vocabulary 裡的 private word 時，切 context 即可，或把它 export 出來。

    jeforth 的 word 都是 object, 屬 private 或 global 似乎加一個 property 標註一下即可。

    jeforth 的 interpret state 以及 compiling 時搜尋參考到的 word 是透過一個 hash table 去找的。
    要不要讓它進這個 hash table 應該就是這個 word 是否 global 了。每次重整 hash table 時看看
    每個 word 的 exported property 以及當時的 context 兩點即可決定。就怕會不會捅出更難收拾
    的複雜結果？

    應該有人做過了?

    請問像 Win32forth 這麼龐大，他對撞名有何對策?

    vocabulary 是目前習見的辦法。然而有了 vocabulary 還是很想念 private (或 local) 環境。
    我會把 private 在 jeforth 上實現出來, private 是個 word, 動詞, 意思是把 last word 設
    定成 private。實作上就是在這個 word object 的 private property 打成 true。那麼當它所
    屬的 vocabulary 不是 context 時就看不見它。不是完全看不到, 而是要把它所屬的 vocabulary
    切成 context 才看得到，即使其 vocabulary 已經在 order 裡也還是看不到。相較於沒有
    private 觀念的 forth 系統—只要是名列 order 內的 vocabulary 他們所有的 word 都看得到—
    有所不同。private 是針對個別 word 的設定, 類似 immediate, compile-only 之類。我們還可
    以加上個系統層面的 variable 用來當總開關—稱作 private-support 吧 — 當關掉不 support 時
    , 就等於是平常的 forth 系統—通通都是 global。如此就不怕引進 private 會引起甚麼想不到的
    問題了。

    code private  ( -- ) \ Make the last new word invisible out of the vocabulary
                    last().private=true
                    end-code

    code rescan-word-hash ( -- ) \ Rescan all word-lists in the order[] to rebuild wordhash{}
                    wordhash = {};
                    scan_vocabulary("forth"); // words in "forth" always available
                    for (var j=0; j<order.length-1; j++) scan_vocabulary(order[j],false); // 越後面的 priority 越高
                    scan_vocabulary(order[order.length-1],true); // The context
                    function scan_vocabulary(v,no_private) {
                        for (var i=1; i<words[v].length; i++){  // 第零個是0,一律跳過。
                            // skip the last() to avoid unexpected 'reveal'.
                            if (compiling) if (last()==words[v][i]) continue;
                            if (no_private || !words[v][i].private) wordhash[words[v][i].name] = words[v][i];
                        }
                    }
                    end-code

[x] change the include design.
    : sinclude      ( "pathname" -- ... ) \ Lodad the given forth source file.
                    dup readTextFileAuto ( pathname file )
                    \ js> tos().indexOf("-=e"+"Of=-")!=-1 if ( pathname file )  *debug* 111>
                    \   \ EOF is not allowed in ~.f module
                    \   s" Abort! EOF mark '-=eOf=-' is reserved but found in " + js> tos(2) + "msg"abort
                    \ then ( pathname file ) *debug* 222>
                    <js> ("\n\\ -=pathname[" + pop(1) + "]pathname=-\n" + pop())</jsV> ( file' )
                    \ <text>
                    \   \ 跟 source_code_header 成對的尾部
                    \   <selftest>
                    \   js> tick('<selftest>').masterMarker tib.insert
                    \   </selftest>
                    \   js> tick('<selftest>').enabled [if] js> tick('<selftest>').buffer tib.insert [then]
                    \   js: tick('<selftest>').buffer="" \ recycle the memory
                    \ </text> s" \ --E" + s" OF--" +
                    \ swap  ( -- code file )
                    \ <js> // 把 - - EOF - - 之後先切除再加回，為往後的 source code header, selftest 等準備。
                    \   var ss = pop();
                    \   ss = (ss+'x').slice(0,ss.search(/\\\s*-=eOf=-/)); // 一開始多加一個 'x' 讓 search 結果 -1 時吃掉。
                    \   ss += pop(); // Now ss becomes the TOS
                    \ </jsV> *debug* 444>
                    <js> var ss=pop();(ss+'x').slice(0,ss.search(/-=eOf=-/))+'\n\\ -=eOf=-\n'</jsV> \ The last \n 避免最後是 \ comment 時吃到後面來
                    tib.insert ;
                    /// Add -=pathname[pathname]pathname=- and cut after -=eof=-

    \ developing new include and friends

    char -=EOF=- ( eof ) <js> (new RegExp(tos()))</jsV> ( eof /eof/ )
    js> ({regex:pop(),pattern:pop()}) constant EOF // ( -- {regex,pattern} ) End of file pattern and RegExp

    : sinclude      ( "pathname" -- ... ) \ Lodad the given forth source file.
                    dup readTextFileAuto ( pathname file )
                    <js> ("\n\\ -=pathname[" + pop(1) + "]pathname=-\n" + pop())</jsV> ( file' )
                    <js> var ss=pop();(ss+'x').slice(0,ss.search(vm.g.EOF.regex))+'\n\\ '+vm.g.EOF.pattern+'\n'</jsV>
                    \ The last \n 避免最後是 \ comment 時吃到後面來
                    tib.insert ;
                    /// Add -=pathname[pathname]pathname=- and cut after -=EOF=-

    : include       ( <filename> -- ... ) \ Load the source file if it's not included yet.
                    BL word sinclude ; interpret-only

    "" value TIB
    0  value  nTIB
    : source~
        js> tib.slice(ntib).indexOf(vm.g.EOF.pattern) ( ieof )
        dup -1 = ?abort" Error! EOF mark not found." ( ieof )
        js> ntib + ( ieof ) \ insert selftest section tail here
        js> tib.slice(ntib,pop()) ( tib[ntib ~ before EOF] ) \ cut after EOF
        <text>
            \ 跟 source_code_header 成對的尾部
            <selftest>
            js> tick('<selftest>').masterMarker tib.insert
            </selftest>
            js> tick('<selftest>').enabled [if] js> tick('<selftest>').buffer tib.insert [then]
            js: tick('<selftest>').buffer="" \ recycle the memory
        </text> ( tib[ntib ~ before EOF] code ) + ( tib[ntib ~ before EOF]+code )
        s" \ " EOF :> pattern + js> '\n' + + ( tib[ntib~beforeEof+code+EOF] ) \ EOF mark appended back
        js> tib.slice(0,ntib)+'\n' swap + js: tib=pop() ;

                    <text>
                        ?skip2 -=EOF=- \ skip it if already included
                        dup .( Including ) . cr char -- over over + +
                        js: tick('<selftest>').masterMarker=tos()+"selftest--";
                        also forth definitions (marker) (vocabulary)
                        last execute definitions
                        <selftest>
                            \ setup marker of this module, run this marker to forget everything back to here.
                            js> tick('<selftest>').masterMarker (marker)
                        </selftest>
                    </text> swap + ( tib_a' )
                    js> tib to TIB js> ntib to nTIB *debug* 11>
                    lastIndexOf()

                    find the eof index,
                    <text> 11 33 44 -=eOf=- 44 55 66 </text> :> slice(3).indexOf("-=eOf=-") tib.
                    new RegExp(pattern, attributes);
                    <js> (new RegExp("pattern","img"))</jsV> \ ==> /pattern/gim (object)

    : source-code-header ( -- ) \ The source-code-file.f header macro
                    <text>
                        ?skip2 -=EOF=- \ skip it if already included
                        dup .( Including ) . cr char -- over over + +
                        js: tick('<selftest>').masterMarker=tos()+"selftest--";
                        also forth definitions (marker) (vocabulary)
                        last execute definitions
                        <selftest>
                            js> tick('<selftest>').masterMarker (marker)
                        </selftest>
                    </text> tib.insert ;
                    /// skip including if the module has been included.
                    /// setup the self-test module
                    /// initiate vocabulary for the including module

    \ developing new include and friends

    char -=EOF=- ( eof ) <js> (new RegExp(tos()))</jsV> ( eof /eof/ )
    js> ({regex:pop(),pattern:pop()}) constant EOF // ( -- {regex,pattern} ) End of file pattern and RegExp

    : sinclude      ( "pathname" -- ... ) \ Lodad the given forth source file.
                    dup readTextFileAuto ( pathname file )
                    <js> ("\n\\ -=pathname[" + pop(1) + "]pathname=-\n" + pop())</jsV> ( file' )
                    <js> var ss=pop();(ss+'x').slice(0,ss.search(vm.g.EOF.regex))+'\n\\ '+vm.g.EOF.pattern+'\n'</jsV>
                    \ The last \n 避免最後是 \ comment 時吃到後面來
                    tib.insert ;
                    /// Add -=pathname[pathname]pathname=- and cut after -=EOF=-

    : include       ( <filename> -- ... ) \ Load the source file if it's not included yet.
                    BL word sinclude ; interpret-only

    : prioritize ( vid -- ) \ Make the vocabulary first priority
        js> order.indexOf(tos()) ( vid i )
        js> tos()==-1 ?abort" Error! unknown vocabulary." ( vid i )
        js> order.splice(pop(),1);order.push(pop()) ;
        /// works fine!

    \ Get .f module file name left by include command
    : get-module-name ( -- "name" ) \ include command inserts it before ntib
        char -=pathname[ js> tib.slice(0,ntib).lastIndexOf(tos()) ( pattern i )
        dup -1 = ?abort" Error! ~.f pathname start mark not found." ( pattern i )
        swap :> length + ( i0 ) char ]pathname=- ( i0 pattern )
        js> tib.slice(0,ntib).lastIndexOf(pop()) ( i0 i )
        dup -1 = ?abort" Error! ~.f pathname end mark not found." ( i0 i )
        js> tib.substring(pop(1),pop()) ;

    : header ( -- 'head' ) \ ~.f common header
        EOF :> pattern <text>
            \ ~.f common header
            ?skip2 _eof_ \ skip it if already included
            dup .( Including ) . cr char -- over over + +
            js: tick('<selftest>').masterMarker=tos()+"selftest--";
            also forth definitions (marker) (vocabulary)
            last execute definitions
            <selftest>
                js> tick('<selftest>').masterMarker (marker)
            </selftest>
        </text> :> replace("_eof_",pop()) ; private

    : tailer ( -- 'tailer' ) \ ~.f common tailer
        <text>
            \ ~.f common tailer
            <selftest>
            js> tick('<selftest>').masterMarker tib.insert
            </selftest>
            js> tick('<selftest>').enabled [if] js> tick('<selftest>').buffer tib.insert [then]
            js: tick('<selftest>').buffer="" \ recycle the memory
        </text> ; private

    : source~
        \ Check if the module is included already
        get-module-name ( fname ) dup (') ( fname w )
        if  \ already included ( fname )
            *debug* 456> prioritize
        else
            \ not included yet ( fname )
                drop
            \ cut after EOF
                js> tib.slice(ntib).indexOf(vm.g.EOF.pattern) ( ieof )
                dup -1 = ?abort" Error! EOF mark not found." ( ieof )
                js> ntib + ( ieof ) \ insert selftest section tail here
                js> tib.slice(ntib,pop()) ( tib[ntib ~ before EOF] )
            \ append the tailer
                tailer + ( tib[ntib ~ before EOF]+tailer )
            \ append the EOF
                s" \ " EOF :> pattern + js> '\n' + + ( tib[ntib~beforeEof+tailer+EOF] )
            \ wrap up the tib
                js> tib.slice(0,ntib) swap + js: tib=pop()
                header tib.insert
        then ;

[x] Used tib is not reliable, the -=pathname[name.f]pathname=- mark left by include
    command is not reliable either. So, sinclude command should save the pathname
    itself or use the old way like source-code-header does that requires the module
    name.f given explicitly.

[x] I am warrying about the nested ~.f modules. An included module is to be tib.inserted
    to the position of ntib. The process should not hurt the original tib.
    My sinclude command does it well. <--- OK.
    [/] But source~ should insert the header and tailer into the right place or split tib
        into 3 pices [used][ntib~EOF][after EOF] is also a method candidate.

[x] My recent modifications on sinclude to support private words also caused this problem.
    I am not so sure why the modification causes this problem, how ever, jquery defer is not
    needed any more so I have fixed it by include jquery in jeforth.hta. The error message was:
    '$' is undefined. So jQuery did not included correctly? --> jeforth.hta this line:
        if ($(inputbox).is(":focus")) kvm.scroll2inputbox();
    in kvm.forthConsoleHandler() caused the problem. Because jquery was not included yet.
    Defer jquery to jquery.f was for Windows 7. Now it's not necessary. --> do it now! include
    jquery in jeforth.hta. --> done. Seems easy. Include jquery in jeforth.hta. Move back
    vm.plain, vm.type, vm.forthConsoleHandler from jquery.f back to jeforth.hta. That's all.


[x] try 3nd ... failed too after the recent modification on rescan-word-hash to support private
    that has caused the bug of accessing order[-1] which is of course undefined:
    JavaScript error on word "rescan-word-hash" : Cannot read property 'length' of undefined
    --> Try 3nw with f12 debugger ... 3nw and 3htm no problem <-- [x] strange, should have the same problem.
    --> Root cause is: after the 'only' command, order array become 0 length but words in
        forth vocabulary are still visible because the rescan-word-hash command always scan
        forth word-list. 'only 'clears the order array may be a mistake, should preserve forth
        word-list <-- Yes! according to ANSI : "Set the search order to the implementation-defined
        minimum search order." which is to have 'forth' at least.
    --> Modify the definition of 'only' then the rescan-word-hash command can be simplified.
    --> ok now.

[x] project-k jeoforth.js has a variable 'context'. It is actually the order[order.length-1]
    so why need 'context'? --> Because ANSI or eforth has it. --> let it be.

[x] 3hta can run, 'including wmi.f' and stop. Caused by my recent modifications on sinclude?
    --> use 123.f new sinclude, source-code-header then problem gone. But I found html5.f
    is being included multiple times! --> vb.f too, so source~ is in trouble. --> include 123.f
    before include html5.f see see --> shit, vb.f needs html5.f so it does! --> wsh.f includes vb.f
    again too. --> ok now.

[x] Make sure new source-code-header can handle nested include ... ok now.

[x] See code word don't show the toString method.

[x] words and help do not list private words by default. [/] pattern '*' to show all.
    \ List all private words in wordhash{} and count word quantity
        > <js> var count=0; for (var i in wordhash) { count++;
          if(wordhash[i].private) type(wordhash[i]+"\n")}; count </jsV> .
        header ( -- 'head' ) ~.f common header
        tailer ( -- 'tailer' ) ~.f common tailer
        test ( ?? ) No help message. Use // to add one.
        493 OK
[x] private support has a problem. variable, constant, value are all global! under vm.g
    now they should be under vm.g.vid.name if they are private word. This is difficult because
    definiton doesn't know if it's a private word. So, all of them are to be hooked under their
    definition vid not only private words.
    --> This is easy, modify 'constant' would be enough.
    --> ok now! Much much easier than I anticipated. 3hta and 3htm passed self-test already.
    [x] context is a jeforth.js global variable. It should always be a copy of order[order.length-1].
        I guess rescan-word-hash is the right place to do this.
    [x] Make vocabulary commands (also only previous) immediate words, due to private support
        switching context become important. For example:
            : test3 also hte.f one previous ;
        although the above example looks verbose, but 'one' in hte.f is a private word and test3
        defined in a different context can use it. --> they work fine.
        [x] See setup.bat (was vm.v[context]) vm[context] is not correct! Should be vm.[current].
            --> vm.v[current] was a mistake. context = current then still use vm[context] is correct.
        [x] setup.bat uses value and vm.g.flag and vm.g._a thus is now not working because they should be
            (was vm.v[]) vm.[context].flag and vm[context]._a
        [x] Am I going to modify all vm.g to vm[context] ? very annoying and I am afraid it's a bad
            idea and I'll have to modify again.
            --> See Ynote: "jeforth.3we private support value vm.g.name become vm.vid.name" discussion.
                1. For code word, vm[_me.vid].name
                2. For <js> ... </js> in tib, vm[context].name or vid js> vm[pop()].name
                3. vid forth word is a private command, code vid push(_me.vid) end-code private
                   so vid command can be used in colon words for js: statements
                4. for in module applications , everything is in the ~.f module. Thus js> current  and js>
                   context are the same vid. This is important and is done by source-code-header. Thus
                   vm[context].name is the easist way.
    [x] check all vm.g.name and vm.g[name] values and constants
        Total commander or Notepad++ RegEx : \s?vm\.g(\.|\[)
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\demo\ball.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\demo\blowing-in-the-wind.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\canvas\canvas.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\canvas\processing.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3nd\f\jsc.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3hta\registry.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3hta\ie.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\private\work.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\private\money.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\doc\tutor-cloth.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\demo\alarm.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\cloth(processing).f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\naughty-balls.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\naughty-balls2.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\p5.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\f\voc.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\f\jeforth.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\f\jsc.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3ce\ce.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\3ce\target.f
            [x] attach 3ce to target page does not work, yet the F7 command is fine.
                > js> document.title . \ ==> hao123网址之家－在线繁体字转换 OK
                [x] I guess the readTextFile on target page does not work , because include &
                sinclude have been modified recently. --> actually readTextFile does not work
                at all. it's good to have F7 enter so I know.
                [x] Also, target.f no exist either. --> simply because not read
                [x] Some older note recalled from jeforth.3we/log/Log of TR.html
                    o   當 host page 都不存在時, readTextFile 也不 work 了! 已證實。--> So we need background page (to readTextFile)
                    o   Google 已經建議用 Event page 取代 background page 了 --> no much difference.
                    o   檢驗 background-page <js> pop().vm.dictate("11 22 33 .s js: debugger")</js>
                    o   由 3ce extenstion page 對 background page 下令的公式:
                        background-page <js> tos().bvm.dictate("cr see readTextFile");pop().bvm.screenbuffer </jsV> .
                    o   對 background page jeforth 下令的範本：
                            background-page <js> pop().bvm.dictate(".s")</js>
                            background-page :> bvm.screenbuffer .
                    o   若要重複 init background page 只要
                        background-page :: jeforth_project_k_virtual_machine_object=null
                        然後 refresh 3ce extension page 即可。
                    --> er background-page :> document.head.outerHTML .
                        er background-page :> document.body.outerHTML .
                        both empty, so I guess the background page is not init'ed
                    --> use chrome://extensions/ > Inspect views: jeforth.3ce.background.html to check
                        background page --> no body, no head
                            --> incorrect! We have jeforth.3ce.background.html
                            --> do the same inspect on the 3ce from Google Play --> the background page is correct
                                body and head are all as jeforth.3ce.background.html
                        which is not empty, title is <title>jeforth.3ce background page</title> besides
                        [x] I guess jeforth.3ce.background.html is a symbolic link instead of a hard link
                            in setup.bat is the root cause! --> Yeah!!
                        [x] Now check the background page title
                            > background-page :> document.title . \ ==> jeforth.3ce background page OK
                            Bingo! so easy, run from 3ce page.
                [x] Now, Bug fixed! Root cause is in setup.bat, jeforth.3ce.background.html should be hard link
                    should not be symbolic link. symbolic link jeforth.3ce.background.html causes no error
                    in manifest.json but it become an empty nothing like a null jeforth.3ce.background.html.

        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\demo\solar-system.f
            [x] 2016/12/27 15:48
                This command line : '[begin] ." *" 100 nap [again]' stops the solar system!
                F12 debugger shows that tib.slice[ntib] is at near ending of solar-system.f <-- Problem!
                that point has passed --> [begin] ..[again] in trouble but only sometimes, strange.
                --> use the debug trik of saving tib to TIB and ntib to nTIB, the actual tib is really
                    at that place but ntib was correctly points at the point before [again] of the
                    solar-system.f main loop.
                --> so the command line '[begin] ." *" 100 nap [again]' that was supposed to have its
                    own tib and ntib but it actually modifies the solar-system.f's tib and ntib <--- problem!!
                -->
                    "" value TIB 0 value nTIB
                    [begin]
                    ." *"
                    js> tib to TIB js> ntib to nTIB
                    js: vm.debug=11;debugger
                    100 nap \ <----------- restores wrong tib and ntib , suspected
                    js> tib to TIB js> ntib to nTIB
                    js: vm.debug=22;debugger
                    [again]
                --> Test, if different nap2 shares the same tibwas? --> no, if use var
                    save={tibwas,ntibwas,ipwas} then different nap2's save{} are different.
                --> interpret state test1 test2 in log/archive.json field "[closed] log 2016/05/30"
                    failed! --> try older version 3htm from rawgit.com
                        commit: 3rd release of 12choc.f (committed on Nov 27'16)
                        http://rawgit.com/hcchengithub/jeforth.3we/26541aae54882fad713be4c9a93d55d00cc7b9ef/index.html
                        include solar-system.f
                        [begin] ." *" 100 nap [again]
                    --> shit! same problem has been there for long!!
                --> try master (Latest commit 77afb32 on Sep 11'16) on rawgit.com
                    --> same problme on solar-system.f and "[begin] ." *" 100 nap [again]"
                    --> the [begin]..[again] loop in the source code does not work either!!
                --> earlier commit --> committed on Jun 12 master
                    http://rawgit.com/hcchengithub/jeforth.3we/7360c64e00643808fb465ea5667e727689b3a53d/index.html
                    \ 讓太陽左右來回移動
                    js: e=d=0.5
                    [begin]
                        js: h=vm.g.stars[0].x+=e
                        js> h>=(vm.g.cv.canvas.width-vm.g.cv.canvas.height/2) [if] js: e=-d [then]
                        js> h<=vm.g.cv.canvas.height/2 [if] js: e=d [then] 50 nap
                    [again]
                    --> failed!
                --> commit 4c009ce7a1e5aec19513b1fc66e7d651ba404b20
                    Author: H.C. Chen <hcchen5600@gmail.com>
                    Date:   Sun Jun 12 00:08:57 2016 +0800

                        new nap sleep [begin][for] and [[for]]

                        solar-system.f ok now

                    \ 讓太陽左右來回移動
                        js: e=d=0.5
                        [begin]
                            js: h=vm.g.stars[0].x+=e
                            js> h>=(vm.g.cv.canvas.width-vm.g.cv.canvas.height/2) [if] js: e=-d [then]
                            js> h<=vm.g.cv.canvas.height/2 [if] js: e=d [then] 50 nap
                        [again]

                    --> failed!!
                    > [begin] ." *" 100 nap [again]
                    *Error! ar unknown. <-------------------- exactly the same recent problem.
                [x] According to the discussion on my Meta Moji Note, try to repro the problem through
                    interpret state test1 test2 and let's start over the debugging . . .
                --> run 1111 then run 3333. They seems ok but after 3333 an extra 1111 will be shown.
                    [begin] 1111 dup . space nap [again]
                    [begin] 3333 dup . space nap [again]

                    this exmpains why running the failed '[begin] ." *" 100 nap [again]' added extra
                    stars to the solar system.

                    \ try again the previous experiment that saw after nap tib has been changed
                    \ test1
                        js: vm.debug=false
                        [begin] 1111 dup . space
                        js: if(vm.debug){vm.debug=1111;debugger}
                        nap
                        js: if(vm.debug){vm.debug=1122;tib=tib+"";debugger} \ after this
                        [again]

                    \ test2
                        [begin] 3333 dup . space
                        js: vm.debug=2211;debugger
                        nap
                        js: vm.debug=2222;debugger
                        [again]

                    [x] When F12 debug breakpoint at 1122, vm is undefined, tib either, only kvm is visible, isn't this strange?
                        If it's not F12 debugger's problem then it must be triggered by timeout() while timeout() event doesn't
                        know anything about the kvm internal!! --> check it out, can I access tib, compiling, or any other vm
                        internal variables?
                    \ test3 ,
                        js: vm.debug=false
                        [begin] 1111 dup . space
                        js: if(vm.debug){alert(3311+tib);debugger}
                        nap
                        js: if(vm.debug){alert(3322+tib);debugger}
                        [again]
                        \ if only test3 then 3311 and 3322 are both shown correctly. So tib is there.
                        \ check by the debugger, compiling context and ntib are also all there. So try
                        \ to have test4 see see
                    \ test4
                        js: vm.debug=false
                        [begin] 3333 dup . space
                        js: vm.debug=3333;alert(3333+tib);debugger
                        nap
                        js: vm.debug=3344;alert(3344+tib);debugger
                        [again]
                        \ after added with test4 to test3. test4 itself is ok. Test3 3322 is ok too.
                        \ but after test3's [again] problem happened.
                        [x] 1. 3ce run test3 w/ F12. no problem. 2. copy-paste run test4 --> alert@3333 ok.
                            --> debug@3333 ok rstack=[]40,0,37,0] --> alert@3322 --> debug@3322 same rstack
                            --> I know after the [again] something will happen, start single step trace. So
                                I break F12 debugger in outer() in jeforth.js --> got next token is [again] Yeah.
                                --> at this point context, rstack become unknown!! --> kvm.rstack() is [40,0,37]
                                --> according to F12 debugger 'Call Stack' this thread was started from resume()
                                    and then outer() so I check tibwas and ntibwas when in the outer() they are
                                    still carring the correct values! But F12 debugger is really has its own
                                    limitation, at this time, only vm internal global variables that are also
                                    appear in resume() function can be seen. So tib,ntib,tibwas,ipwas can be
                                    seen on F12 debugger. But not delay,context,stack,rstack..etc because they
                                    are not appearing in resume() therefore when down to outer() they are not
                                    visible either.
                                !*! [x] This finding is very strange, how can outer() know it can't see stack
                                !*!     and rstack sometimes? So this must be F12 debugger's limitation instead
                                !*!     of a JavaScript normal behavior. --> True!! When in resume() > outer()
                                !*!     compiling is not visible in F12 debugger, but further step to resume() >
                                !*!     outer() > outerExecute() then compiling become visible! So, this is caused
                                !*!     by JavaScript engin's optimization and thus become F12 debugger's limitation.
                                --> so, forget about the "foobar is not defined" debugger limitations, go on debugging
                                --> trace into [again] it restores rtos() to ntib which is the 37 as mentioned above.
                                    when in the xt of [again] code word, again, ntib can be seen but tib can't.
                                --> gotcha! ntib restored with 37 but tib.slice[37] points to the wrong place!! <-- RI!
                                    The tib is wrong, I guess at first. But it's correct. We are now at test3 is
                                    right. So do this again. But check rstack before adding test4. --> ha ha ha!!
                                    You know what? the rstack is [40, 0]. So, root cause is test3's [again] rewind
                                    with test4's [begin] position!!! <------ real RI!!!
                                --> In the other word, test3 TSR sees test4's rstack when test3 resume from nap.
                                    test3 expects its rstack will be remain unchanged when it resume from nap and
                                    that's not true. When test3 resume from nap, test4 is in nap and thus rstack
                                    is keeping test4's resuming information, at this moment test3 time out and resume
                                        will actually uses test4's resuming information and certainly it's a disaster.
                [x] Now, root cause identified. As mentioned before, root cause is stack/rstack must be balance
                    to my recent design of nap and sleep or actually [begin] ... [again] and friends because
                    they store their loop back ntib address in rstack and this is so fatal. However, nap/sleep
                    can't guarantee what will happen during their unconscious time. Test4 leaves further loop
                    back into rstack is an example. The workaround is : if allow only one loop in interpret
                    mode for each TSR command line. Then [begin] [for] , like cut, cut off all older tib
                    and thus the new ntib is always 0 then they don't need to save loop back address into
                    rstack, because they are always 0, and therefore there will be no rstack required to save
                    that loop back information and problem will be fixed. Just like using cut...rewind was ok.
                    --> No! I already have the solution, tib.push >t tib.pop t> tib.tos t@

                    code tib.push ( int -- ) \ Push the integer to end of TIB as a comment
                        tib += "\n\\ " + String.fromCharCode(pop());
                        end-code

                    code tib.tos ( -- int ) \ Get integer from end of the TIB
                        var value = tib.charCodeAt(tib.length-1);
                        push(value);
                        end-code

                    : tib.pop ( -- int ) \ Pop integer from end of the TIB
                        tib.tos ( int ) js: tib=tib.slice(0,-4) ;

                    --> actually t> >t and t@ for tib.pop tib.push and tib.tos and used them
                        on [for][next], [begin][again][until] --> solar-system.f sun moving ok now, Bingo!
                    [x] test by the below one-liner. The 3 new words, they work just fine, balance perfectly
                        cls ( ------------- ) js> tib dup . cr 111 >t js> tib . cr t@ . cr js> tib . cr t> . cr js> tib dup . cr
                    --> See Ynote "jeforth.3we improve nap sleep add (sleep) and [sleep]"

        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\demo\h2o.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\playground\12choc.f
                [x] Math.sign was not in HTA, fixed by adding it in misc.hta.f.
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\demo\many-clocks.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\playground\balls.f
        xx  c:\Users\hcche\Documents\GitHub\jeforth.3we\playground\modify.f
            c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\pile-it-up.f
            c:\Users\hcche\Documents\GitHub\jeforth.3we\3htm\pile.f
            c:\Users\hcche\Documents\GitHub\jeforth.3we\playground\123.f

[x] recently, only foo will crash the system , previous rescan-wordhash is better.
    Done, now:
        only work.f help *
    works fine.
[x] 3hta, include work.f, all words are private but not lookup, why? It's the only code word
    Ha, this line in definition of 'code' is a mistake:
        execute("privacy");last().private = Boolean(pop());
    should be in 'end-code's definition because last() is not this word when in code.
    re-define end-code like what I did to code does not work, although the experiment of
        code end-code alert(1234) end-code
    works fine. However, modify end-code.xt directly can be an solution --> Bingo!
[x] 3hta has a new problem. 1. include foo.f <-- file not found
    then F5 and ctrl-up are all triggering jsc error! <== Problem!
    --> 3ce is fine. Only 3HTA has this problem. So, 3hta's jsc is suspected.
        debugging sinclude . . . --> no need to include foo.f, run jsc then the problem
        begins --> run any command (cr, words) or trigger any event (single-click)
        all cause the error : JavaScript error on word "cr" : Object expected
        Panic jsc>
    --> so, simplify jsc and see ... seem like executing reset() is the reason...Nope.
        jsc's exit, q, reset commands can repro the problem. While r rr do not reprothe
        problem. So what's the difference? --> Ha! root cause is the bd command. Run
        'bd' command after a restart has repro'ed the problem without jsc.
        RI: the below vm.g.fastInner should be vm.forth.fastInner
        function(_me){ /* bd */
            inner = vm.g.fastInner <--- should be vm.forth.fastInner now, because fastinner is a constant in jeforth.f
            vm.jsc.enable = false; // 需要這個 flag 因為若已經進了 debugInner, 換掉 inner 也出不來。
        }
    Bingo!! this bug is caused by the private support that changes vm.g to vm.vid.
    So, review all constant -->
        >words constant -t
        -------- forth (5 words) --------
        [x]EOF [x]fastInner [x]jsc.xt.hta [x]jsc.xt.F12 [x]forth-wordlist
        -------- vb.f (1 words) --------
        [x]vm.process
        -------- wsh.f (1 words) --------
        [x]WshShell
        -------- env.f (3 words) --------
        [x]WshProcEnv [x]WshUserEnv [x]BinaryStream
        > words value -t
        -------- forth (4 words) --------
        [x]base [x]breakPoint [x]args [x]up/down-recall-needs-alt-key?

[x] 準備 release master 新版 release 新版 master
    o search "kvm.minor_version" increase 版號。
        [x] jeforth.3nd.js --> version 203
        [x] 3nw, jeforth.3we/package.json version 223
        [x] jeforth.3htm.js --> to be version 203
        [x] jeforth.3ce.js(3ce extension pages)-> 203
        [x] jeforth.3ce, ce.f(Target page) -> vm.minor_version = 203
        [x] jeforth.3ce, background.js vm.minor_version = 203
        [x] jeforth.hta --> <HTA> tag. VERSION="204"
        [/] jeforth.3ca, also jeforth.3htm.js above
    o selftest them all
        [x] setup.bat
        [x] 3hta
        [x] 3nw use 3hta to fork cmd /c start nw ../jeforth.3we
        [x] 3htm use 3nw or 3nd to include webserver.f and then localhost:8888
        [x] 3nd
        [x] 3ce
        [x] 3ca
    [x] Testing all demo, calc.f does not work in 3ca due to the inline permission. Try to rewrite
        event handlers of those buttons. Search "Refused to execute inline event handler" there's a
        solution above (in log.txt). Solution is very viable. Avoid using onclick=anything
        in HTML tags but using :
            window.element的名字可以用中文！.onclick=function(){kvm.execute("wordname")}
        that's very easy and doable. ==> Bingo!! new calc.f has done.
    [x] setup.bat screen flashs badly, try not but beautiful progress info instead on the 3hta window.
        [x] done with (run) (fork) and (dos) <--- they are now silently run.
        [x] Simplify setup.bat to use (dos) instead of (run)
    [x] commit develop -> 將 develop 分支發佈到 Master 分支的命令 :
        切換到Master分支 : git checkout master
        合併 develop 分支進 master 來 : git merge --no-ff develop
            Merge branch 'develop'
            # Conflicts:
            #   3ca/fig.tw128x128.png
            #   3ca/fig.tw16x16.png
            #   3hta/localstorage.json
            #   3nw/localstorage.json
            #
            # It looks like you may be committing a merge.
            # If this is not correct, please remove the file
            #   .git/MERGE_HEAD
            # and try again.
            I plan to rm them all and copy them back from develop, and commit again.
            他說我有問題的,很多不知何故,連 .png 都說是 conflict!? 解法是乾脆把它們都殺掉,因為確信 develop
            版是沒問題的。先 git rm <所有 conflicts> 然後 commit 成功, 把這些檔案 copy 回來再 commit 一次
            就可以解決。
    [x] Test the master all over again ... pass
    [x] Master 到回 develop
        切換到Master分支 : git checkout develop
        合併 develop 分支進 master 來 : git merge --no-ff master
    [x] release note

[/] Change the startup rule: Selftest to be run by selftest command instead of an empty command line.
    --> js: tick('<selftest>').enabled=false in every quit.f
    --> 算了麻煩
[/] Do we need a command to inhibit any new tib commands during nap / sleep ?
    --> to avoid stack/rstack or whatever system things to be changed during napping in waiting
        I/O. Sounds necessary, but how? --> where to add this line?
            if(kvm.tick("sleep").timeoutId) return; // sleep if for I/O, avoid
    --> Add a 'sleeping' variable to project-k jeforth.js kernel to replace using
        kvm.tick("sleep").timeoutId if outer() and dictate() are the right places to inhibit
        executing during sleeping.
    Let it be, abort, no actual reason so far.

[ ] setup.bat to build simplest working directories, e.g. jeforth.3hta/, jeforth.3htm, .. etc
    without log/ demo/ background/ doc/ ... etc. According to Degn,Yuan-Yuan's request.
[x] private support is good, but there are many event handlers like examples in ls.f
        <js> $(".ebreadonly",tos())[0].onclick =function(e){push(this);execute("eb.readonly");return(false)}</js>
    will be not working because "call by name" and the name will be invisible after being not
    the context. My idea is to have a word, say 'word>handler' that output a handler function. So,
        code word>handler ( word -- handler() ) \ Pack the word into an event handler
            ... snip ...
        end-code
    and the line will become:
        ['] eb.readonly word>handler js: $(".ebreadonly",tos(n))[0].onclick=pop()
    [x] call by name must be reviewed especially utility vocabularies.
        --> tick() and execute() have run-time-warning in selftest mode
    [x] ls.f privacy is true now.
[ ] <task> ... </task> does not work as expected. Remove them.
    : <task>        ( <forth words> -- "task" ) \ Invoke a dictate() to run the words.
                    char </task> word ; immediate
                    /// 要一次發動好幾個 rewinding TIB task 才需要用這個命令。如果不是
                    /// rewinding 的則同樣是循序做下去就不需要本命令了。如果只要發動一
                    /// 個則用 cut ... rewind 即可。
                    /// Ex.
                    ///     <task> 1 . space 100 nap rewind</task> <task> 2 . space 100 nap rewind</task>

    : </task>       ( "task" -- ... ) \ Delimiter of <task>
                    compiling if literal js: push(function(){dictate(pop())}) ,
                    else js: dictate(pop()) then ; immediate
                    /// See alternative method for command line by 'cut' and 'rewind'.
    --> are they do-able? Is it possible to run interpret state tasks by using them?

[/] Let context be like AX register in eforth x86. Therefore order[order.length-1] is not context.
    After previous command the recent order[order.length-1] become new context. Purpose is to
    switch context faster. context. Consider a two-pass search of the target word, in context and
    in wordhash if not found in context while context vocabulary word always has its own wordhash
    ready.
    [x] If use two-pass search, then all words need to be searched twice. Consider the cost!
        ==> Yeah, two pass is a bad idea.
[x] Switch context inevitably triggers a wordhash rescan, it's faster if rescan only the target
    vocabulary into the current wordhash{} while the previous wordhash{} is not totally disappeared,
    only overritten with the alternative definitions. Un-replaced words are still visible.
    --> So if we want to use vocabulary 'assembly' words, we don't need to 'also assembly' but
        simply 'assembly'. If the order was [forth,misc] then all words in 'misc' were visible
        while after running 'assembly' only public words in 'misc' are visible because it's not
        the context now. In contrast with traditional forth, all 'misc' words are invisible once
        context switched to 'assembly'. That's actually an overkill of switching to 'assembly'!
        So the new design is better. If I want to use vocabulary forth, misc, io, and math. I
        simply execute "forth misc io math" instead of "also forth also misc also io also math".
        However, the rear method is still workable as before.
    --> The downside is that after 'previous' command too many words will be disappeared.
        However, that is not a new problems caused by the new design of vocabulary words.
        So, the idea is still attractive.
    ==> Done !! 17:37 January 7, 2017
    [x] Problem found but not a problem!!
        Selftest failed when selftest 3hta because 'bye' redefined by vb.f that returns errorlevel
        has been replaced by the original 'bye' defined in forth. Because context switched to forth
        somewhere before running the selftest although in order vb.f has higher priority due to the
        new design the active 'bye' is the older one. This is NOT 100% a problem because the vb.f bye
        can be inactive anytime unexpectedly like this case. The correct way to reDef 'forth bye' is
        to put the new 'bye' defined in vb.f into the 'forth' vocabulary. ---> Done, and it works now.

[x] 3ce, list-tabs hang up !!! --> Chrome in trouble, restart then ok.
[x] setup.bat should not include private folder. If want to include private folder separately do
    it manually. ==> done.
    [x] Need a command to make many tokens alias of \ comment, useful for batch program.
        ==> aliases works fine, for 3HTA only.

[x] \r|\n  and \n|\r are different! char \r|\n word :> split(/\s+/) may having a ending
    extra null string. ---> no, see log.txt beginning. The recent problem has been fixed
    by using a dummy to the string.

[x] many words in jeforth.f and 3htm/f/platform.f are now private
    [x] Big Problem!! I make doNext a private word, so tick("doNext") returns 0 then <--- problem!!
        So not only execute("callByName") in trouble, tick("name") too!!!
        --> let doNext be a public, it'll be carried too far to make it private.
    [x] Let execute() and tick() to warn if the target word is a private word when
        selftest is on. That warning only appear in selftest on mode so they are different
        versions. Refer to fastInner() and debugInner(), jeforth.js functions
        can be replaced very easily.
        --> This idea works! tick = vm.g.selftest_tick = function tick(name) catches private words
            Warning! private word description referenced by name in tick()!
            Warning! private word expected_rstack referenced by name in tick()!
            Warning! private word expected_stack referenced by name in tick()!
            Warning! private word test-result referenced by name in tick()!
            Warning! private word [all-pass] referenced by name in tick()!
        [x] These private words are only used in the same module, make them be private
            at the end of the module :
            ' description     :: private=true
            ' expected_rstack :: private=true
            ' expected_stack  :: private=true
            ' test-result     :: private=true
            ' [all-pass]      :: private=true
            --> this is annoying, because then we can't make the word private when define it.
                Use this idea when in jeforth.f to avoid warnings is fine.
        ==> Done, default only warning when in selftest mode.
            warning-on to turn on the run-time warning any time.
    [x] need a word 'all' to scan all words so they are all public temporarily. So 'all words'
        lists all words. --> it works fine!
    [x] what if to have executeAbs(vid,w) and tickAbs(vid,w) for refering to private words?
        --> Make them public is easier and more natural. If a word is warned by execute()
            and tick() then consider to make it public.

[x] 3nd selftest failed at
        Including fs.f
        Error! "msg"abort unknown. <---- can't be private.

[x] 3ce attach target tab in trouble again now!!
    --> search "attach 3ce to target page does not work" above for how to debug.
    --> F7 or (dictate) both need attach the target tab first, try them: --> both work!!!
    --> readTextFile suspected again ... yes it is the criminal due to:
        > char manifest.json readTextFileAuto . \ {F7}
        dummy,doc,f,3htm/f,3htm/canvas,3htm,3ce,playground OK   <--- problem! the file is not read correctly
    --> trace back develop versions...  all failed --> re-start Chrome then OK! Shit

[x] Redefine (words) to support 'all' command. Rename to word_select.
    --> code wordhash>array ( "vid" -- array ) \ Retrive a VID list from the recent active words hash
        \ it works now! see you tomorrow with my Metamoji note on X1 Yoga.
    --> Test [x] 3htm (help)
[x] 準備 release master 新版 release 新版 master : af266a3f8c4fefafc04947e9ba0b89d9f3601eed
    o search "kvm.minor_version" increase 版號。
        [x] jeforth.3nd.js --> kvm.minor_version = 203 -> 204
        [x] 3nw, jeforth.3we/package.json version 223 -> 224
        [x] jeforth.3htm.js --> kvm.minor_version = 203 -> 204
        [x] jeforth.3ce.js(3ce extension pages)-> 203 kvm.minor_version = 204
        [x] jeforth.3ce, ce.f(Target page) -> vm.minor_version = 203 -> vm.minor_version = 204
        [x] jeforth.3ce, background.js vm.minor_version = 203 -> vm.minor_version = 204
        [x] jeforth.hta --> <HTA> tag. VERSION="204" -> VERSION="205"
        [/] jeforth.3ca, also jeforth.3htm.js above
    o selftest them all
        [x] setup.bat
        [x] 3nw use 3hta to fork cmd /c start nw ../jeforth.3we
        [x] 3nd
            [x] run webserver.f
        [x] 3htm use 3nw or 3nd to include webserver.f and then localhost:8888
        [x] 3hta
        [x] 3ce
            [x] attach to target pages
        [x] 3ca
        [x] Testing all demo
            [x] 12choc.f , [x] alarm.f , [x] ball.f(non-selftest mode) , [x] blowing-in-the-wind.f ,
            [x] box2dweb-arrow.f , [x] calc.f , [x] chipmunk-js-pyramidstack.f ,
            [x] flot-demo.f , [x] h2o.f , [x] many-clocks.f , [x] numeric-demo.f ,
            [x] solar-system.f
                [x] alarm.f has this problem so it doesn't work in 3ce and 3ca
                    Refused to execute inline event handler because it violates the following Content
                    Security Policy ---> fixed.
        [x] commit develop -> 將 develop 分支發佈到 Master 分支的命令 :
            切換到Master分支 : git checkout master
            合併 develop 分支進 master 來 : git merge --no-ff develop
        [/] Test the master all over again ... ignored, lazy.
        [x] Master 到回 develop
            切換到Master分支 : git checkout develop
            合併 develop 分支進 master 來 : git merge --no-ff master
        [ ] release note
[x] git.f in trouble now, due to (fork) definition changed, it's quiet now, is that the root cause?
        > launch-git-shell
        JavaScript error on word "(fork)" : Invalid procedure call or argument
    ==> No! git.f doesn't know the Git Shell path. That needs manual setup by editing git.f
        and I didn't do that for this computer yet.

[x] setup.bat to create one more folder : jeforth.3htm

[x] (.0r) Negative numbers become "0000-123",
    --> use Math.sign to fix it. --> no such problem! Shit. True only for strings like:
        > -123 :> toString() 8 .0r \ ==> 0000-123 OK
        that's normal.

                    ------ jeforth.3we release R1 -------

[x] The correct way to run a jeforth release through rawgit.com is :
    https://cdn.rawgit.com/hcchengithub/jeforth.3we/R1/index.html
    IE works fine too. Where, the leading 'cdn.' is still necessary for IE but not for
    Chrome browser.

[ ] jeforth.3htm run through rawgit.com has some problems on Android cell phone
    [ ] The outputbox background color covers only half screen when cell phone is
        not vertical.
    [ ] 12choc.f can not drag and drop objects on Andorid browser.

[ ] webserver.bat 要避免重複跑，multiple instance 搶著當 localHost server 不可能。

[ ] hcchen5600 2015/11/13 10:46:32
    hash>column2 改寫成好用的介面。

[x] How to make a release on GitHub? Not only a master commit, but an official release.
    ==> Ynote: GitHub Creating Releases.note

[x] Unify the version. See above log of a master release, it takes a lot of efforts to modify
    the version code of each application.
    --> ./js/version.js minor_version all 301
        [x] jeforth.3nd.js
        [x] 3nw, jeforth.3we\jeforth.3nw.html
        [x] 3htm, 3ca, jeforth.3we\3htm\js\jeforth.3htm.js
        [x] 3ca, also jeforth.3htm.js above
        [x] 3ce.js(3ce extension pages)
        [x] 3ce, ce.f (Target page)
        [x] 3ce, jeforth.3ce.background.html, background.js vm.minor_version=jeforth3we_minor_version
        [x] 3hta, --> <HTA> tag. VERSION="204" -> VERSION="205"


[x] Remove the :
        js: outputbox.style.fontSize="1.5em"
    from the default autoexec of ls.f. I have resolved the problem for a while, no need this now.
[ ] 3ce to support new command 'highlight' or 螢光筆 to modify active tab. Making Web browser to
    note taking annotating tool directly.
[x] After supporting private, word count shown in words command and help command are still correct?
    --> 3htm v3.204 no problem.
[x] 3htm v3.204 and all friends have a problem. After include 12choc.f, words still shows all
    ls.f's 56 words. I thought include command is I/O bound and thus it should does rescan-word-hash
    every time. Another symptom is after executing
        also misc.f
    rescan-word-hash is expected too, but no! So it's a bug. Actually, for speed, only vocabulary words
    do not rescan all other vocabulary words (only [*]also previous include [x]set-context not-only forget
    prioritize marker) should rescan-word-hash.
[x] Bug, execute not-only several times, it repeats all word-lists in order

[ ] Release test automation
    [ ] Selftest of all applications
    [ ] 3ce attach manual test
    [ ] All demos

[/] run command still of ls.f after executed forth.
    --> shit! my fault. Windows 'run' command is defined in wsh.f.

[ ] 19:36 2017-02-18 The background story is that I want to transfer files from one computer to anohter
    in my office. Possible ways are : USB HDD, Yun.Baidu.com, FTP server, and the likes. They all requires
    two steps, copy to a media and then copy to the target computer.
    Install HFS or FTP server on one computer can really make it better but HFS is a failure,

    see Ynote:
    "HFS ~ Http File Server , homepage and binary"

    and sure FTP needs setup too. I actually don't remember
    how to arrange a FTP server now. While, jeforth.3nd or 3nw webserver + wget is a solution I like.
    Therefore, I am now interested to study webserver.f and try to improve it.

    I was studying this : "Build Your First HTTP Server in Node.js"  https://www.diigo.com/user/hcchen/b/373115646
    yesterday. See ~\jeforth.3we\playground\build_your_http_server.f

    I studied how to use node.js to build a web site before, see Yun.baidu.com "ebook NODE.js"

[x] 3ca's vm.appname should be jeforth.3ca (it's now ~.3htm)
    solution is to read the name field in manifest.json:
    js> chrome :> app.getDetails().name \ ==> "jeforth.3ca" or "jeforth.3ce"
    Example:
        js> vm.appname=='jeforth.3htm'&&chrome.app.getDetails().name=="jeforth.3ca" [if]
            s" Abort: jeforth.3ca restricted HTML input file tag."
            "msg"abort cr
        [then]
[x] 18:18 2017-02-23 Studying how to use HTML post to upload files.
    [x] Can't use 3ca to do this study due to its restrictions.
        誤會一場，只是 HTML event handler 不能 inline 指定而已。早已有解。 3ce & 3ca both ok
    [x] Yes, we can use 3ca and 3ce to study input type=file tag
        \ MSDN input type=file element | input type=file object
        \ Example from this page https://msdn.microsoft.com/en-us/library/ms535263(v=vs.85).aspx
        <js>
            var f = function getFiles() {
                debugger;
                // Get input element
                myFileList = document.getElementById("myfiles");
                // loop through files property, using length to get number of files chosen
                for (var i = 0; i < myFileList.files.length; i++) {
                    // display them in the div
                    document.getElementById("display").innerHTML += "<br/>" + myFileList.files[i].name ;
                }
            };f
        </jsV> constant getFiles // ( -- func ) event handler
        <o>
        <label>Use <strong>shift</strong> or <strong>ctrl</strong> click to pick a few files:
        <input type="file" multiple id="myfiles" /></label>
        <div id="display"></div>
        </o> drop
        getFiles js: myfiles.onchange=pop() \ 3ce doesn't accept inline event handler
    [ ] The upload form example from ipad "USB Disk Pro" http://192.168.0.196:8080/ HFS:
        <form action="" method="post" enctype="multipart/form-data" name="form1">
        <input type="hidden" name="folder" value="/">
        <input type="file" multiple name="file"> <----------- add multiple see see
        <input type="submit" value="Upload">
        </form>
        --> It really works in 3ce attached console. So how to do the samething through
            JavaScript for automation?
        [x] Post是将表单中的数据放在form的数据体中，按照变量和值相对应的方式，传递到action所指向URL。
            --> So I don't need to attach to the real target page. Just letting above form's
                action="192.168.0.196:8080" <--- no it doesn't work. The page must be connected.
        [x] 強行添加 multiple to <input type="file" multiple name="file"> --> it doesn't work.
            only one file transfered still.
        [x] Try to assign pathname directly @ 3ce attached console
            <js> $("input")[1].value="c:\Users\hcche\Downloads\1.au3" </js>
            JavaScript error : Failed to set the 'value' property on 'HTMLInputElement': This input
            element accepts a filename, which may only be programmatically set to the empty string.
            --> is this to the "USB Disk Pro" page only?
                --> all input type=file do not accept value to be set to non-empty.
        [x] Get filename though my input type=file but submit them manually
            --> all input type=file do not accept value to be set to non-empty.
    [ ] I also tried to use FTP server on my computer hoping iPad can then download files from it.
        But cesarFTP does not work now! and Filezilla needs to learn how to use.
[ ] 17:17 2017-03-01 RStudio Source box is a very good example to learn. ls.f ed [run] button
    needs improvement. Running throught he entire field is not good for exercise. Run only
    one line and a way to run multiple lines and also the entire field is an interesting
    challenge.
[ ] Installer!
    jeforth.3htm run from rawgit or anywhere to be an installer of other jeforth.3we applications.
[ ] alarm.f needs to support repeating. No interface, just a command would be good
    enough.
    [ ] when 00:00:00 click start or pause should stop the music and become Start.
        if is not playing the music then do nothing.
    [ ] when repeat is on then play the music for _given_ seconds the reset
        and start again.
[ ] 15:20 2017-05-04
    debug why include alarm.f from http://cdn.rawgit.com/hcchengithub/jeforth.3we/develop/index.html
    makes errors like: repeating undefined, execute warnings about private variables that are called
    by name, etc. **Only** when running through rawgit.com.
    [/] alarm.f does not play music when running through rawgit.com. <--- forget it.
        Through localhost is fine. See below good news.
    [x] Good news! alarm.f works fine on Android cell phone if running through :
        192.168.1.153:8888?include alarm.f ... etc
        on Chrome browser. The repeating and the music are both ok.
        The Web server side is my T550 notebook, webserver.bat of jeforth.
        [ ] does it still work if walk away from wifi?
    [x] How to make a ～.f file to have a music object? I wish the music object can resolve the mp3
        done! "include MP3-wait-a-while.f" and then "wait-a-while.mp3 :: play()", works fine on 3ca.
        [x] But find problem when reading them from GitHub through cdn.rawgit.com
            include on URL or command line both create problem : "Error! Usage: unknown."
            but the "Usage:" is in <comment> !! --> try w/o cdn. ... "Error! Failed to read f/jeforth.f" known problem.
            --> 3ce, 3hta works fine too. --> how about local webserver? .. OK on local --> remote : Ok too!!
            http://192.168.1.158:8888 then include then play(), really ok. --> try to read .f instead of include it
            on the rawgit.com case ... Strange! readTextFile then tib.insert creates the same problem!! --> check
            self-test first, something wrong maybe. ... No! --> copy-paste MP3-wait-a-while.f through <text> ...
            Failed!! so it's easy now. Because copy-past .f still failed. Debug the <comment> then ... add a
            "js: debugger" before the comment fixed the problem!! --> try a blank line instead of the js: debugger
            ... ok too! --> So, a \ comment seems eats the next word if it's followed with a total blank line!
            Simply a space after the \ fixes the problem. The \ alone on the a line actually eats the next line
            entirely. so study \ command .... it has only one statement : nexttoken('\n'), while definition of // is:
            last().help = nexttoken('\n|\r'); ... so // has the same problem!! <---- YES!!
            ==> Root cause is nexttoken(), it always eats the next character so \ ignores the \n and the next line
                becomes the comment line. When it's <comment> then the following comments are interpreted unexpectedly.
                --> why happen only on rawgit.com? ... Ha! Not only happen on rawgit.com but also other cases! If
                testd directly by using :
                    <text>
                    \
                    <comment>
                    ." Error"</comment></text> constant t t tib.insert
                --> When the .f is read from readTextFile on 3ca, the \ line is actually "\\\r\n"
                    177: :13
                    178:
                    :10
                    179:\:92
                    180: :13
                    181:
                    :10
                    182:<:60
                    183:c:99
                    184:o:111
                    185:m:109
                    186:m:109
                    187:e:101
                    188:n:110
                    189:t:116
                    190:>:62
                    191: :13
                    , every end-of-line are \r\n actually. But when running through rawgit.com, end-of-line become \n only.
                    when the \n eaten by nexttoken() the next line become comment. <--- Problem!! Root Cause !!!
                --> Try 'word' command, it probably has the same problem.
                    > : comment CR word drop ;
                    > comment
                    ." Hello"
                     OK  <-------------- Indeed! the next line is eaten by 'comment' unexpectedly
                    > comment <--- add a space
                    ." Hello"
                    Hello OK  <--------- then OK
            [x] So, nexttoken() to always eat the next character is not very good. Should not when delimiter is :
                case '\\n': case '\\r': case '\\n|\\r': case '\\r|\\n':
                case '\n':  case '\r':  case '\n|\r':   case '\r|\n':
                Where '\n' and '\\n' are same or not depends on nextstring(RegEx), I think they are same.
                Because a real '\n' and a symble '\\n' is same to String.search() I guess. The following experiment has proved this:
                    > <text>
                    aa
                    bb  cc
                    </text> :> search("\\t") \ ==> 5 (number)
                     OK
                    > <text>
                    aa
                    bb  cc
                    </text> :> search("\t") \ ==> 5 (number)  證明 '\t' '\\t' 效果一樣
                     OK
                    > <text>
                    aa
                    bb  cc
                    </text> :> search("cc") \ ==> 6 (number)
                     OK
                But \s \w \d are RegEx symbole, they must be \\s \\w \\d if appear in a delimiter.
                    <text>
                    aa 123
                    bb    cc
                    </text> :> search("\\d") \ ==> 3 (number) , if "\d" instead then result will be -1.

[x] 19:21 May 15, 2017
    How to maintain jeforth.3we wiki on Github? I make a record here.
    [x] This is how to clone the wiki from GitHub to local computer. Use Git Shell.
        ~\Documents\GitHub> git clone https://github.com/hcchengithub/jeforth.3we/wiki <------------ Wrong URL !!!
        Cloning into 'wiki'...
        fatal: https://github.com/hcchengithub/jeforth.3we/wiki/info/refs not valid: is this a git repository?
        ~\Documents\GitHub> git clone https://github.com/hcchengithub/jeforth.3we.wiki  <----------- Corect URL !!!
        Cloning into 'jeforth.3we.wiki'...
        remote: Counting objects: 199, done.
        remote: Total 199 (delta 0), reused 0 (delta 0), pack-reused 199Receiving objects:  64% (129/199), 580.01 KiB | 63.00 Ki

        Receiving objects: 100% (199/199), 629.37 KiB | 68.00 KiB/s, done.
        Resolving deltas: 100% (97/97), done.
        ~\Documents\GitHub>
    [x] I am now debugging why this hyperlink in README.md does not work??
            ![SimpleMDE markdown editor](doc/README.md/demo 3nw mde editor.JPG)
        While this works
            ![SimpleMDE markdown editor](doc/README.md/demo-pyramidstack.png)
        工作做一半的結果，又重新解了一次老問題。 README.md 或 wiki pages 裡
        ![SimpleMDE markdown editor](doc/README.md/demo_3nw_mde_editor.JPG) path 可能是「不能有空格」，也可
        能是我自己把檔名改成用 under line 取代空格了。

[x] README.md add the "12 choc" demo before update to master
[ ] 錄製 12choc.f 的說明影片。

[ ] Make a master release and update the issue https://github.com/hcchengithub/jeforth.3we/issues/5
[x] 準備 release master 新版 release 新版 master
    [x] jeforth.3we\js\version.js --> jeforth3we_minor_version = 303;
    [ ] Check the date stamp at the bottom of README.md
    o selftest them all
        [x] setup.bat
        [x] 3nw use 3hta to fork cmd /c start nw ../jeforth.3we
        [x] 3nd
            [x] run webserver.f
        [x] 3htm use 3nw or 3nd to include webserver.f and then localhost:8888
        [x] 3hta
        [x] 3ce
            [x] attach to target pages
        [x] 3ca
        [x] Testing all demo
            [x] 12choc.f , [x] alarm.f , [x] ball.f(non-selftest mode) , [x] blowing-in-the-wind.f ,
            [x] box2dweb-arrow.f , [x] calc.f , [x] chipmunk-js-pyramidstack.f ,
            [x] flot-demo.f , [x] h2o.f , [x] many-clocks.f , [x] numeric-demo.f , alarm.f
            [x] solar-system.f, [ ] tutor-cloth.f
        [x] commit develop -> 將 develop 分支發佈到 Master 分支的命令 :
            切換到Master分支 : git checkout master
            合併 develop 分支進 master 來 : git merge --no-ff develop
        [/] Test the master all over again ... ignored, lazy.
        [x] Upload master to GitHub : git push
        [x] Master 到回 develop
            切換到Master分支 : git checkout develop
            合併 develop 分支進 master 來 : git merge --no-ff master
        [x] Complete this log.txt
        [ ] release note
[ ] README.md to include
    http://cdn.rawgit.com/hcchengithub/jeforth.3we/r2/index.html?cls_include_tutor-cloth.f
[ ] Try to use Ubuntu NW.js or Node.js to try jeforth.3nw, 3nd on Ubuntu.
[ ] 10:34 2017/07/01 faceapi.f does not work on 3ha. The error object returned from $.ajax() is
        {
            "readyState": 0,
            "status": 0,
            "statusText": "No Transport"
        } OK
    --> Has $.ajax ever been working in 3hta? search ajax see see . . . No, not used
        before. --> Check
    HTA and ajax on the net ...
        http://3fwork.com/b402/003425MYM028859/
        我最先定位到的是ajax方法返回status=0,statusText=No Transport。然后开始了我的查
        找问题之旅，我在网上所查出的资料都说这个是由于跨域 cross Domain 造成的。
    [x] 試試別的 ajax function --> Good! 成功複製出了問題！--> [ ] 趁現在問 Microsoft 的論壇
        js> $.ajax({url:"http://example.com/",async:false}).responseText tib.
        --> 在 3ca 很成功地讀回該網頁的整個 HTML
        --> 在 3hta 就失敗了
            <js>
                $.ajax({url:"http://example.com/",async:false})
                .done(function(response) {
                        alert("success");
                })
                .fail(function(error) {
                    alert("error");
                    push(error);
                    execute('(see)'); // see the error message
                });
            </js>
            {
                "readyState": 0,
                "status": 0,
                "statusText": "No Transport"
            }
        --> But it fail in repro.htm too. So, jeforth.3htm has enabled
            something. what's that?
            [x] Try project-k file:///C:/Users/hcche/Documents/GitHub/jeforth.3we/project-k/sample.html
                Yes, same problem reproduced
                status :   0
                statusText : NetworkError: Failed to execute 'send' on 'XMLHttpRequest':
                Failed to load 'http://example.com/'
            [x] 果然, jeforth.3htm web 也不行 --> 所以 3ce 3ca 都是特權, 3hta 不行是對的!
                "readyState": 0,
                "status": 0,
                "statusText": "NetworkError: Failed to execute 'send' on 'XMLHttpRequest': Failed to load 'http://example.com/?_=1498901836169'."
        --> 然而 faceapi.f 在 project-k sample.html and 3htm web are both working fine !
            So, Azure server side is ok with cross domain. HTA really has problem.
        [ ] Try faceapi.htm rename to ~.hta . . .
    [ ] 可以 trace 進 jquery 去查。
    [ ] 不用 ajax 能不能 POST ?
    [ ] 別的 ajax POST 去處
    [?] 14:58 2017-09-23 忘了當初在解決什麼問題了？faceapi.f 當時已經做好了呀？好像
        是從本地直接上傳照片的方式沒有成功。我的 kitchen 跟 face 都是用 url 給照片的。
[x] rename project-k kernel from jeforth.js to projectk.js
[ ] 整理 project-k 的 wiki. 特別是改名成 projectk.js 之後。
[ ] 準備 release master 新版 release 新版 master
    [x] jeforth.3we\js\version.js --> jeforth3we_minor_version = 304;
    [ ] Check the date stamp at the bottom of README.md <-- 可以從 GitHub 網頁上直接改。
    [ ] Check project-k/projectk.js is included even when project-k folder is ignored
        ~\jeforth.3we>git add -f project-k/projectk.js
        * git add or rm command is the final decision of what to add and what to remove.
    o selftest them all
        [x] Carefully delete all application and run setup.bat to rebuild them
        [x] 3nw use 3hta to: fork cmd /c start nw ../jeforth.3we
        [x] 3nd use 3hta to: fork cmd /c node jeforth.3nd.js
            [x] include webserver.f
        [x] 3htm use 3nw or 3nd to include webserver.f and then localhost:8888
            [x] check version
        [x] 3hta, use 3hta to: fork jeforth.hta
        [x] 3ce, click its icon to launch it.
            [x] check version.
            [x] attach to target pages
        [x] 3ca, click Chrome App icon to launch it.
            [x] check version
        [x] Testing all demo, use 3ce or 3ca
            [x] 12choc.f ,
            [x] solar-system.f,
            [x] tutor-cloth.f
            [x] alarm.f ,
            [x] ball.f(non-selftest mode) ,
            [x] blowing-in-the-wind.f ,
            [x] box2dweb-arrow.f ,
            [x] calc.f ,
            [x] chipmunk-js-pyramidstack.f ,
            [x] flot-demo.f ,
            [x] numeric-demo.f
            [x] h2o.f ,
            [x] many-clocks.f ,
        [/] commit develop -> 將 develop 分支發佈到 Master 分支的命令 :
            切換到Master分支 : git checkout master
            合併 develop 分支進 master 來 : git merge --no-ff develop
            ==> 已經改用 GitHub Desktop 只要切到 master 然後 Menu > 
                Branch > Merge into current branch 就行了。
        [/] Test the master all over again ... ignored, lazy.
        [x] Upload master to GitHub : git push
        [ ] GitHub 上的 README.md 範例都指向 r2 要改成 r3         
        [ ] Complete this log.txt
        [ ] release note
        [ ] Master 到回 develop
            切換到Master分支 : git checkout develop
            合併 develop 分支進 master 來 : git merge --no-ff master
[ ] peforth 有新發現 ─ function cascading 
    讓 vm.push() vm.execute() vm.dictate() 都傳回 vm 
    以便 support function cascade. 從 projectk.js 裡面修改
    --> 我都忘了 jeforth 的東西了。
        o 直接改 projectk.js save 好就可以了。
        o 已經在執行的 3hta 按一下 F5 reset 就生效
        o 已經在執行的 3ca 也是！
        o 試驗效果：
            <js> push(123).push(456).dictate('+ . cr')</js>
            579
    --> 18:03 18/08/08 以前改好了，如今怎麼沒有? 再改一次吧！        
[x] jeforth 沒有 v() r() ? 那怎麼 access forth variables from js 呢？
    js> vm[context].x 要簡化成 vm.v('x') , vm.forth.y 簡化成 vm.r('y')
    13:11 2018-03-20 完成
    
[x] 請問 FORTH 的 select - case 結構怎麼實現？
    H.C.Chen
    週三 2018/4/4, 下午 09:45
    有網友問， 因為 if else then 多幾層之後，收尾就會有一大堆 then then then 
    then . . . . 不好看。我試著「畫」個樣子出來（如下），添加 start-case, case, 
    end-case 命令好像可以？有現成的設計嗎？

    start-case boolean1 if
      do case1  \ 然後跳到 end-case 之後
    case boolean2 if
      do case2  \ 然後跳到 end-case 之後
    case boolean3 if
      do case3  \ 然後跳到 end-case 之後
    case boolean4 if
      do case4  \ 然後跳到 end-case 之後
    end-case 

    - start-case 於 compile state 初始一個暫時獨立的 array 記錄每個 case 的位置；run time 不做事。
    - if 若成立，往下執行到 else 或 case 或 then 為止，跳到 then 或 end-case 之後。
    - if 若不成立，往下跳到 else 或 then 或 case。
    - case ， compile 跳往 end-case 的 jump 命令，向 start-case 登記自己的位置供 end-case 來回填它的位置; 。然後回填 here 給前一個 if ，
    - end-case ， compile time 要回填 here 給之前所有的 case。
        
    \ A1
    吳政昌(亞斯) <ccwu660601@gmail.com>
    週三 2018/4/11, 上午 08:45
    參考 https://github.com/phf/forth/blob/master/x86/jonesforth.f

    \ A2
    吳政昌(亞斯) <ccwu660601@gmail.com>
    週三 2018/4/11, 上午 08:36
    參考 https://www.complang.tuwien.ac.at/forth/gforth/Docs-html/Selection.html
    Selection - Gforth Manual
    5.8.1 Selection. flag IF code ENDIF . If flag is non-zero (as far as IF etc. are concerned, a cell with any bit set represents truth) code is executed. flag IF code1 ELSE code2 ENDIF
    www.complang.tuwien.ac.at

[x] EditBox edit box 壞了，有些 fields 殺不掉，改不了。
    [x] 先複習 ls.f 有啥東西 --> eb.delete 裡最後是這樣：
        ( eb name ) js: storage.del(pop()) ( eb ) removeElement ;    
    [x] storage <-- where from? ... from jeforth.3we\3htm\f\platform.f 
        js> storage.all() (see) 
        看到只有三個 fields 'ad' 'autoexec' 'pruning' 所以其他東西不該出現的難怪
        不能 delete!
    [x] 查 list command 怎麼回事？
        js> storage.all() obj>keys . 
            ad,autoexec,pruning,length,key,getItem,setItem,removeItem,clear OK 
        除了前三個 field，其他都是 object members. <--------- RI! 
        這些 members 可能是新的吧？ 為何以前沒有發現？
        --> 3hta 沒有 js> storage.all().length 
        [ ] 既然 chrome 有了新的 localStorage object members 咱就該考慮用上去，例
            如用 storage.all().length storage.all().key(i) 等等，而非目前的解法
            用 typeof(field)=='string' 來加一層分辨，有點簍。
    [x] js> storage.all() obj>keys . <--- 其中只有 editbox 的 fields 的 type 是 string
        可行的解法。 ----> 好了！ 改了 ls.f 的 list 之定義，利用分辨是否 string
        過濾掉非 editbox fields.
    FP @ 14:01 2018-04-12

[x] select-case 參考 T550 Downloads\jonesforth.f
    [x] 先查看 if else then 的寫法一不一樣 ... 差不多，所以照抄有機會
        : if ( -- a ) \ if..else..then, if..then
            compile 0branch here 0 , ; immediate compile-only
        : IF IMMEDIATE
            ' 0BRANCH , \ compile 0BRANCH
            HERE @      \ save location of the offset on the stack
            0 ,     \ compile a dummy offset
        ;
    [x] 直接抄 joneforth 立刻成功.
    [x] 3htm, 3hta 直接就通過了 selftest  

[ ] Yuan: 參考一下 Excel 增益集 JavaScript 程式設計概觀
    https://msdn.microsoft.com/zh-tw/library/office/mt616487.aspx
    Office Resources
    https://developer.microsoft.com/en-us/office/gallery/?filterBy=Samples

[ ] 13:00 2018/06/14 用 jupyter notebook 有兩種選擇： 
    1.  用 ijavascript kernel, 缺點就是沒有 magic 無法與其他 jupyter notebook 功能
        協作.
    2.  用 %%js 問題是跨 Cell 好像就斷了!
    
[x] 空谷居士：在我这边，因为，比源系统多增加include了一个汉化的文件，会有这么个小状况。
    以前也没有，不知道为什么，这两天发现冒出来了。
    yeap , include 1.f , 裡面只有一行 comment , 果真 stack 出現空 string 
    有空看看      
    RI: 本來的 || 定義有誤!!我當時知道，但是在 jeforth.3ca\3htm\f\quit.f 用上時忘了!
       was: code || push(pop(1)||pop()) end-code // ( a b == a || b ) if a then swap else b endif
      tobe: code || tos(1) ? pop() : pop(1) end-code // ( a b == a || b ) if a then a else b endif
    解決了!
    本來的寫法是直接套用 javascript 的 || 運算，當初想鐵定不會錯。
    現在看，因為 pop(a) || pop(b) 的特性，如果 pop(a) 成立了，pop(b) 根本不會被執行, 
    那就會把 b 留在 FORTH data stack 裡, 這個結果太奇怪，沒有用。所以要改寫。
    || 很少用，我用上了時不記得這種詭異的行為，結果出錯了，幸好被您發現!!
    
[X] 準備 release master 新版 release 新版 master
    - case ... endcase 
    - fix bug on ||
    - 
    [x] README.md to include
        http://cdn.rawgit.com/hcchengithub/jeforth.3we/r2/index.html?cls_include_tutor-cloth.f
        因為是中文的關係，不放在 README.md 已經放進 wiki 的首頁了…
    [x] jeforth.3we\js\version.js --> jeforth3we_minor_version = 305; 12:24 2018-06-17
    [x] 把 3ce 的啟始頁面改掉，不要用 Ynote 了，爛東西。
    [x] Check the date stamp at the bottom of README.md <-- 可以從 GitHub 網頁上直接改。
    [x] 示範如何 download 東西 from the python repo page 
    [x] Check project-k/projectk.js is included even when project-k folder is ignored
        ~\jeforth.3we>git add -f project-k/projectk.js
        * git add or rm command is the final decision of what to add and what to remove.
    [x] officeLAN 的警告不適合發布出去 --> 只限 OA 這台電腦
    o selftest them all
        [x] Carefully delete all application and run setup.bat to rebuild them
        [x] 3nw use 3hta to: fork cmd /c start nw ../jeforth.3we
        [x] 3nd use 3hta to: fork cmd /c node jeforth.3nd.js
            [X] include webserver.f
        [X] 3htm use 3nw or 3nd to include webserver.f and then localhost:8888
            [X] check version
        [x] 3hta, use 3hta to: fork jeforth.hta
        [x] 3ce, click its icon to launch it.
            [X] check version.
            [X] attach to target pages
        [x] 3ca, click Chrome App icon to launch it.
            [x] check version  3.305 now
        [X] Testing all demo, use 3ce or 3ca
            [X] 12choc.f ,
            [X] solar-system.f,
            [X] tutor-cloth.f
            [X] alarm.f ,
            [X] ball.f(non-selftest mode) ,
            [X] blowing-in-the-wind.f ,
            [X] box2dweb-arrow.f ,
            [X] calc.f ,
            [X] chipmunk-js-pyramidstack.f ,
            [X] flot-demo.f ,
            [X] numeric-demo.f
            [X] h2o.f ,
            [X] many-clocks.f ,
        [x] commit develop -> 將 develop 分支發佈到 Master 分支的命令 :
            切換到Master分支 : git checkout master
            合併 develop 分支進 master 來 : git merge --no-ff develop
            ==> 已經改用 GitHub Desktop 只要切到 master 然後 Menu > 
                Branch > Merge into current branch 就行了。
        [/] Test the master all over again ... ignored, lazy.
        [x] Upload master to GitHub : git push
        [x] Complete this log.txt
        [/] GitHub 上的 README.md 範例都指向 r2 要改成 rn --> 懶得改
        [/] release note
        [X] Master 到回 develop
            切換到Master分支 : git checkout develop
            合併 develop 分支進 master 來 : git merge --no-ff master

-----------------------------------------------------
[ ] 17:27 18/08/02
    3ce 不太穩定 ce.f 裡面有 shooo! 跟 notyet 的地方都要再加強測試。
[ ] 我想寫下導覽，把 3ce 的整套設計用實驗步驟的方式講清楚，以後自己複習也方便。
    --> See Ynote "jeforth.3ce 導覽"
    --> 查以前的筆記，找 dictate(), (dictate) 之類，找 sendMessage 可能更好
        [ ] Log of TR.ht試ml 真的有
        [ ] log.txt 本身也很多。 --> 直接在上面複習，寫下筆記。
        [ ] ls.f search 3ce 有些 message 的例子
    3ce 光設定 tabid! 而沒有 attach 到 target tab 則 F7 就無效，是這樣嗎？ 複習一下。
    
    --> 光看 ce.f 就對了
    --> background.f 只有在 reload 3ce 時才會被 run 到，其中定義的東西只有在 attach
        時才會被用到。直接研究 attach 就是 3ce 的精華。
    --> 都忘光光了 ce.f 裡的 ce3_host_onmessage() 只有在 attach 時才會被 call 到，而且一大堆。
[ ] 先瞭解 sendMessage 有幾種，每個都試試看，確定他們的玩法
    --> 從 target page 打給 background page
        js: chrome.runtime.sendMessage({addr:"background",forth:pop()})         
[ ] 直接 trace ce.f 吧！
[ ] 搞懂之後，弄個 attach 選項，不要去干擾 target page 直接用 3ce page 去控制 target page。
-----------------------------------------------------
[ ] 寫個工具用來把網頁上的 youtube hyperlink 都列出來, 方便寫成 youtube-dl 的 script 
-----------------------------------------------------
[ ] 14:24 2019-01-22 Rawgit 已經熄燈了，改用 www.forth.org.tw 
[/] element.f 合併到 html5.f 裡去 
    No! element.f 會被個別用到, 例如 3ce 的 target.f 
[/] ls.f & unindent.f 合併到 hte.f 裡去 (Hyper Text Editor)
    No! unindent.f 很多地方有個別用到，是個很獨立的 module; 
    hte.f is actually the alt-F2 editor; ls.f is the Local Storage code editor.
    They are all different things. ls.f 還是很好用，只要它不要搶出頭就好了，保留。
[ ] 把教學影片收集到 wiki 裡某頁面上。
[x] 重複 include misc.f 會把 misc.f 變到 vocs 的最後 也就是 order 的最高，為何？
    因為 source-code-header 有做了手腳，它發現 misc.f 已經 loaded 就不會重新 scan.
    這個 trick 不錯，但是並沒有省掉 include 多浪費的 I/O 時間。實際把例子中的 misc.f
    變成 context 的是 prioritize command. 我有點印象，差不多都忘了!
[x] 17:36 2019-01-22 協會網址不該變來變去，否則文件、Tutorial等會到處斷鍊。
    Look at the URL mentioned in this Tutorial of jeforth.3we. (https://www.camdemy.com/media/19253)
    There have been many of them!! So how can people be sure that www.forth.org.tw 
    will not be dropped some day? why not www.figtaiwan.org 
    as before? 恕我直言。
    協會官方網址要固定，因為以前錄好的影片上都說網址是 www.figtaiwan.org。
    目前的例子是 jeforth 的 demo 程式網址因為 rawgit 停止服務而斷鍊。
    幸好有 理事長提供 www.forth.org.tw 可以修復，可是以前都說是 www.figtaiwan.org
    改掉就出問題了。同理，內容的目錄結構可能也要有規範，是不是？
    --> 有點熱心總比停掉了好，別提了。
-----------------------------------------------------
[X] 2020/03/21 10:45:24 前兩天玩 proeforth 時發現原先的 args 取得過程有缺陷，當 path 帶有空格時
	不靈，當時已經找好 solution 了。。。 好像記錄在 proe.f 裡。。。 是的。
	問題
	原來的設計，整串 argv[0] 都沒有空格，這樣就沒問題：
		> js> hta.commandLine . 
		"C:\Users\8304018\Documents\GitHub\jeforth\jeforth.3hta\jeforth.hta" 111 222 333 OK 
		> dropall args .s
			0: 111 222 333 (string)  <--------- args 就是 command line 上的 arguments, 這個正確。 
	可是如果 argv[0] 裡有空格 args 就會出錯
		> js> hta.commandLine .           v---- 這裡有個 space 
		"C:\Users\8304018\OneDrive\OneNote Notebooks\Work2020(local)\attachments\proeforth\proeforth.hta" 111 222 333 >>> 	
		> dropall args .s
			  0: Notebooks\Work2020(local)\attachments\proeforth\proeforth.hta" 111 222 333 (string)
                 ^
				 '----- args 就是 command line 上的 arguments, 這個從 argv[0] 的 pathname 裡多抓了一些空格後的
				        東西出來 mistakenly。 
	-->	不論如何，argv[0] 的 ~.hta pathname 都會有 double quot 所以可以用 double quote 先把整
		個 argv 切成三份，取中間跟尾巴兩份就對了，因為 jeforth command line 禁用 double quote.
		這麼一來，solution is : 
		dropall 
		<js> (hta.commandLine + " dummy").split(/\"/).slice(1) </jsV> 
		dup :> [0] swap :> [1] trim :> split(/\s+/).slice(0,-1) .s
		結果：
		0: C:\Users\8304018\OneDrive\OneNote Notebooks\Work2020(local)\attachments\proeforth\proeforth.hta (string)
		1: 111,222,333 (array)
	-->	合併成 args array --> js: tos().unshift(pop(1))
		0: C:\Users\8304018\OneDrive\OneNote Notebooks\Work2020(local)\attachments\proeforth\proeforth.hta,111,222,333 (array)
	--> args 在哪裡 composed 的? 之前的 vm.argv 就已經錯了
		> dropall js> vm.argv .s
			0: "C:\Users\8304018\Documents\GitHub\jeforth\jeforth.3hta\jeforth.hta",111,222,333,"abc,def" (array)
		> dropall js> vm.argv .s                 v------- 這裡錯了！
			0: "C:\Users\8304018\OneDrive\OneNote,Notebooks\Work2020(local)\attachments\proeforth\proeforth.hta",111,222,333 (array)
	--> jeforth.hta 中 kvm.argv 應該這樣處理
		kvm.argv = (hta.commandLine + " dummy").split(/\"/).slice(1); // double quote cut and get [0]pathname [1]argv+dummy
		kvm.argv = kvm.argv[0].concat(kvm.argv[1].split(/\s+/).slice(1,-1));
[X] 2020/03/21 15:02:24 忘了外掛的 .js 該怎麼處理。先找找看看 numeric-1.2.6.js 又是怎麼用的?
	c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3hta\external-modules\numeric\numeric-1.2.6.js 
	c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3hta\3htm\f\numeric.f 
	--> 已經寫好 numeric.f 用 include numeric.f 就可以了，flot 也是這樣用。我好棒！
	--> 直接把 CREOSON 的 .js copy-paste 放進 <js></js> 裡跑跑看。。。。 
		> include.js creoson_creo.js \ 用這個方式跟 copy'n paste to <js></js> 是等效的，但是會出問題：
		JavaScript error on word "sinclude.js" : Expected ';'
		--> 原因是 creoson_???.js 中有用到很多新的 keyword "let" 而 HTA (JScript v11.0.16384) 不認得。
		--> 解法是把所有 .js files in \web\assets\creoson_stuff\creoson_js 裡的 let 改成 var 就好了。
[X] 2020/03/21 20:23:56 不只 let 連 Object 的 support 也不全，算了，別用 HTA for Creoson 了。
	-->	改用 3ca 算了。
--------------------------------
[ ] 2020/03/21 20:48:05 改用 3ca 又有怪事 
		cls char playground/1.jss readTextFile . <-- 1 或 1.jss 都可以讀到，改名成 1.js 就讀不到了。
		既然本來就要加 push(creo) 了，乾脆改成 ~.f 算了 ==> 改寫成 creoson_creo.f 成功！ 
	--> 改成 .f 太麻煩了，一大堆要改的。不如直接 <script></script> include 進去好了。

		<!-- CREOSON_JS Libraries -->
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/common_creoson_ajax.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/common_creoson_utils.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_bom.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_connection.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_creo.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_dimension.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_drawing.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_familytable.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_feature.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_file.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_geometry.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_interface.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_layer.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_note.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_parameter.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_view.js"></script>
		<script type="text/javascript" src="assets/creoson_stuff/creoson_js/creoson_windchill.js"></script>
	--> 以上 17個 .js 都直接 copy 進 jeforth.3ca\js\
	--> 把上面這段抄進 jeforth.3ca\index.html 路徑改成 js/foobar.js, 這樣就成功了！
	--> refresh jeforth.3ca 馬上生效，查 js> creo . 有東西
	[ ]	LPM2 上的 develop branch 3ca index.html 改了, 不用要記得改回去。當初就該用分支 branch 才對。
	[X] 研究 http://localhost:9056/playground.html 要花點時間，心生退意，用 python 就好了。
		或者直接用 web-link 看看。。。。
		--> shit, 超簡單：https://eacpds.com/getting-started-creo-web-link/ with diggo notes.

[ ] 2020/03/24 13:51:41 是 pro/e weblink 時在 built-in browser 下 DOM windows 的 (see) 看到：
		f :   function(a,b){
				var id = setTimeout(a,b);
				registered[id.toString()] = id;
				return id;
			}
		colonxt :   function(){
			rstack.push(ip);
			inner(this.cfa);
		}
	看起來是 private 留下來的東西，應該是有問題。
	
[X] 2020/04/02 16:26:45 看到用 python webserver 閱讀 Web.Link 手冊還能用 Diigo 記筆記，想到何不用 Jupyternotebook?
	結果發現若用 Jupyternotebook 當 webserver 還是可以與 Diigo 配合畫線、寫眉批、作筆記。但是跑 jeforth.3htm 就不行
	了，因為會有 Cross-Origin Read Blocking (CORB) 的障礙。
    https://onedrive.live.com/view.aspx?resid=A796EA18AC8C1DA9%2112567&id=documents&wd=target%282020.one%7CA8067B81-21D2-404E-85C4-C6E065D857AB%2F%5BClosed%5D%20Jeforth.3htm%20%E7%94%A8%20jupyternotebook%20%E8%B7%91%E4%B8%8D%E8%B5%B7%E4%BE%86%7CE2AC6CD4-292A-4DB5-989C-5017CC8825C4%2F%29
	onenote:https://d.docs.live.net/a796ea18ac8c1da9/文件/OneNote2020/2020.one#%5bClosed%5d%20Jeforth.3htm%20用%20jupyternotebook%20跑不起來&section-id={A8067B81-21D2-404E-85C4-C6E065D857AB}&page-id={E2AC6CD4-292A-4DB5-989C-5017CC8825C4}&end
    
[X] 構想 proeforth 除了 forth 也提供 javascript console 類似 peforth 的結構。
    2020/04/28 14:31 構想 proeforth 除了 forth 也提供 javascript console 類似 peforth 的結構。
    --> trace baby.html of project-k to recall how to make a console --> 懂了，網頁 ready 時登
    記 hotKeyHandler() 給 document.onkeydown 而 hotKeyHandler 只負責把 command line 準備好就接
    著 call forthConsoleHandler(vm.inputbox) 它才是 main loop equivalent. --> 利用 baby.html 改
    成 test.html 把forthConsoleHandler(vm.inputbox) 改成處理 javascript 看看效果。。。。。成功！
    Project-k baby.html 只改一小段即成：
            // function forthConsoleHandler(cmd) {
            //     type((cmd?'\n> ':"")+cmd+'\n');
            //     vm.dictate(cmd);  // Pass the command line to jeForth VM
            //     type(" " + vm.prompt + " ");
            //     window.scrollTo(0,endofinputbox.offsetTop); inputbox.focus();
            // }

            function forthConsoleHandler(cmd) {
                type((cmd?'\n> ':"")+cmd+'\n');
                result = eval(cmd);
                type(result + "\n");
                window.scrollTo(0,endofinputbox.offsetTop); inputbox.focus();
            }
    結果：
        > 123
        123
        > document.title
        jeforth baby
        > document
        [object HTMLDocument]
        變成 JavaScript console 了。
    
[X] 2020/04/28 16:36:48 接下來比照 peforth 也寫個 ok() 擔任 main loop 的腳色。
    --> 先查看一下 peforth 的 ok() .... peforth\__init__.py 
    function ok(prompt='OK ',cmd=""){
        type((cmd?'\n> ':"")+cmd+'\n');
        vm.dictate(cmd);  // Pass the command line to jeForth VM
        type(" " + vm.prompt + " ");
        window.scrollTo(0,endofinputbox.offsetTop); inputbox.focus();
    }
    2020/04/29 10:59:57 --> 錯了，不能比照 peforth.ok() 它是 synchronous 而 jeforth 可不是。只好引進
    kvm.lang = 'js' or 'forth' 來切換 language. 這樣很簡單。這個 function 本來叫 forthConsoleHandler 
    要改名叫 consoleHandler 了，因為不只是 forth, js too. 
    結果 --> 
        OK jeforth.3we\3htm\js\jeforth.3htm.js > kvm.forthConsoleHandler = function(cmd){} 
        改好 3we 在 3ca 上就馬上生效, 
        default lang='forth'
        > js: lang='js'  切換
         OK 
        undefined  按 enter 變成回覆 undefined 了
        undefined
        > kvm.dictate("char abc .")
        abc[object Object] 早就有 function cascade 了, 
        > kvm.dictate("")==kvm
        true
        > kvm.push(123).push(234).dictate("+").pop()
        357    
    [X] also these files contains forthConsoleHandler 
        [X] c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3we\3htm\f\platform.f
            --> run-inputbox code definition 裡面 ForthConsoleHandler 改成 consoleHandler 好了
        [X] jeforth.3ce.js
            --> 隨便敲甚麼都 error : JavaScript error on word "run-inputbox" : vm.consoleHandler is not a function
            --> ForthConsoleHandler 改成 consoleHandler 好了。但是改 lang='js' 無效。
            --> 因為 forthConsoleHandler 要改寫, kvm.lang = 'forth' 初值也要給。
            --> 3ce 果然好了。切換 'js' <> 'forth' ok 了
        [X] jeforth.3nd.js    
            --> 照上面改也好了。3nd 略有不同，但不難改。
        [X] c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3we\3ce\target.f
            --> attach 上 target page 與以上各處等價，都要改同樣的三個地方。
                可是 target.f 裡的 run-inputbox 根本沒用到，所以沒改到也沒問題。。。怎麼回事？
                --> 因為它自有一套 forthConsoleHandler 還在。可能在 ce.f? -- Yes!  
        [X] c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3we\3ce\ce.f    
            --> target web page 的 consoleHandler 改好就好了。
        [X] c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3we\3hta\f\jquery.f
            --> 之前 jeforth.3htm.js 一改 3hta 就已經出問題了
            --> 改了幾版，駕輕就熟，3hta 也好了。
        [X] c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3we\jeforth.3nw.html 
            --> 改好了要灌 nw.js 才行。。。好了。
        [X] 用 window.lang 不好！ vm.lang 才對 --> all done. <=== 錯！
            
[ ] release to master 吧，好了以後把 develop , develop2 都丟掉換新的 develop branch. 
[ ] 準備 release master 新版 release 新版 master
    - vm.lang='js' or 'forth' 
    - proeforth support
    [ ] ls.f 的東西要測一側，好像不靈。
    [ ] 把 3ce 的啟始頁面改掉，不要用 Ynote 了，亂擋。
    [ ] Check the date stamp at the bottom of README.md <-- 可以從 GitHub 網頁上直接改。
    [ ] 示範如何 download 東西 from the python repo page 
    [ ] Check project-k/projectk.js is included even when project-k folder is ignored
        ~\jeforth.3we>git add -f project-k/projectk.js
        * git add or rm command is the final decision of what to add and what to remove.
    [ ] officeLAN 的警告不適合發布出去 --> 只限 OA 這台電腦
    o selftest them all
        [ ] Carefully delete all application and run setup.bat to rebuild them
        [ ] 3nw use 3hta to: fork cmd /c start nw ../jeforth.3we
        [ ] 3nd use 3hta to: fork cmd /c node jeforth.3nd.js
            [ ] include webserver.f
        [ ] 3htm use 3nw or 3nd to include webserver.f and then localhost:8888
            [ ] check version
        [ ] 3hta, use 3hta to: fork jeforth.hta
        [ ] 3ce, click its icon to launch it.
            [ ] check version.
            [ ] attach to target pages
        [ ] 3ca, click Chrome App icon to launch it.
            [ ] check version  3.305 now
        [ ] Testing all demo, use 3ce or 3ca
            [ ] 12choc.f ,
            [ ] solar-system.f,
            [ ] tutor-cloth.f
            [ ] alarm.f ,
            [ ] ball.f(non-selftest mode) ,
            [ ] blowing-in-the-wind.f ,
            [ ] box2dweb-arrow.f ,
            [ ] calc.f ,
            [ ] chipmunk-js-pyramidstack.f ,
            [ ] flot-demo.f ,
            [ ] numeric-demo.f
            [ ] h2o.f ,
            [ ] many-clocks.f ,
        [x] commit develop -> 將 develop 分支發佈到 Master 分支的命令 :
            切換到Master分支 : git checkout master
            合併 develop 分支進 master 來 : git merge --no-ff develop
            ==> 已經改用 GitHub Desktop 只要切到 master 然後 Menu > 
                Branch > Merge into current branch 就行了。
        [ ] Test the master all over again ... ignored, lazy.
        [ ] Upload master to GitHub : git push
        [ ] Complete this log.txt
        [ ] GitHub 上的 README.md 範例都指向 r2 要改成 rn --> 懶得改
        [ ] release note
        [ ] Master 到回 develop
            切換到Master分支 : git checkout develop
            合併 develop 分支進 master 來 : git merge --no-ff master
    [ ] jeforth.3we\js\version.js --> jeforth3we_minor_version = 306; 2020/05/04 11:29:14 
[X] 2020/05/04 16:49:45 如何在 HTML 裡夾檔 attachment embeded audio video and pictures, 以前研究
    過 refer to html5_audio_demo.f also proeforth.  
    圖片的 embeded or attachment 夾檔，寫法如下。
    <img src="data:audio/mpeg;base64,整塊 base64 放這裡，空格都會被忽略。" style="width:auto;"></img>
    mp3 的 embeded 夾檔，寫法如下，主要部份同上：
    <audio controls>
      <source src="data:audio/mpeg;base64,整塊 base64 放這裡，空格都會被忽略。" type="audio/mpeg">
      Your browser does not support the audio element.
    </audio>
    把圖片音樂檔轉成 base64 有 online 服務: 
    \ Base64 encoder online 
    \ http://www.motobit.com/util/base64-decoder-encoder.asp export to a file, 
    \ then copy-paste the base64 code into the <source> tag as demo here.

----- proeforth for web.link ------------------ 
我發現開發 proeforth 也會到回來影響 jeforth , 例如 kvm vm 徒增麻煩 --> 都改成 vm 就是個好覺醒。
[X] 2020/05/05 13:10:07 dd3f was ok 0560 in trouble what's the difference? 
[x] 2020/05/05 15:58:03 pfc 都改成 sess
[x] 2020/05/05 15:58:03 pwl 都改成 pfcScript
[X] 2020/05/05 15:58:03 wlc, wlf 同時也弄成 window.wlc window.wlf 
[X] 2020/05/05 15:58:03 enumerator 改寫成 create does> 用來產生 enumerator e.g. pfcArgValueType
    使用時就是 pfcArgValueType :> ARG_V_STRING 或者 js> pfcArgValueType.ARG_V_STRING
[X] 2020/05/06 09:16:47 把所有 kvm 都改成 vm 之後其實很成功 lang='js' 切成 js 之後：
    res = pfcScript.pwlParameterValueGet("cube.prt",wlc.PWL_MODEL,0,"ACER_PN")
    type(res+"\n")
    JavaScript error on word "run-inputbox" : Object doesn't support this property or method
    這個錯誤不是問題！Web.Link 的 object 直接印出有 native object 的 .toString() 沒問題；
    但是 + "\n" 就把它考倒了，因此出錯很自然。
    [ ] jeforth, peforth 全改了吧！把 kvm 都改成 vm. 不太放心。。。。
[X] 如果 js console 前一行 command line 的結果是 undefined 就不要顯示了。
        vm.consoleHandler = function(cmd) --> if(result != undefined) type(result + "\n");
    [X] proeforth, [x] jeforth, [ ] peforth 
    
[X] 2020/05/07 18:31:13 proeforth 這段不對，所以 Creo 5 can't run proeforth.
    js> typeof(ActiveXObject)=="undefined" [if]
        ." I don't sense running in Pro/E, skip including weblink.f." cr
    正確方法是用所有 browser 都有的 navigator.appVersion 來查，但小心！兩個 or 起來：   
    js> navigator.appVersion.indexOf('Creo') \ Check Creo -1:Fail otherwise:OK  for Creo 5.0
    js> navigator.appVersion.indexOf('ProE') \ Check ProE -1:Fail otherwise:OK  for Creo 2.0
        
[X] 既然介紹人家讀 http://wiki.laptop.org/go/Forth_Lesson_1 就該讓 words 盡量一致
    --> 放在 quit_f section
[ ] 2020/05/12 08:10:19 proeforth 下，check js> window obj>keys --> found f,s,clearTimeout,setInterval,setTimeout,clearImmediate,msClearImmediate,msSetImmediate,setImmediate(object)         
    colonxt,s,storage, o,result, etc 
    [ ] 所有 jeforth 版本都該查一查。。。
[X] 2020/05/12 10:23:21 意外發現 0 execute 會半路停止 colon word!!
    e.g. : test 123 456 0 execute 789 ; 
    i.e. : test 123 456 ['] foobar execute 789 ; 
    --> this is normal!! 0 execute is exactly RET EXIT equivalent !!

[ ] 查 vm 看到一些 selftest 留下的雜物，應該要清掉
    delete(vm.vvv000) delete(vm.vvv) 
    [ ] jeforth, peforth 全改了吧！
    [ ] why 3HTA js> vm obj>keys 就沒有 vvv vvv000 殘留？ 3CA 有。3nd 也有。3nw 也沒有。
        設斷點檢查。。。
[X] 為何 vocabulary 要出現在 vm？ --> check what are they? 哈！我自創設計的 private 啦！
    爽哥的建議，既然要讓 forth variables 能從 js 直接取用，就都各自放進 vocabulary 裡去。
        
[ ] Variables 要有 destructer! 否則 forget 或 marker 之後會殘留在 vocabulary 裡。
    [ ] 2020/05/12 08:15:02 何不直接用 vm['misc.f']['x'].value ? 跟著 x 被 forget 就好了。
    [ ] 2020/05/07 14;01:02 jeforth's variables are also existing in vm.forth or vm or vm.g or 
        vm['volcabulary'] when the forth variable is forgot or removed by marker the js copy 
        will be still there. So a destructor is needed for them. The design is not completed 
        at all.
    [ ] peforth 也要變革    
    [ ] variable 何不用自己的 object? 何必用 vm, vm.g, vm.forth, vm.vocabulary 這種東西？
        目前 jeforth value & constant 是這樣
        > see base or see args or see tab-spaces 
                    name : base (string)
                     vid : forth (string)
                     wid : 199 (number)
                    type : value (string)
                 private : false (boolean)
                    help : ( -- base ) decimal base is 10, hex base is 16, can be any number. (string)
                selftest : pass (string)
                      xt :
        function(){push(vm["forth"]["base"])}  <---- 這就是可能會有殘留的方法
        --> 如果是這樣 
            tick('x').value 
            反而是又快、又合理的方法，因為 tick() 有考慮到且用到 wordhash[]。
        [ ] 仿 peforth 進一步用 v('varName') or r('varName') 即可。
            但目前 v() 不是用 tick('x') 的，應該不是很正確。r('y') 可能還好，但可能根本不必存在。
            def v(name):
                return getattr(vm,context)[name]
            def r(name):
                return vm.forth[name]

[X] 2020/05/18 09:11:09 Web.Link, Gary Wei 的 Creo 可以離線 run 結果在公司沒有 Internet 跑 proeforth
    就會卡在 including jquery --> 改成先從 local include 沒有才從 internet include. 
[ ] 刪簡 words 改寫 selftest 使其變成 proeforth 的說明文件


[X] 2020/05/26 09:52:22 推算 stack 的小工具。
    真實的場景是
        char pfcModelItemType pfcCreate :> ITEM_COORD_SYS ( "NODE_REF8" diameter instrs solid ITEM_COORD_SYS )  
        想要：over :> GetItemByName(ITEM_COORD_SYS,"NODE_REF8") constant csys // ( -- obj ) 要種 UDF 上去的參考座標     
        應作：over :> GetItemByName(pop(),tos(3)) constant csys // ( -- obj ) 要種 UDF 上去的參考座標     
    不容易有把握地推算出 tos(3) 因此需要這個實驗工具。
        <js>
        func = function(a,b){ type('a=' + a + ', b=' + b) }
        push(func)
        </js> constant func
        > func :: (12,34) --> a=12, b=34 OK 
        > 12 34 56 func 78 over :: (pop(),tos(3)) --> a=78, b=12 OK 
        > .s
              0:          12           ch (number)
              1:          34          22h (number)
              2:          56          38h (number)
              3: function(a,b){ type('a=' + a + ', b=' + b) } (function)
         OK 
[ ] proeforth 發現的問題， forth order 應該是從後往前找，hash 從前往後加就可以後蓋前達到效果。可是
    為何 include playground 之後 see . 變成舊版？明明 playground 之前就是 web.link 了。
    2020/05/27 16:34:08 只要來一下 rescan-word-hash 就可以解決這個問題。那為何 include playground
    沒有自動做(嗎)？ 我記得以前想讓 include vvv 與執行 vvv 等效，這是在照顧重複執行 include vvv 時
    的效果，值得嗎？執行 vvv 肯定是沒有做 rescan 的，這是為了在 interpret state 執行 [repeat]...[again]
    之類的 loop 時若有切換 context 不會影響 performance 太大。結論是： include 應該自動 rescan.  <== 錯！
    也有可能是 proeforth 的 include 改寫過了出的問題。 
    --> 以上推論錯了，加 rescan-word-hash 到 sinclude 與 include 都無效，因為問題出在 source-code-header
    與 include 關連不大。因為 header 為了把新 vocabulary 放進 forth root 而有切到 forth 去
    隨後「切換到新 vocabulary 時」有切換卻沒有 rescan 這本來就有問題了。修改如下：
    
    : header        ( -- 'head' ) \ ~.f common header
                    EOF :> pattern <text>
                        \ ~.f common header
                        ?skip2 _eof_ \ skip it if already included
                        dup .( Including ) . cr char -- over over + +
                        js: tick('<selftest>').masterMarker=tos()+"selftest--";
                        also forth definitions (marker) (vocabulary)
                        last execute definitions rescan-word-hash \ <===== 加 rescan 
                        <selftest>
                            js> tick('<selftest>').masterMarker (marker)
                        </selftest>
                    </text> :> replace("_eof_",pop()) ; private
                    
    全部都要改： [X] proeforth [X]jeforth@2020/06/09  [ ] peforth 
    
[X] include playground 之後 . 大亂。
    2020/05/27 16:14:38 RI, 以前發現過，問題出在 weblink.f 的 >js 用到 
        vm.v('wlkeys').forEach(function(key){. . .  
    這種用法，一旦 context 切走，它就失效了。偏偏 web.link 裡有重新定義過 . 而且 web.link 的 order 
    又高於 root forth , 所以就完蛋了。改成:
        vm['weblink.f']['wlkeys'].forEach(function(key){
    解決了這個問題。
    
[ ] 2020/06/03 10:30:04 
    常用的 for loop example improved
    /// 5 dup [for] dup t@ - ( count i ) . space ( count ) [next] drop
    /// 5 dup for dup r@ - ( count i ) . space ( count ) next drop 
    [X] proeforth [ ] peforth [ ] jeforth 

[ ] 2020/06/03 10:30:10 
    ?skip2 拆分出 skip2 ( "@#$mark$#@" --  ) \ skip TIB to after "@#$mark$#@"
    相當於 stop including command. peforth 有 break-include 但它是跳過整個 tib 比較侷限。
    [X]proeforth  [ ]peforth [ ]jeforth.3we  

[X] 2020/06/03 10:29:52 proeforth 裡, unindent 應該由 tutor 來 include 
    include unindent_f
  \ include tutor

[X] 2020/06/03 10:38:04 proeforth
    乾脆不讓 proeforth 自動 include weblink 了，讓 user 自己手動作可避免 proeforth 當成 homepage 
    時 ActiveX 的 warning 跳出來，此時 Creo 也跳出來問要不要 retrieve 先前的檔案，變成打架。
    [X] 把 unindent.f tutor.f 都移進 outputbox. 

[X] 2020/06/03 15:39:37 HTML button onclick handler event call back 設定不能直接寫在 HTML tag 裡，被禁止。
    這個簡單，我的 alarm.f 就有範例。簡單的例子如下：
    <o> <input type="button" value="include weblink"></o>
    <js> pop().onclick=function(){vm.dictate("include weblink")} </js>
    
[ ] 2020/06/04 10:16:11 help 漏了一點東西
    Sift+BackSpace is faster, Ctrl+BackSpace to also erase DOM elements, Ctrl+Shift+BackSpace does it faster
    [, Alt+ all above combinations to erase from top].
    [X]proeforth  [ ]jeforth  [ ]peforth

[ ] 2020/06/04 11:23:13 改寫 (help) 讓 help * 有滾動，自然一點。
    : (help) ( "['pattern' [-t|-T|-n|-f]]" -- )  \ Print help message of screened words
            <js> pop().replace(/\s+/g," ").split(" ") </jsV> ( spec[pattern,option,rests] )
            \ for (var j=0; j<order.length; j++) { // 越後面的 priority 越新
            js> order.length         ( spec[pattern,option,rests] COUNT )
            ?dup if dup for dup r@ - ( spec[pattern,option,rests] COUNT i ) 
                js> order[tos()]     ( spec[pattern,option,rests] COUNT i vocabulary ) 
                js> tos(3)[0]||""    ( spec[pattern,option,rests] COUNT i vocabulary pattern )        \ push(spec[0]||"")
                js> tos(4)[1]||""    ( spec[pattern,option,rests] COUNT i vocabulary pattern option ) \ push(spec[1]||"")
                word_select          ( spec[pattern,option,rests] COUNT i [words...] ) 
                \ var word_list = pop();
                \ var voc = "\n--------- " + order[j] +" ("+ word_list.length + " words) ---------\n";
                s" \n--------- orderj ( word_list_length words) ---------\n"                        ( i [words...] s ) 
                js> pop().replace(/orderj/,order[tos(2)]).replace(/word_list_length/,tos(1).length) ( i [words...] s ) 
                \ 印出                            ( i [words...] s ) 
                js> tos(1).length if . else drop then ( i [words...] ) 
                js> tos().length ?dup if dup for dup r@ - 
                    ( i [words...] COUNT j ) 
                    js> tos(2)[pop()] help(word) 1 nap js: vm.scroll2inputbox();inputbox.focus()
                    ( i [words...] COUNT ) 
                next drop then
            ( spec[pattern,option,rests] COUNT i [words...] ) 2drop ( COUNT ) next drop then
            ( spec[pattern,option,rests] ) drop ;
    [x] proeforth [ ] jeforth [ ] peforth 



[X] 2020/06/09 11:00:09 3HTA selftest failed at clipboard test on calc.
[X] 2020/06/09 10:10:48 發現 3hta UI 有經 selftest 全都在 UI command line 發生
    JavaScript error on word "run—inputbox" doesn't support property or method 'consoleHandler'
    原因是 jeforth.hta 裡仍有 ForthConsoleHandler 沒改到，改成 'consoleHandler' 就好了。但奇怪
    的是，不經 selftest 就沒問題。。。。 RI: 這兩個 file 竟然不同！斷鏈了？非也，是我自己搞忘了. . . 
        c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3hta\jeforth.hta <--- 這個是獨立的，改它只為暫時實驗。其他 application 也都是這樣，好像是 executable 必須。
        c:\Users\8304018\Documents\GitHub\jeforth\jeforth.3we\jeforth.hta
    [X] 趕快補救。。 比對，還好只有這個問題。clipboard selftest 也好了。
[X] 3hta does not include jquery.f and jeforth.htm.js but they are still in there.
    2020/06/09 10:26:02 jquery.f        確定已經 obsoleted 可以拿掉了。
                        jeforth.htm.js  只是因為整個 3htm folder 都含進 3hta 以便共用其中的東西 e.g. canvas.




